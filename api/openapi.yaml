openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Welcome to the Amazon AppFlow API reference. This guide is for\
    \ developers who need detailed information about the Amazon AppFlow API operations,\
    \ data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration\
    \ service that enables you to securely transfer data between software as a service\
    \ (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon\
    \ Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links\
    \ to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\"\
    >Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li>\
    \ <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\"\
    >Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li>\
    \ <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\"\
    >Common parameters</a>: Parameters that all Query operations can use.</p> </li>\
    \ <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\"\
    >Common errors</a>: Client and server errors that all operations can return.</p>\
    \ </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review\
    \ the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\"\
    >Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific\
    \ mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code>\
    \ and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code>\
    \ when creating a new connector profile using Amazon AppFlow API operations. For\
    \ example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"\
    > <i>Authorize Apps with OAuth</i> </a> documentation.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Appflow
  version: 2020-08-23
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: appflow
  x-aws-signingName: appflow
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appflow-2020-08-23.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/appflow/
servers:
- description: The Amazon Appflow multi-region endpoint
  url: "http://appflow.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Appflow multi-region endpoint
  url: "https://appflow.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Appflow endpoint for China (Beijing) and China (Ningxia)
  url: "http://appflow.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Appflow endpoint for China (Beijing) and China (Ningxia)
  url: "https://appflow.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /cancel-flow-executions:
    post:
      description: "<p>Cancels active runs for a flow.</p> <p>You can cancel all of\
        \ the active runs for a flow, or you can cancel specific runs by providing\
        \ their IDs.</p> <p>You can cancel a flow run only when the run is in progress.\
        \ You can't cancel a run that has already completed or failed. You also can't\
        \ cancel a run that's scheduled to occur but hasn't started yet. To prevent\
        \ a scheduled run, you can deactivate the flow with the <code>StopFlow</code>\
        \ action.</p> <p>You cannot resume a run after you cancel it.</p> <p>When\
        \ you send your request, the status for each run becomes <code>CancelStarted</code>.\
        \ When the cancellation completes, the status becomes <code>Canceled</code>.</p>\
        \ <note> <p>When you cancel a run, you still incur charges for any data that\
        \ the run already processed before the cancellation. If the run had already\
        \ written some data to the flow destination, then that data remains in the\
        \ destination. If you configured the flow to use a batch API (such as the\
        \ Salesforce Bulk API 2.0), then the run will finish reading or writing its\
        \ entire batch of data after the cancellation. For these operations, the data\
        \ processing charges for Amazon AppFlow apply. For the pricing information,\
        \ see <a href=\"http://aws.amazon.com/appflow/pricing/\">Amazon AppFlow pricing</a>.</p>\
        \ </note>"
      operationId: CancelFlowExecutions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelFlowExecutions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelFlowExecutionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /create-connector-profile:
    post:
      description: " Creates a new connector profile associated with your Amazon Web\
        \ Services account. There is a soft quota of 100 connector profiles per Amazon\
        \ Web Services account. If you need more connector profiles than this quota\
        \ allows, you can submit a request to the Amazon AppFlow team through the\
        \ Amazon AppFlow support channel. In each connector profile that you create,\
        \ you can provide the credentials and properties for only one connector."
      operationId: CreateConnectorProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectorProfile_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectorProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAuthenticationException'
          description: ConnectorAuthenticationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /create-flow:
    post:
      description: " Enables your application to create a new flow using Amazon AppFlow.\
        \ You must create a connector profile before calling this API. Please note\
        \ that the Request Syntax below shows syntax for multiple destinations, however,\
        \ you can only transfer data to one item in this list at a time. Amazon AppFlow\
        \ does not currently support flows to multiple destinations at once. "
      operationId: CreateFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFlow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAuthenticationException'
          description: ConnectorAuthenticationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorServerException'
          description: ConnectorServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /delete-connector-profile:
    post:
      description: ' Enables you to delete an existing connector profile. '
      operationId: DeleteConnectorProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConnectorProfile_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConnectorProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /delete-flow:
    post:
      description: " Enables your application to delete an existing flow. Before deleting\
        \ the flow, Amazon AppFlow validates the request by checking the flow configuration\
        \ and status. You can delete flows one at a time. "
      operationId: DeleteFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFlow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describe-connector:
    post:
      description: Describes the given custom connector registered in your Amazon
        Web Services account. This API can be used for custom connectors that are
        registered in your account and also for Amazon authored connectors.
      operationId: DescribeConnector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConnector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConnectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describe-connector-entity:
    post:
      description: " Provides details regarding the entity used with the connector,\
        \ with a description of the data model for each field in that entity. "
      operationId: DescribeConnectorEntity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConnectorEntity_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConnectorEntityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAuthenticationException'
          description: ConnectorAuthenticationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorServerException'
          description: ConnectorServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describe-connector-profiles:
    post:
      description: "<p> Returns a list of <code>connector-profile</code> details matching\
        \ the provided <code>connector-profile</code> names and <code>connector-types</code>.\
        \ Both input lists are optional, and you can use them to filter the result.\
        \ </p> <p>If no names or <code>connector-types</code> are provided, returns\
        \ all connector profiles in a paginated form. If there is no match, this operation\
        \ returns an empty list.</p>"
      operationId: DescribeConnectorProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConnectorProfiles_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConnectorProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describe-connectors:
    post:
      description: " Describes the connectors vended by Amazon AppFlow for specified\
        \ connector types. If you don't specify a connector type, this operation describes\
        \ all connectors vended by Amazon AppFlow. If there are more connectors than\
        \ can be returned in one page, the response contains a <code>nextToken</code>\
        \ object, which can be be passed in to the next call to the <code>DescribeConnectors</code>\
        \ API operation to retrieve the next page. "
      operationId: DescribeConnectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConnectors_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConnectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describe-flow:
    post:
      description: ' Provides a description of the specified flow. '
      operationId: DescribeFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFlow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describe-flow-execution-records:
    post:
      description: ' Fetches the execution history of the flow. '
      operationId: DescribeFlowExecutionRecords
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFlowExecutionRecords_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFlowExecutionRecordsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-connector-entities:
    post:
      description: " Returns the list of available connector entities supported by\
        \ Amazon AppFlow. For example, you can query Salesforce for <i>Account</i>\
        \ and <i>Opportunity</i> entities, or query ServiceNow for the <i>Incident</i>\
        \ entity. "
      operationId: ListConnectorEntities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConnectorEntities_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorEntitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAuthenticationException'
          description: ConnectorAuthenticationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorServerException'
          description: ConnectorServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-connectors:
    post:
      description: "Returns the list of all registered custom connectors in your Amazon\
        \ Web Services account. This API lists only custom connectors registered in\
        \ this account, not the Amazon Web Services authored connectors. "
      operationId: ListConnectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConnectors_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-flows:
    post:
      description: ' Lists all of the flows associated with your account. '
      operationId: ListFlows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFlows_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFlowsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: ' Retrieves the tags that are associated with a specified flow. '
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) of the specified flow. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 512
          pattern: "arn:aws:.*:.*:[0-9]+:.*"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: ' Applies a tag to the specified flow. '
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) of the flow that you want to
          tag. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 512
          pattern: "arn:aws:.*:.*:[0-9]+:.*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /register-connector:
    post:
      description: "Registers a new custom connector with your Amazon Web Services\
        \ account. Before you can register the connector, you must deploy the associated\
        \ AWS lambda function in your account."
      operationId: RegisterConnector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterConnector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterConnectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorServerException'
          description: ConnectorServerException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAuthenticationException'
          description: ConnectorAuthenticationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /reset-connector-metadata-cache:
    post:
      description: "<p>Resets metadata about your connector entities that Amazon AppFlow\
        \ stored in its cache. Use this action when you want Amazon AppFlow to return\
        \ the latest information about the data that you have in a source application.</p>\
        \ <p>Amazon AppFlow returns metadata about your entities when you use the\
        \ ListConnectorEntities or DescribeConnectorEntities actions. Following these\
        \ actions, Amazon AppFlow caches the metadata to reduce the number of API\
        \ requests that it must send to the source application. Amazon AppFlow automatically\
        \ resets the cache once every hour, but you can use this action when you want\
        \ to get the latest metadata right away.</p>"
      operationId: ResetConnectorMetadataCache
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetConnectorMetadataCache_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetConnectorMetadataCacheResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /start-flow:
    post:
      description: " Activates an existing flow. For on-demand flows, this operation\
        \ runs the flow immediately. For schedule and event-triggered flows, this\
        \ operation activates the flow. "
      operationId: StartFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFlow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /stop-flow:
    post:
      description: " Deactivates the existing flow. For on-demand flows, this operation\
        \ returns an <code>unsupportedOperationException</code> error message. For\
        \ schedule and event-triggered flows, this operation deactivates the flow. "
      operationId: StopFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFlow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /unregister-connector:
    post:
      description: Unregisters the custom connector registered in your account that
        matches the connector label provided in the request.
      operationId: UnregisterConnector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterConnector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnregisterConnectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: ' Removes a tag from the specified flow. '
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) of the flow that you want to
          untag. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 512
          pattern: "arn:aws:.*:.*:[0-9]+:.*"
          type: string
        style: simple
      - description: ' The tag keys associated with the tag that you want to remove
          from your flow. '
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /update-connector-profile:
    post:
      description: ' Updates a given connector profile associated with your account. '
      operationId: UpdateConnectorProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorProfile_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConnectorProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAuthenticationException'
          description: ConnectorAuthenticationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /update-connector-registration:
    post:
      description: <p>Updates a custom connector that you've previously registered.
        This operation updates the connector with one of the following:</p> <ul> <li>
        <p>The latest version of the AWS Lambda function that's assigned to the connector</p>
        </li> <li> <p>A new AWS Lambda function that you specify</p> </li> </ul>
      operationId: UpdateConnectorRegistration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorRegistration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConnectorRegistrationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorServerException'
          description: ConnectorServerException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAuthenticationException'
          description: ConnectorAuthenticationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /update-flow:
    post:
      description: ' Updates an existing flow. '
      operationId: UpdateFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAuthenticationException'
          description: ConnectorAuthenticationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorServerException'
          description: ConnectorServerException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CancelFlowExecutionsResponse:
      example:
        invalidExecutions: ""
      properties:
        invalidExecutions:
          allOf:
          - $ref: '#/components/schemas/ExecutionIds'
          - description: The IDs of runs that Amazon AppFlow couldn't cancel. These
              runs might be ineligible for canceling because they haven't started
              yet or have already completed.
      type: object
    ExecutionId:
      maxLength: 256
      pattern: \S+
      type: string
    ValidationException: {}
    AccessDeniedException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    InternalServerException: {}
    CreateConnectorProfileResponse:
      example:
        connectorProfileArn: ""
      properties:
        connectorProfileArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileArn'
          - description: ' The Amazon Resource Name (ARN) of the connector profile. '
      type: object
    ConnectorProfileProperties:
      description: ' The connector-specific profile properties required by each connector. '
      properties:
        Amplitude:
          allOf:
          - $ref: '#/components/schemas/AmplitudeConnectorProfileProperties'
          - description: ' The connector-specific properties required by Amplitude. '
        Datadog:
          $ref: '#/components/schemas/ConnectorProfileProperties_Datadog'
        Dynatrace:
          $ref: '#/components/schemas/ConnectorProfileProperties_Dynatrace'
        GoogleAnalytics:
          allOf:
          - $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileProperties'
          - description: ' The connector-specific properties required Google Analytics. '
        Honeycode:
          allOf:
          - $ref: '#/components/schemas/HoneycodeConnectorProfileProperties'
          - description: ' The connector-specific properties required by Amazon Honeycode. '
        InforNexus:
          $ref: '#/components/schemas/ConnectorProfileProperties_InforNexus'
        Marketo:
          $ref: '#/components/schemas/ConnectorProfileProperties_Marketo'
        Redshift:
          $ref: '#/components/schemas/ConnectorProfileProperties_Redshift'
        Salesforce:
          $ref: '#/components/schemas/ConnectorProfileProperties_Salesforce'
        ServiceNow:
          $ref: '#/components/schemas/ConnectorProfileProperties_ServiceNow'
        Singular:
          allOf:
          - $ref: '#/components/schemas/SingularConnectorProfileProperties'
          - description: ' The connector-specific properties required by Singular. '
        Slack:
          $ref: '#/components/schemas/ConnectorProfileProperties_Slack'
        Snowflake:
          $ref: '#/components/schemas/ConnectorProfileProperties_Snowflake'
        Trendmicro:
          allOf:
          - $ref: '#/components/schemas/TrendmicroConnectorProfileProperties'
          - description: ' The connector-specific properties required by Trend Micro. '
        Veeva:
          $ref: '#/components/schemas/ConnectorProfileProperties_Veeva'
        Zendesk:
          $ref: '#/components/schemas/ConnectorProfileProperties_Zendesk'
        SAPOData:
          $ref: '#/components/schemas/SAPODataConnectorProfileProperties'
        CustomConnector:
          $ref: '#/components/schemas/ConnectorProfileProperties_CustomConnector'
        Pardot:
          $ref: '#/components/schemas/ConnectorProfileProperties_Pardot'
      type: object
    ConnectorProfileCredentials:
      description: ' The connector-specific credentials required by a connector. '
      properties:
        Amplitude:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Amplitude'
        Datadog:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Datadog'
        Dynatrace:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Dynatrace'
        GoogleAnalytics:
          $ref: '#/components/schemas/ConnectorProfileCredentials_GoogleAnalytics'
        Honeycode:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Honeycode'
        InforNexus:
          $ref: '#/components/schemas/ConnectorProfileCredentials_InforNexus'
        Marketo:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Marketo'
        Redshift:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Redshift'
        Salesforce:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Salesforce'
        ServiceNow:
          $ref: '#/components/schemas/ConnectorProfileCredentials_ServiceNow'
        Singular:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Singular'
        Slack:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Slack'
        Snowflake:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Snowflake'
        Trendmicro:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Trendmicro'
        Veeva:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Veeva'
        Zendesk:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Zendesk'
        SAPOData:
          $ref: '#/components/schemas/SAPODataConnectorProfileCredentials'
        CustomConnector:
          $ref: '#/components/schemas/CustomConnectorProfileCredentials'
        Pardot:
          $ref: '#/components/schemas/ConnectorProfileCredentials_Pardot'
      type: object
    ConflictException: {}
    ServiceQuotaExceededException: {}
    ConnectorAuthenticationException: {}
    CreateFlowResponse:
      example:
        flowArn: ""
        flowStatus: ""
      properties:
        flowArn:
          allOf:
          - $ref: '#/components/schemas/FlowArn'
          - description: ' The flow''s Amazon Resource Name (ARN). '
        flowStatus:
          allOf:
          - $ref: '#/components/schemas/FlowStatus'
          - description: ' Indicates the current status of the flow. '
      type: object
    TriggerType:
      enum:
      - Scheduled
      - Event
      - OnDemand
      type: string
    TriggerProperties:
      description: " Specifies the configuration details that control the trigger\
        \ for a flow. Currently, these settings only apply to the <code>Scheduled</code>\
        \ trigger type. "
      properties:
        Scheduled:
          $ref: '#/components/schemas/TriggerProperties_Scheduled'
      type: object
    ConnectorType:
      enum:
      - Salesforce
      - Singular
      - Slack
      - Redshift
      - S3
      - Marketo
      - Googleanalytics
      - Zendesk
      - Servicenow
      - Datadog
      - Trendmicro
      - Snowflake
      - Dynatrace
      - Infornexus
      - Amplitude
      - Veeva
      - EventBridge
      - LookoutMetrics
      - Upsolver
      - Honeycode
      - CustomerProfiles
      - SAPOData
      - CustomConnector
      - Pardot
      type: string
    ApiVersion:
      maxLength: 256
      pattern: \S+
      type: string
    ConnectorProfileName:
      maxLength: 256
      pattern: "[\\w/!@#+=.-]+"
      type: string
    SourceConnectorProperties:
      description: ' Specifies the information that is required to query a particular
        connector. '
      properties:
        Amplitude:
          $ref: '#/components/schemas/SourceConnectorProperties_Amplitude'
        Datadog:
          $ref: '#/components/schemas/SourceConnectorProperties_Datadog'
        Dynatrace:
          $ref: '#/components/schemas/SourceConnectorProperties_Dynatrace'
        GoogleAnalytics:
          $ref: '#/components/schemas/SourceConnectorProperties_GoogleAnalytics'
        InforNexus:
          $ref: '#/components/schemas/SourceConnectorProperties_InforNexus'
        Marketo:
          $ref: '#/components/schemas/SourceConnectorProperties_Marketo'
        S3:
          $ref: '#/components/schemas/SourceConnectorProperties_S3'
        Salesforce:
          $ref: '#/components/schemas/SourceConnectorProperties_Salesforce'
        ServiceNow:
          $ref: '#/components/schemas/SourceConnectorProperties_ServiceNow'
        Singular:
          $ref: '#/components/schemas/SourceConnectorProperties_Singular'
        Slack:
          $ref: '#/components/schemas/SourceConnectorProperties_Slack'
        Trendmicro:
          $ref: '#/components/schemas/SourceConnectorProperties_Trendmicro'
        Veeva:
          $ref: '#/components/schemas/SourceConnectorProperties_Veeva'
        Zendesk:
          $ref: '#/components/schemas/SourceConnectorProperties_Zendesk'
        SAPOData:
          $ref: '#/components/schemas/SAPODataSourceProperties'
        CustomConnector:
          $ref: '#/components/schemas/CustomConnectorSourceProperties'
        Pardot:
          $ref: '#/components/schemas/SourceConnectorProperties_Pardot'
      type: object
    IncrementalPullConfig:
      description: ' Specifies the configuration used when importing incremental records
        from the source. '
      properties:
        datetimeTypeFieldName:
          allOf:
          - $ref: '#/components/schemas/DatetimeTypeFieldName'
          - description: ' A field that specifies the date time or timestamp field
              as the criteria to use when importing incremental records from the source. '
      type: object
    DestinationFlowConfig:
      description: ' Contains information about the configuration of destination connectors
        present in the flow. '
      properties:
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " The type of connector, such as Salesforce, Amplitude, and\
              \ so on. "
        apiVersion:
          allOf:
          - $ref: '#/components/schemas/ApiVersion'
          - description: The API version that the destination connector uses.
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: ' The name of the connector profile. This name must be unique
              for each connector profile in the Amazon Web Services account. '
        destinationConnectorProperties:
          $ref: '#/components/schemas/DestinationFlowConfig_destinationConnectorProperties'
      required:
      - connectorType
      - destinationConnectorProperties
      type: object
    Task:
      description: ' A class for modeling different type of tasks. Task implementation
        varies based on the <code>TaskType</code>. '
      properties:
        sourceFields:
          allOf:
          - $ref: '#/components/schemas/SourceFields'
          - description: ' The source fields to which a particular task is applied. '
        connectorOperator:
          $ref: '#/components/schemas/Task_connectorOperator'
        destinationField:
          allOf:
          - $ref: '#/components/schemas/DestinationField'
          - description: " A field in a destination connector, or a field value against\
              \ which Amazon AppFlow validates a source field. "
        taskType:
          allOf:
          - $ref: '#/components/schemas/TaskType'
          - description: ' Specifies the particular task implementation that Amazon
              AppFlow performs. '
        taskProperties:
          allOf:
          - $ref: '#/components/schemas/TaskPropertiesMap'
          - description: ' A map used to store task-related information. The execution
              service looks for particular information based on the <code>TaskType</code>. '
      required:
      - sourceFields
      - taskType
      type: object
    TagValue:
      maxLength: 256
      pattern: "[\\s\\w+-=\\.:/@]*"
      type: string
    GlueDataCatalogConfig:
      description: "<p>Specifies the configuration that Amazon AppFlow uses when it\
        \ catalogs your data with the Glue Data Catalog. When Amazon AppFlow catalogs\
        \ your data, it stores metadata in Data Catalog tables. This metadata represents\
        \ the data that's transferred by the flow that you configure with these settings.</p>\
        \ <note> <p>You can configure a flow with these settings only when the flow\
        \ destination is Amazon S3.</p> </note>"
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/GlueDataCatalogIAMRole'
          - description: "<p>The Amazon Resource Name (ARN) of an IAM role that grants\
              \ Amazon AppFlow the permissions it needs to create Data Catalog tables,\
              \ databases, and partitions.</p> <p>For an example IAM policy that has\
              \ the required permissions, see <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/security_iam_id-based-policy-examples.html\"\
              >Identity-based policy examples for Amazon AppFlow</a>.</p>"
        databaseName:
          allOf:
          - $ref: '#/components/schemas/GlueDataCatalogDatabaseName'
          - description: "<p>The name of the Data Catalog database that stores the\
              \ metadata tables that Amazon AppFlow creates in your Amazon Web Services\
              \ account. These tables contain metadata for the data that's transferred\
              \ by the flow that you configure with this parameter.</p> <note> <p>When\
              \ you configure a new flow with this parameter, you must specify an\
              \ existing database.</p> </note>"
        tablePrefix:
          allOf:
          - $ref: '#/components/schemas/GlueDataCatalogTablePrefix'
          - description: A naming prefix for each Data Catalog table that Amazon AppFlow
              creates for the flow that you configure with this setting. Amazon AppFlow
              adds the prefix to the beginning of the each table name.
      required:
      - databaseName
      - roleArn
      - tablePrefix
      type: object
    ConnectorServerException: {}
    DeleteConnectorProfileResponse:
      properties: {}
      type: object
    DeleteFlowResponse:
      properties: {}
      type: object
    DescribeConnectorResponse:
      example:
        connectorConfiguration:
          supportedSchedulingFrequencies: ""
          isPrivateLinkEnabled: ""
          registeredBy: ""
          connectorLabel: ""
          supportedApiVersions: ""
          canUseAsDestination: ""
          connectorRuntimeSettings: ""
          supportedWriteOperations: ""
          connectorProvisioningType: ""
          connectorModes: ""
          connectorVersion: ""
          supportedDataTransferApis: ""
          supportedDestinationConnectors: ""
          authenticationConfig:
            isApiKeyAuthSupported: ""
            isCustomAuthSupported: ""
            isOAuth2Supported: ""
            oAuth2Defaults:
              authCodeUrls: ""
              tokenUrls: ""
              oauth2GrantTypesSupported: ""
              oauth2CustomProperties: ""
              oauthScopes: ""
            isBasicAuthSupported: ""
            customAuthConfigs: ""
          canUseAsSource: ""
          connectorType: ""
          isPrivateLinkEndpointUrlRequired: ""
          connectorArn: ""
          registeredAt: ""
          logoURL: ""
          connectorOwner: ""
          supportedTriggerTypes: ""
          supportedOperators: ""
          supportedDataTransferTypes: ""
          connectorName: ""
          connectorDescription: ""
          connectorMetadata:
            Amplitude: ""
            S3: ""
            GoogleAnalytics:
              oAuthScopes: ""
            ServiceNow: ""
            Upsolver: ""
            CustomerProfiles: ""
            SAPOData: "{}"
            Pardot: ""
            Honeycode:
              oAuthScopes: ""
            Veeva: ""
            EventBridge: ""
            Trendmicro: ""
            Datadog: ""
            Marketo: ""
            Redshift: ""
            Singular: ""
            Slack:
              oAuthScopes: ""
            Snowflake:
              supportedRegions: ""
            Dynatrace: ""
            Zendesk:
              oAuthScopes: ""
            InforNexus: ""
            Salesforce:
              oauth2GrantTypesSupported: ""
              oAuthScopes: ""
              dataTransferApis: ""
          connectorProvisioningConfig:
            lambda:
              lambdaArn: ""
      properties:
        connectorConfiguration:
          $ref: '#/components/schemas/DescribeConnectorResponse_connectorConfiguration'
      type: object
    DescribeConnectorEntityResponse:
      example:
        connectorEntityFields: ""
      properties:
        connectorEntityFields:
          allOf:
          - $ref: '#/components/schemas/ConnectorEntityFieldList'
          - description: " Describes the fields for that connector entity. For example,\
              \ for an <i>account</i> entity, the fields would be <i>account name</i>,\
              \ <i>account ID</i>, and so on. "
      required:
      - connectorEntityFields
      type: object
    DescribeConnectorProfilesResponse:
      example:
        connectorProfileDetails: ""
        nextToken: ""
      properties:
        connectorProfileDetails:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileDetailList'
          - description: ' Returns information about the connector profiles associated
              with the flow. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " The pagination token for the next page of data. If <code>nextToken=null</code>,\
              \ this means that all records have been fetched. "
      type: object
    DescribeConnectorsResponse:
      example:
        connectors: ""
        connectorConfigurations: ""
        nextToken: ""
      properties:
        connectorConfigurations:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfigurationsMap'
          - description: ' The configuration that is applied to the connectors used
              in the flow. '
        connectors:
          allOf:
          - $ref: '#/components/schemas/ConnectorList'
          - description: Information about the connectors supported in Amazon AppFlow.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The pagination token for the next page of data. '
      type: object
    DescribeFlowResponse:
      example:
        lastUpdatedBy: ""
        destinationFlowConfigList: ""
        schemaVersion: ""
        triggerConfig:
          triggerProperties:
            Scheduled:
              scheduleOffset: ""
              scheduleExpression: ""
              timezone: ""
              flowErrorDeactivationThreshold: ""
              dataPullMode: ""
              firstExecutionFrom: ""
              scheduleStartTime: ""
              scheduleEndTime: ""
          triggerType: ""
        lastUpdatedAt: ""
        sourceFlowConfig:
          connectorType: ""
          apiVersion: ""
          connectorProfileName: ""
          incrementalPullConfig:
            datetimeTypeFieldName: ""
          sourceConnectorProperties:
            Amplitude:
              object: ""
            S3:
              bucketName: ""
              bucketPrefix: ""
              s3InputFormatConfig:
                s3InputFileType: ""
            GoogleAnalytics:
              object: ""
            ServiceNow:
              object: ""
            CustomConnector:
              customProperties: ""
              entityName: ""
              dataTransferApi:
                Type: ""
                Name: ""
            SAPOData:
              objectPath: ""
            Pardot:
              object: ""
            Veeva:
              includeSourceFiles: ""
              documentType: ""
              includeAllVersions: ""
              includeRenditions: ""
              object: ""
            Trendmicro:
              object: ""
            Datadog:
              object: ""
            Marketo:
              object: ""
            Singular:
              object: ""
            Slack:
              object: ""
            Dynatrace:
              object: ""
            Zendesk:
              object: ""
            InforNexus:
              object: ""
            Salesforce:
              includeDeletedRecords: ""
              enableDynamicFieldUpdate: ""
              object: ""
              dataTransferApi: ""
        kmsArn: ""
        description: ""
        flowStatusMessage: ""
        flowName: ""
        metadataCatalogConfig:
          glueDataCatalog:
            databaseName: ""
            tablePrefix: ""
            roleArn: ""
        lastRunMetadataCatalogDetails: ""
        tags: ""
        createdAt: ""
        flowArn: ""
        createdBy: ""
        lastRunExecutionDetails:
          mostRecentExecutionStatus: ""
          mostRecentExecutionTime: ""
          mostRecentExecutionMessage: ""
        flowStatus: ""
        tasks: ""
      properties:
        flowArn:
          allOf:
          - $ref: '#/components/schemas/FlowArn'
          - description: ' The flow''s Amazon Resource Name (ARN). '
        description:
          allOf:
          - $ref: '#/components/schemas/FlowDescription'
          - description: ' A description of the flow. '
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
        kmsArn:
          allOf:
          - $ref: '#/components/schemas/KMSArn'
          - description: " The ARN (Amazon Resource Name) of the Key Management Service\
              \ (KMS) key you provide for encryption. This is required if you do not\
              \ want to use the Amazon AppFlow-managed KMS key. If you don't provide\
              \ anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS\
              \ key. "
        flowStatus:
          allOf:
          - $ref: '#/components/schemas/FlowStatus'
          - description: ' Indicates the current status of the flow. '
        flowStatusMessage:
          allOf:
          - $ref: '#/components/schemas/FlowStatusMessage'
          - description: ' Contains an error message if the flow status is in a suspended
              or error state. This applies only to scheduled or event-triggered flows. '
        sourceFlowConfig:
          $ref: '#/components/schemas/DescribeFlowResponse_sourceFlowConfig'
        destinationFlowConfigList:
          allOf:
          - $ref: '#/components/schemas/DestinationFlowConfigList'
          - description: ' The configuration that controls how Amazon AppFlow transfers
              data to the destination connector. '
        lastRunExecutionDetails:
          $ref: '#/components/schemas/DescribeFlowResponse_lastRunExecutionDetails'
        triggerConfig:
          $ref: '#/components/schemas/DescribeFlowResponse_triggerConfig'
        tasks:
          allOf:
          - $ref: '#/components/schemas/Tasks'
          - description: ' A list of tasks that Amazon AppFlow performs while transferring
              the data in the flow run. '
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies when the flow was created. '
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies when the flow was last updated. '
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          - description: ' The ARN of the user who created the flow. '
        lastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          - description: ' Specifies the user name of the account that performed the
              most recent update. '
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: " The tags used to organize, track, or control access for\
              \ your flow. "
        metadataCatalogConfig:
          $ref: '#/components/schemas/DescribeFlowResponse_metadataCatalogConfig'
        lastRunMetadataCatalogDetails:
          allOf:
          - $ref: '#/components/schemas/MetadataCatalogDetails'
          - description: "Describes the metadata catalog, metadata table, and data\
              \ partitions that Amazon AppFlow used for the associated flow run."
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: <p>The version number of your data schema. Amazon AppFlow
              assigns this version number. The version number increases by one when
              you change any of the following settings in your flow configuration:</p>
              <ul> <li> <p>Source-to-destination field mappings</p> </li> <li> <p>Field
              data types</p> </li> <li> <p>Partition keys</p> </li> </ul>
      type: object
    DescribeFlowExecutionRecordsResponse:
      example:
        nextToken: ""
        flowExecutions: ""
      properties:
        flowExecutions:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionList'
          - description: ' Returns a list of all instances when this flow was run. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The pagination token for the next page of data. '
      type: object
    ListConnectorEntitiesResponse:
      example:
        connectorEntityMap: ""
        nextToken: ""
      properties:
        connectorEntityMap:
          allOf:
          - $ref: '#/components/schemas/ConnectorEntityMap'
          - description: " The response of <code>ListConnectorEntities</code> lists\
              \ entities grouped by category. This map's key represents the group\
              \ name, and its value contains the list of entities belonging to that\
              \ group. "
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token that you specify in your next <code>ListConnectorEntities</code>
              operation to get the next page of results in paginated response. The
              <code>ListConnectorEntities</code> operation provides this token if
              the response is too big for the page size.
      required:
      - connectorEntityMap
      type: object
    ListConnectorsResponse:
      example:
        connectors: ""
        nextToken: ""
      properties:
        connectors:
          allOf:
          - $ref: '#/components/schemas/ConnectorList'
          - description: Contains information about the connectors supported by Amazon
              AppFlow.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token for the next page of data. If nextToken=null,\
              \ this means that all records have been fetched."
      type: object
    ListFlowsResponse:
      example:
        flows: ""
        nextToken: ""
      properties:
        flows:
          allOf:
          - $ref: '#/components/schemas/FlowList'
          - description: ' The list of flows associated with your account. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The pagination token for next page of data. '
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: " The tags used to organize, track, or control access for\
              \ your flow. "
      type: object
    RegisterConnectorResponse:
      example:
        connectorArn: ""
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The ARN of the connector being registered.
      type: object
    LambdaConnectorProvisioningConfig:
      description: Contains information about the configuration of the lambda which
        is being registered as the connector.
      properties:
        lambdaArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Lambda ARN of the connector being registered.
      required:
      - lambdaArn
      type: object
    ResetConnectorMetadataCacheResponse:
      properties: {}
      type: object
    StartFlowResponse:
      example:
        executionId: ""
        flowArn: ""
        flowStatus: ""
      properties:
        flowArn:
          allOf:
          - $ref: '#/components/schemas/FlowArn'
          - description: ' The flow''s Amazon Resource Name (ARN). '
        flowStatus:
          allOf:
          - $ref: '#/components/schemas/FlowStatus'
          - description: ' Indicates the current status of the flow. '
        executionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: " Returns the internal execution ID of an on-demand flow\
              \ when the flow is started. For scheduled or event-triggered flows,\
              \ this value is null. "
      type: object
    StopFlowResponse:
      example:
        flowArn: ""
        flowStatus: ""
      properties:
        flowArn:
          allOf:
          - $ref: '#/components/schemas/FlowArn'
          - description: ' The flow''s Amazon Resource Name (ARN). '
        flowStatus:
          allOf:
          - $ref: '#/components/schemas/FlowStatus'
          - description: ' Indicates the current status of the flow. '
      type: object
    UnsupportedOperationException: {}
    TagResourceResponse:
      properties: {}
      type: object
    UnregisterConnectorResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      type: string
    UpdateConnectorProfileResponse:
      example:
        connectorProfileArn: ""
      properties:
        connectorProfileArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileArn'
          - description: ' The Amazon Resource Name (ARN) of the connector profile. '
      type: object
    UpdateConnectorRegistrationResponse:
      example:
        connectorArn: ""
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The ARN of the connector being updated.
      type: object
    UpdateFlowResponse:
      example:
        flowStatus: ""
      properties:
        flowStatus:
          allOf:
          - $ref: '#/components/schemas/FlowStatus'
          - description: 'Indicates the current status of the flow. '
      type: object
    ARN:
      maxLength: 512
      pattern: "arn:aws:.*:.*:[0-9]+:.*"
      type: string
    AccessKeyId:
      format: password
      maxLength: 256
      pattern: \S+
      type: string
    AccessToken:
      format: password
      maxLength: 4096
      pattern: \S+
      type: string
    AccountName:
      maxLength: 512
      pattern: \S+
      type: string
    AggregationType:
      enum:
      - None
      - SingleFile
      type: string
    Long:
      type: integer
    AggregationConfig:
      description: ' The aggregation settings that you can use to customize the output
        format of your flow data. '
      properties:
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          - description: " Specifies whether Amazon AppFlow aggregates the flow records\
              \ into a single file, or leave them unaggregated. "
        targetFileSize:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The desired file size, in MB, for each output file that\
              \ Amazon AppFlow writes to the flow destination. For each file, Amazon\
              \ AppFlow attempts to achieve the size that you specify. The actual\
              \ file sizes might differ from this target based on the number and size\
              \ of the records that each file contains."
      type: object
    AmplitudeConnectorOperator:
      enum:
      - BETWEEN
      type: string
    ApiKey:
      format: password
      maxLength: 256
      pattern: \S+
      type: string
    SecretKey:
      format: password
      maxLength: 256
      pattern: \S+
      type: string
    AmplitudeConnectorProfileCredentials:
      description: ' The connector-specific credentials required when using Amplitude. '
      properties:
        apiKey:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          - description: " A unique alphanumeric identifier used to authenticate a\
              \ user, developer, or calling program to your API. "
        secretKey:
          allOf:
          - $ref: '#/components/schemas/SecretKey'
          - description: ' The Secret Access Key portion of the credentials. '
      required:
      - apiKey
      - secretKey
      type: object
    AmplitudeConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Amplitude. '
      properties: {}
      type: object
    AmplitudeMetadata:
      description: ' The connector metadata specific to Amplitude. '
      properties: {}
      type: object
    Object:
      maxLength: 512
      pattern: \S+
      type: string
    AmplitudeSourceProperties:
      description: ' The properties that are applied when Amplitude is being used
        as a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Amplitude flow source. '
      required:
      - object
      type: object
    ApiSecretKey:
      format: password
      maxLength: 256
      pattern: \S+
      type: string
    ApiKeyCredentials:
      description: The API key credentials required for API key authentication.
      properties:
        apiKey:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          - description: The API key required for API key authentication.
        apiSecretKey:
          allOf:
          - $ref: '#/components/schemas/ApiSecretKey'
          - description: The API secret key required for API key authentication.
      required:
      - apiKey
      type: object
    ApiToken:
      maxLength: 256
      pattern: \S+
      type: string
    ApplicationHostUrl:
      maxLength: 256
      pattern: "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
      type: string
    ApplicationKey:
      maxLength: 512
      pattern: \S+
      type: string
    ApplicationServicePath:
      maxLength: 512
      pattern: \S+
      type: string
    ApplicationType:
      maxLength: 512
      pattern: \S+
      type: string
    AuthCode:
      maxLength: 4096
      pattern: \S+
      type: string
    AuthCodeUrl:
      maxLength: 256
      pattern: "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
      type: string
    AuthCodeUrlList:
      items:
        $ref: '#/components/schemas/AuthCodeUrl'
      type: array
    Key:
      maxLength: 512
      pattern: \S+
      type: string
    Boolean:
      type: boolean
    Label:
      maxLength: 128
      pattern: .*
      type: string
    Description:
      maxLength: 1024
      pattern: "[\\s\\w/!@#+=.-]*"
      type: string
    ConnectorSuppliedValueList:
      items:
        $ref: '#/components/schemas/ConnectorSuppliedValue'
      type: array
    AuthParameter:
      description: Information about required authentication parameters.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          - description: The authentication key required to authenticate with the
              connector.
        isRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether this authentication parameter is required.
        label:
          allOf:
          - $ref: '#/components/schemas/Label'
          - description: Label used for authentication parameter.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description about the authentication parameter.
        isSensitiveField:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether this authentication parameter is a sensitive
              field.
        connectorSuppliedValues:
          allOf:
          - $ref: '#/components/schemas/ConnectorSuppliedValueList'
          - description: Contains default values for this authentication parameter
              that are supplied by the connector.
      type: object
    AuthParameterList:
      items:
        $ref: '#/components/schemas/AuthParameter'
      type: array
    OAuth2Defaults:
      description: Contains the default values required for OAuth 2.0 authentication.
      properties:
        oauthScopes:
          allOf:
          - $ref: '#/components/schemas/OAuthScopeList'
          - description: OAuth 2.0 scopes that the connector supports.
        tokenUrls:
          allOf:
          - $ref: '#/components/schemas/TokenUrlList'
          - description: Token URLs that can be used for OAuth 2.0 authentication.
        authCodeUrls:
          allOf:
          - $ref: '#/components/schemas/AuthCodeUrlList'
          - description: Auth code URLs that can be used for OAuth 2.0 authentication.
        oauth2GrantTypesSupported:
          allOf:
          - $ref: '#/components/schemas/OAuth2GrantTypeSupportedList'
          - description: OAuth 2.0 grant types supported by the connector.
        oauth2CustomProperties:
          allOf:
          - $ref: '#/components/schemas/OAuth2CustomPropertiesList'
          - description: List of custom parameters required for OAuth 2.0 authentication.
      type: object
    CustomAuthConfigList:
      items:
        $ref: '#/components/schemas/CustomAuthConfig'
      type: array
    AuthenticationConfig:
      description: Contains information about the authentication config that the connector
        supports.
      properties:
        isBasicAuthSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether basic authentication is supported by the
              connector.
        isApiKeyAuthSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether API key authentication is supported by
              the connector
        isOAuth2Supported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether OAuth 2.0 authentication is supported by
              the connector.
        isCustomAuthSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether custom authentication is supported by the
              connector
        oAuth2Defaults:
          $ref: '#/components/schemas/AuthenticationConfig_oAuth2Defaults'
        customAuthConfigs:
          allOf:
          - $ref: '#/components/schemas/CustomAuthConfigList'
          - description: Contains information required for custom authentication.
      type: object
    AuthenticationType:
      enum:
      - OAUTH2
      - APIKEY
      - BASIC
      - CUSTOM
      type: string
    Username:
      maxLength: 512
      pattern: \S+
      type: string
    Password:
      format: password
      maxLength: 512
      pattern: .*
      type: string
    BasicAuthCredentials:
      description: ' The basic auth credentials required for basic authentication. '
      properties:
        username:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: ' The username to use to connect to a resource. '
        password:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: ' The password to use to connect to a resource.'
      required:
      - password
      - username
      type: object
    BucketName:
      maxLength: 63
      minLength: 3
      pattern: \S+
      type: string
    BucketPrefix:
      maxLength: 512
      pattern: .*
      type: string
    BusinessUnitId:
      maxLength: 18
      pattern: \S+
      type: string
    FlowName:
      maxLength: 256
      pattern: "[a-zA-Z0-9][\\w!@#.-]+"
      type: string
    ExecutionIds:
      items:
        $ref: '#/components/schemas/ExecutionId'
      maxItems: 100
      minItems: 0
      type: array
    CancelFlowExecutionsRequest:
      example:
        executionIds: ""
        flowName: ""
      properties:
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: The name of a flow with active runs that you want to cancel.
        executionIds:
          allOf:
          - $ref: '#/components/schemas/ExecutionIds'
          - description: "<p>The ID of each active run to cancel. These runs must\
              \ belong to the flow you specify in your request.</p> <p>If you omit\
              \ this parameter, your request ends all active runs that belong to the\
              \ flow.</p>"
      required:
      - flowName
      title: CancelFlowExecutionsRequest
      type: object
    CatalogType:
      enum:
      - GLUE
      type: string
    ClientCredentialsArn:
      format: password
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws:secretsmanager:.*:[0-9]+:.*"
      type: string
    ClientId:
      maxLength: 512
      pattern: \S+
      type: string
    ClientNumber:
      maxLength: 3
      minLength: 3
      pattern: "^\\d{3}$"
      type: string
    ClientSecret:
      format: password
      maxLength: 512
      pattern: \S+
      type: string
    ClientToken:
      maxLength: 256
      minLength: 1
      pattern: "[ -~]+"
      type: string
    ClusterIdentifier:
      maxLength: 512
      pattern: \S+
      type: string
    ConnectionMode:
      enum:
      - Public
      - Private
      type: string
    ConnectorTypeList:
      items:
        $ref: '#/components/schemas/ConnectorType'
      maxItems: 100
      minItems: 0
      type: array
    SchedulingFrequencyTypeList:
      items:
        $ref: '#/components/schemas/ScheduleFrequencyType'
      type: array
    TriggerTypeList:
      items:
        $ref: '#/components/schemas/TriggerType'
      type: array
    ConnectorMetadata:
      description: " A structure to specify connector-specific metadata such as <code>oAuthScopes</code>,\
        \ <code>supportedRegions</code>, <code>privateLinkServiceUrl</code>, and so\
        \ on. "
      properties:
        Amplitude:
          allOf:
          - $ref: '#/components/schemas/AmplitudeMetadata'
          - description: ' The connector metadata specific to Amplitude. '
        Datadog:
          allOf:
          - $ref: '#/components/schemas/DatadogMetadata'
          - description: ' The connector metadata specific to Datadog. '
        Dynatrace:
          allOf:
          - $ref: '#/components/schemas/DynatraceMetadata'
          - description: ' The connector metadata specific to Dynatrace. '
        GoogleAnalytics:
          $ref: '#/components/schemas/ConnectorMetadata_GoogleAnalytics'
        InforNexus:
          allOf:
          - $ref: '#/components/schemas/InforNexusMetadata'
          - description: ' The connector metadata specific to Infor Nexus. '
        Marketo:
          allOf:
          - $ref: '#/components/schemas/MarketoMetadata'
          - description: ' The connector metadata specific to Marketo. '
        Redshift:
          allOf:
          - $ref: '#/components/schemas/RedshiftMetadata'
          - description: ' The connector metadata specific to Amazon Redshift. '
        S3:
          allOf:
          - $ref: '#/components/schemas/S3Metadata'
          - description: ' The connector metadata specific to Amazon S3. '
        Salesforce:
          $ref: '#/components/schemas/ConnectorMetadata_Salesforce'
        ServiceNow:
          allOf:
          - $ref: '#/components/schemas/ServiceNowMetadata'
          - description: ' The connector metadata specific to ServiceNow. '
        Singular:
          allOf:
          - $ref: '#/components/schemas/SingularMetadata'
          - description: ' The connector metadata specific to Singular. '
        Slack:
          $ref: '#/components/schemas/ConnectorMetadata_Slack'
        Snowflake:
          $ref: '#/components/schemas/ConnectorMetadata_Snowflake'
        Trendmicro:
          allOf:
          - $ref: '#/components/schemas/TrendmicroMetadata'
          - description: ' The connector metadata specific to Trend Micro. '
        Veeva:
          allOf:
          - $ref: '#/components/schemas/VeevaMetadata'
          - description: ' The connector metadata specific to Veeva. '
        Zendesk:
          $ref: '#/components/schemas/ConnectorMetadata_Zendesk'
        EventBridge:
          allOf:
          - $ref: '#/components/schemas/EventBridgeMetadata'
          - description: ' The connector metadata specific to Amazon EventBridge. '
        Upsolver:
          allOf:
          - $ref: '#/components/schemas/UpsolverMetadata'
          - description: ' The connector metadata specific to Upsolver. '
        CustomerProfiles:
          allOf:
          - $ref: '#/components/schemas/CustomerProfilesMetadata'
          - description: ' The connector metadata specific to Amazon Connect Customer
              Profiles. '
        Honeycode:
          $ref: '#/components/schemas/ConnectorMetadata_Honeycode'
        SAPOData:
          description: ' The connector metadata specific to SAPOData. '
          properties: {}
          type: object
        Pardot:
          allOf:
          - $ref: '#/components/schemas/PardotMetadata'
          - description: The connector metadata specific to Salesforce Pardot.
      type: object
    ConnectorLabel:
      maxLength: 256
      pattern: "[a-zA-Z0-9][\\w!@#.-]+"
      type: string
    ConnectorDescription:
      maxLength: 2048
      pattern: "[\\w!@#\\-.?,\\s]*"
      type: string
    ConnectorOwner:
      maxLength: 256
      pattern: .*
      type: string
    ConnectorName:
      maxLength: 256
      pattern: .*
      type: string
    ConnectorVersion:
      maxLength: 256
      pattern: \S+
      type: string
    ConnectorModeList:
      items:
        $ref: '#/components/schemas/ConnectorMode'
      type: array
    ConnectorRuntimeSettingList:
      items:
        $ref: '#/components/schemas/ConnectorRuntimeSetting'
      type: array
    SupportedApiVersionList:
      items:
        $ref: '#/components/schemas/SupportedApiVersion'
      type: array
    SupportedOperatorList:
      items:
        $ref: '#/components/schemas/Operators'
      type: array
    SupportedWriteOperationList:
      items:
        $ref: '#/components/schemas/WriteOperationType'
      type: array
    ConnectorProvisioningType:
      description: "The type of provisioning that the connector supports, such as\
        \ Lambda."
      enum:
      - LAMBDA
      type: string
    ConnectorProvisioningConfig:
      description: Contains information about the configuration of the connector being
        registered.
      example:
        lambda:
          lambdaArn: ""
      properties:
        lambda:
          $ref: '#/components/schemas/RegisterConnector_request_connectorProvisioningConfig_lambda'
      type: object
    LogoURL:
      maxLength: 256
      pattern: "^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
      type: string
    Date:
      format: date-time
      type: string
    RegisteredBy:
      maxLength: 512
      pattern: \S+
      type: string
    SupportedDataTransferTypeList:
      items:
        $ref: '#/components/schemas/SupportedDataTransferType'
      type: array
    SupportedDataTransferApis:
      items:
        $ref: '#/components/schemas/DataTransferApi'
      type: array
    ConnectorConfiguration:
      description: ' The configuration settings related to a given connector. '
      properties:
        canUseAsSource:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies whether the connector can be used as a source. '
        canUseAsDestination:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies whether the connector can be used as a destination. '
        supportedDestinationConnectors:
          allOf:
          - $ref: '#/components/schemas/ConnectorTypeList'
          - description: ' Lists the connectors that are available for use as destinations. '
        supportedSchedulingFrequencies:
          allOf:
          - $ref: '#/components/schemas/SchedulingFrequencyTypeList'
          - description: ' Specifies the supported flow frequency for that connector. '
        isPrivateLinkEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies if PrivateLink is enabled for that connector. '
        isPrivateLinkEndpointUrlRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies if a PrivateLink endpoint URL is required. '
        supportedTriggerTypes:
          allOf:
          - $ref: '#/components/schemas/TriggerTypeList'
          - description: ' Specifies the supported trigger types for the flow. '
        connectorMetadata:
          $ref: '#/components/schemas/ConnectorConfiguration_connectorMetadata'
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: The connector type.
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The label used for registering the connector.
        connectorDescription:
          allOf:
          - $ref: '#/components/schemas/ConnectorDescription'
          - description: A description about the connector.
        connectorOwner:
          allOf:
          - $ref: '#/components/schemas/ConnectorOwner'
          - description: The owner who developed the connector.
        connectorName:
          allOf:
          - $ref: '#/components/schemas/ConnectorName'
          - description: The connector name.
        connectorVersion:
          allOf:
          - $ref: '#/components/schemas/ConnectorVersion'
          - description: The connector version.
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Resource Name (ARN) for the registered connector.
        connectorModes:
          allOf:
          - $ref: '#/components/schemas/ConnectorModeList'
          - description: The connection modes that the connector supports.
        authenticationConfig:
          $ref: '#/components/schemas/ConnectorConfiguration_authenticationConfig'
        connectorRuntimeSettings:
          allOf:
          - $ref: '#/components/schemas/ConnectorRuntimeSettingList'
          - description: The required connector runtime settings.
        supportedApiVersions:
          allOf:
          - $ref: '#/components/schemas/SupportedApiVersionList'
          - description: A list of API versions that are supported by the connector.
        supportedOperators:
          allOf:
          - $ref: '#/components/schemas/SupportedOperatorList'
          - description: A list of operators supported by the connector.
        supportedWriteOperations:
          allOf:
          - $ref: '#/components/schemas/SupportedWriteOperationList'
          - description: A list of write operations supported by the connector.
        connectorProvisioningType:
          allOf:
          - $ref: '#/components/schemas/ConnectorProvisioningType'
          - description: The provisioning type used to register the connector.
        connectorProvisioningConfig:
          $ref: '#/components/schemas/ConnectorConfiguration_connectorProvisioningConfig'
        logoURL:
          allOf:
          - $ref: '#/components/schemas/LogoURL'
          - description: Logo URL of the connector.
        registeredAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date on which the connector was registered.
        registeredBy:
          allOf:
          - $ref: '#/components/schemas/RegisteredBy'
          - description: Information about who registered the connector.
        supportedDataTransferTypes:
          allOf:
          - $ref: '#/components/schemas/SupportedDataTransferTypeList'
          - description: <p>The data transfer types that the connector supports.</p>
              <dl> <dt>RECORD</dt> <dd> <p>Structured records.</p> </dd> <dt>FILE</dt>
              <dd> <p>Files or binary data.</p> </dd> </dl>
        supportedDataTransferApis:
          allOf:
          - $ref: '#/components/schemas/SupportedDataTransferApis'
          - description: The APIs of the connector application that Amazon AppFlow
              can use to transfer your data.
      type: object
    ConnectorConfigurationsMap:
      additionalProperties:
        $ref: '#/components/schemas/ConnectorConfiguration'
      type: object
    ConnectorDetail:
      description: Information about the registered connector.
      properties:
        connectorDescription:
          allOf:
          - $ref: '#/components/schemas/ConnectorDescription'
          - description: A description about the registered connector.
        connectorName:
          allOf:
          - $ref: '#/components/schemas/ConnectorName'
          - description: The name of the connector.
        connectorOwner:
          allOf:
          - $ref: '#/components/schemas/ConnectorOwner'
          - description: The owner of the connector.
        connectorVersion:
          allOf:
          - $ref: '#/components/schemas/ConnectorVersion'
          - description: The connector version.
        applicationType:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          - description: The application type of the connector.
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: The connector type.
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: A label used for the connector.
        registeredAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the connector was registered.
        registeredBy:
          allOf:
          - $ref: '#/components/schemas/RegisteredBy'
          - description: The user who registered the connector.
        connectorProvisioningType:
          allOf:
          - $ref: '#/components/schemas/ConnectorProvisioningType'
          - description: The provisioning type that the connector uses.
        connectorModes:
          allOf:
          - $ref: '#/components/schemas/ConnectorModeList'
          - description: The connection mode that the connector supports.
        supportedDataTransferTypes:
          allOf:
          - $ref: '#/components/schemas/SupportedDataTransferTypeList'
          - description: <p>The data transfer types that the connector supports.</p>
              <dl> <dt>RECORD</dt> <dd> <p>Structured records.</p> </dd> <dt>FILE</dt>
              <dd> <p>Files or binary data.</p> </dd> </dl>
      type: object
    Name:
      maxLength: 128
      pattern: \S+
      type: string
    ConnectorEntity:
      description: " The high-level entity that can be queried in Amazon AppFlow.\
        \ For example, a Salesforce entity might be an <i>Account</i> or <i>Opportunity</i>,\
        \ whereas a ServiceNow entity might be an <i>Incident</i>. "
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: ' The name of the connector entity. '
        label:
          allOf:
          - $ref: '#/components/schemas/Label'
          - description: ' The label applied to the connector entity. '
        hasNestedEntities:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Specifies whether the connector entity is a parent or a\
              \ category and has more entities nested underneath it. If another call\
              \ is made with <code>entitiesPath = \"the_current_entity_name_with_hasNestedEntities_true\"\
              </code>, then it returns the nested entities underneath it. This provides\
              \ a way to retrieve all supported entities in a recursive fashion. "
      required:
      - name
      type: object
    Identifier:
      maxLength: 128
      pattern: \S+
      type: string
    String:
      maxLength: 2048
      pattern: .*
      type: string
    SupportedFieldTypeDetails:
      description: ' Contains details regarding all the supported <code>FieldTypes</code>
        and their corresponding <code>filterOperators</code> and <code>supportedValues</code>. '
      properties:
        v1:
          $ref: '#/components/schemas/SupportedFieldTypeDetails_v1'
      required:
      - v1
      type: object
    SourceFieldProperties:
      description: ' The properties that can be applied to a field when the connector
        is being used as a source. '
      properties:
        isRetrievable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Indicates whether the field can be returned in a search
              result. '
        isQueryable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Indicates if the field can be queried. '
        isTimestampFieldForIncrementalQueries:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates if this timestamp field can be used for incremental
              queries.
      type: object
    DestinationFieldProperties:
      description: ' The properties that can be applied to a field when connector
        is being used as a destination. '
      properties:
        isCreatable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies if the destination field can be created by the
              current user. '
        isNullable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies if the destination field can have a null value. '
        isUpsertable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Specifies if the flow run can either insert new rows in\
              \ the destination field if they do not already exist, or update them\
              \ if they do. "
        isUpdatable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies whether the field can be updated during an <code>UPDATE</code>
              or <code>UPSERT</code> write operation. '
        isDefaultedOnCreate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the field can use the default value during
              a Create operation.
        supportedWriteOperations:
          allOf:
          - $ref: '#/components/schemas/SupportedWriteOperationList'
          - description: " A list of supported write operations. For each write operation\
              \ listed, this field can be used in <code>idFieldNames</code> when that\
              \ write operation is present as a destination option. "
      type: object
    CustomProperties:
      additionalProperties:
        $ref: '#/components/schemas/CustomPropertyValue'
      maxProperties: 50
      minProperties: 0
      type: object
    ConnectorEntityField:
      description: " Describes the data model of a connector field. For example, for\
        \ an <i>account</i> entity, the fields would be <i>account name</i>, <i>account\
        \ ID</i>, and so on. "
      properties:
        identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: ' The unique identifier of the connector field. '
        parentIdentifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The parent identifier of the connector field.
        label:
          allOf:
          - $ref: '#/components/schemas/Label'
          - description: ' The label applied to a connector entity field. '
        isPrimaryKey:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Booelan value that indicates whether this field can be used
              as a primary key.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Default value that can be assigned to this field.
        isDeprecated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Booelan value that indicates whether this field is deprecated
              or not.
        supportedFieldTypeDetails:
          $ref: '#/components/schemas/ConnectorEntityField_supportedFieldTypeDetails'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' A description of the connector entity field. '
        sourceProperties:
          $ref: '#/components/schemas/ConnectorEntityField_sourceProperties'
        destinationProperties:
          $ref: '#/components/schemas/ConnectorEntityField_destinationProperties'
        customProperties:
          allOf:
          - $ref: '#/components/schemas/CustomProperties'
          - description: A map that has specific properties related to the ConnectorEntityField.
      required:
      - identifier
      type: object
    ConnectorEntityFieldList:
      items:
        $ref: '#/components/schemas/ConnectorEntityField'
      type: array
    ConnectorEntityList:
      items:
        $ref: '#/components/schemas/ConnectorEntity'
      type: array
    ConnectorEntityMap:
      additionalProperties:
        $ref: '#/components/schemas/ConnectorEntityList'
      type: object
    ConnectorList:
      items:
        $ref: '#/components/schemas/ConnectorDetail'
      type: array
    DatadogMetadata:
      description: ' The connector metadata specific to Datadog. '
      properties: {}
      type: object
    DynatraceMetadata:
      description: ' The connector metadata specific to Dynatrace. '
      properties: {}
      type: object
    GoogleAnalyticsMetadata:
      description: ' The connector metadata specific to Google Analytics. '
      properties:
        oAuthScopes:
          allOf:
          - $ref: '#/components/schemas/OAuthScopeList'
          - description: ' The desired authorization scope for the Google Analytics
              account. '
      type: object
    InforNexusMetadata:
      description: ' The connector metadata specific to Infor Nexus. '
      properties: {}
      type: object
    MarketoMetadata:
      description: ' The connector metadata specific to Marketo. '
      properties: {}
      type: object
    RedshiftMetadata:
      description: ' The connector metadata specific to Amazon Redshift. '
      properties: {}
      type: object
    S3Metadata:
      description: ' The connector metadata specific to Amazon S3. '
      properties: {}
      type: object
    SalesforceMetadata:
      description: ' The connector metadata specific to Salesforce. '
      properties:
        oAuthScopes:
          allOf:
          - $ref: '#/components/schemas/OAuthScopeList'
          - description: ' The desired authorization scope for the Salesforce account. '
        dataTransferApis:
          allOf:
          - $ref: '#/components/schemas/SalesforceDataTransferApiList'
          - description: The Salesforce APIs that you can have Amazon AppFlow use
              when your flows transfers data to or from Salesforce.
        oauth2GrantTypesSupported:
          allOf:
          - $ref: '#/components/schemas/OAuth2GrantTypeSupportedList'
          - description: "<p>The OAuth 2.0 grant types that Amazon AppFlow can use\
              \ when it requests an access token from Salesforce. Amazon AppFlow requires\
              \ an access token each time it attempts to access your Salesforce records.</p>\
              \ <dl> <dt>AUTHORIZATION_CODE</dt> <dd> <p>Amazon AppFlow passes an\
              \ authorization code when it requests the access token from Salesforce.\
              \ Amazon AppFlow receives the authorization code from Salesforce after\
              \ you log in to your Salesforce account and authorize Amazon AppFlow\
              \ to access your records.</p> </dd> <dt>CLIENT_CREDENTIALS</dt> <dd>\
              \ <p>Amazon AppFlow passes client credentials (a client ID and client\
              \ secret) when it requests the access token from Salesforce. You provide\
              \ these credentials to Amazon AppFlow when you define the connection\
              \ to your Salesforce account.</p> </dd> <dt>JWT_BEARER</dt> <dd> <p>Amazon\
              \ AppFlow passes a JSON web token (JWT) when it requests the access\
              \ token from Salesforce. You provide the JWT to Amazon AppFlow when\
              \ you define the connection to your Salesforce account. When you use\
              \ this grant type, you don't need to log in to your Salesforce account\
              \ to authorize Amazon AppFlow to access your records.</p> </dd> </dl>"
      type: object
    ServiceNowMetadata:
      description: ' The connector metadata specific to ServiceNow. '
      properties: {}
      type: object
    SingularMetadata:
      description: ' The connector metadata specific to Singular. '
      properties: {}
      type: object
    SlackMetadata:
      description: ' The connector metadata specific to Slack. '
      properties:
        oAuthScopes:
          allOf:
          - $ref: '#/components/schemas/OAuthScopeList'
          - description: ' The desired authorization scope for the Slack account. '
      type: object
    SnowflakeMetadata:
      description: ' The connector metadata specific to Snowflake. '
      properties:
        supportedRegions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: ' Specifies the supported Amazon Web Services Regions when
              using Snowflake. '
      type: object
    TrendmicroMetadata:
      description: ' The connector metadata specific to Trend Micro. '
      properties: {}
      type: object
    VeevaMetadata:
      description: ' The connector metadata specific to Veeva. '
      properties: {}
      type: object
    ZendeskMetadata:
      description: ' The connector metadata specific to Zendesk. '
      properties:
        oAuthScopes:
          allOf:
          - $ref: '#/components/schemas/OAuthScopeList'
          - description: ' The desired authorization scope for the Zendesk account. '
      type: object
    EventBridgeMetadata:
      description: ' The connector metadata specific to Amazon EventBridge. '
      properties: {}
      type: object
    UpsolverMetadata:
      description: ' The connector metadata specific to Upsolver. '
      properties: {}
      type: object
    CustomerProfilesMetadata:
      description: ' The connector metadata specific to Amazon Connect Customer Profiles. '
      properties: {}
      type: object
    HoneycodeMetadata:
      description: ' The connector metadata specific to Amazon Honeycode. '
      properties:
        oAuthScopes:
          allOf:
          - $ref: '#/components/schemas/OAuthScopeList'
          - description: ' The desired authorization scope for the Amazon Honeycode
              account. '
      type: object
    SAPODataMetadata:
      description: ' The connector metadata specific to SAPOData. '
      properties: {}
      type: object
    PardotMetadata:
      description: The connector metadata specific to Salesforce Pardot.
      properties: {}
      type: object
    ConnectorMode:
      maxLength: 256
      pattern: \S+
      type: string
    RedirectUri:
      maxLength: 512
      pattern: \S+
      type: string
    ConnectorOAuthRequest:
      description: " Used by select connectors for which the OAuth workflow is supported,\
        \ such as Salesforce, Google Analytics, Marketo, Zendesk, and Slack. "
      example:
        redirectUri: ""
        authCode: ""
      properties:
        authCode:
          allOf:
          - $ref: '#/components/schemas/AuthCode'
          - description: ' The code provided by the connector when it has been authenticated
              via the connected app. '
        redirectUri:
          allOf:
          - $ref: '#/components/schemas/RedirectUri'
          - description: ' The URL to which the authentication server redirects the
              browser after authorization has been granted. '
      type: object
    DatadogConnectorOperator:
      enum:
      - PROJECTION
      - BETWEEN
      - EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    DynatraceConnectorOperator:
      enum:
      - PROJECTION
      - BETWEEN
      - EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    GoogleAnalyticsConnectorOperator:
      enum:
      - PROJECTION
      - BETWEEN
      type: string
    InforNexusConnectorOperator:
      enum:
      - PROJECTION
      - BETWEEN
      - EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    MarketoConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    S3ConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    SalesforceConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - CONTAINS
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    ServiceNowConnectorOperator:
      enum:
      - PROJECTION
      - CONTAINS
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    SingularConnectorOperator:
      enum:
      - PROJECTION
      - EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    SlackConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    TrendmicroConnectorOperator:
      enum:
      - PROJECTION
      - EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    VeevaConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - CONTAINS
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    ZendeskConnectorOperator:
      enum:
      - PROJECTION
      - GREATER_THAN
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    SAPODataConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - CONTAINS
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    Operator:
      enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - CONTAINS
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    PardotConnectorOperator:
      enum:
      - PROJECTION
      - EQUAL_TO
      - NO_OP
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      type: string
    ConnectorOperator:
      description: ' The operation to be performed on the provided source fields. '
      properties:
        Amplitude:
          allOf:
          - $ref: '#/components/schemas/AmplitudeConnectorOperator'
          - description: ' The operation to be performed on the provided Amplitude
              source fields. '
        Datadog:
          allOf:
          - $ref: '#/components/schemas/DatadogConnectorOperator'
          - description: ' The operation to be performed on the provided Datadog source
              fields. '
        Dynatrace:
          allOf:
          - $ref: '#/components/schemas/DynatraceConnectorOperator'
          - description: ' The operation to be performed on the provided Dynatrace
              source fields. '
        GoogleAnalytics:
          allOf:
          - $ref: '#/components/schemas/GoogleAnalyticsConnectorOperator'
          - description: ' The operation to be performed on the provided Google Analytics
              source fields. '
        InforNexus:
          allOf:
          - $ref: '#/components/schemas/InforNexusConnectorOperator'
          - description: ' The operation to be performed on the provided Infor Nexus
              source fields. '
        Marketo:
          allOf:
          - $ref: '#/components/schemas/MarketoConnectorOperator'
          - description: ' The operation to be performed on the provided Marketo source
              fields. '
        S3:
          allOf:
          - $ref: '#/components/schemas/S3ConnectorOperator'
          - description: ' The operation to be performed on the provided Amazon S3
              source fields. '
        Salesforce:
          allOf:
          - $ref: '#/components/schemas/SalesforceConnectorOperator'
          - description: ' The operation to be performed on the provided Salesforce
              source fields. '
        ServiceNow:
          allOf:
          - $ref: '#/components/schemas/ServiceNowConnectorOperator'
          - description: ' The operation to be performed on the provided ServiceNow
              source fields. '
        Singular:
          allOf:
          - $ref: '#/components/schemas/SingularConnectorOperator'
          - description: ' The operation to be performed on the provided Singular
              source fields. '
        Slack:
          allOf:
          - $ref: '#/components/schemas/SlackConnectorOperator'
          - description: ' The operation to be performed on the provided Slack source
              fields. '
        Trendmicro:
          allOf:
          - $ref: '#/components/schemas/TrendmicroConnectorOperator'
          - description: ' The operation to be performed on the provided Trend Micro
              source fields. '
        Veeva:
          allOf:
          - $ref: '#/components/schemas/VeevaConnectorOperator'
          - description: ' The operation to be performed on the provided Veeva source
              fields. '
        Zendesk:
          allOf:
          - $ref: '#/components/schemas/ZendeskConnectorOperator'
          - description: ' The operation to be performed on the provided Zendesk source
              fields. '
        SAPOData:
          allOf:
          - $ref: '#/components/schemas/SAPODataConnectorOperator'
          - description: ' The operation to be performed on the provided SAPOData
              source fields. '
        CustomConnector:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: Operators supported by the custom connector.
        Pardot:
          allOf:
          - $ref: '#/components/schemas/PardotConnectorOperator'
          - description: The operation to be performed on the provided Salesforce
              Pardot source fields.
      type: object
    ConnectorProfileArn:
      maxLength: 512
      pattern: "arn:aws:appflow:.*:[0-9]+:.*"
      type: string
    PrivateConnectionProvisioningState:
      description: ' Specifies the private connection provisioning state. '
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/PrivateConnectionProvisioningStatus'
          - description: ' Specifies the private connection provisioning status. '
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/PrivateConnectionProvisioningFailureMessage'
          - description: ' Specifies the private connection provisioning failure reason. '
        failureCause:
          allOf:
          - $ref: '#/components/schemas/PrivateConnectionProvisioningFailureCause'
          - description: ' Specifies the private connection provisioning failure cause. '
      type: object
    ConnectorProfile:
      description: " Describes an instance of a connector. This includes the provided\
        \ name, credentials ARN, connection-mode, and so on. To keep the API intuitive\
        \ and extensible, the fields that are common to all types of connector profiles\
        \ are explicitly specified at the top level. The rest of the connector-specific\
        \ properties are available via the <code>connectorProfileProperties</code>\
        \ field. "
      properties:
        connectorProfileArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileArn'
          - description: ' The Amazon Resource Name (ARN) of the connector profile. '
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: ' The name of the connector profile. The name is unique for
              each <code>ConnectorProfile</code> in the Amazon Web Services account. '
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " The type of connector, such as Salesforce, Amplitude, and\
              \ so on. "
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The label for the connector profile being created.
        connectionMode:
          allOf:
          - $ref: '#/components/schemas/ConnectionMode'
          - description: ' Indicates the connection mode and if it is public or private. '
        credentialsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: ' The Amazon Resource Name (ARN) of the connector profile
              credentials. '
        connectorProfileProperties:
          $ref: '#/components/schemas/CreateConnectorProfile_request_connectorProfileConfig_connectorProfileProperties'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies when the connector profile was created. '
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies when the connector profile was last updated. '
        privateConnectionProvisioningState:
          $ref: '#/components/schemas/ConnectorProfile_privateConnectionProvisioningState'
      type: object
    ConnectorProfileConfig:
      description: ' Defines the connector-specific configuration and credentials
        for the connector profile. '
      properties:
        connectorProfileProperties:
          $ref: '#/components/schemas/CreateConnectorProfile_request_connectorProfileConfig_connectorProfileProperties'
        connectorProfileCredentials:
          $ref: '#/components/schemas/CreateConnectorProfile_request_connectorProfileConfig_connectorProfileCredentials'
      required:
      - connectorProfileProperties
      type: object
    DatadogConnectorProfileCredentials:
      description: ' The connector-specific credentials required by Datadog. '
      properties:
        apiKey:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          - description: " A unique alphanumeric identifier used to authenticate a\
              \ user, developer, or calling program to your API. "
        applicationKey:
          allOf:
          - $ref: '#/components/schemas/ApplicationKey'
          - description: " Application keys, in conjunction with your API key, give\
              \ you full access to Datadog’s programmatic API. Application keys are\
              \ associated with the user account that created them. The application\
              \ key is used to log all requests made to the API. "
      required:
      - apiKey
      - applicationKey
      type: object
    DynatraceConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required by Dynatrace. '
      properties:
        apiToken:
          allOf:
          - $ref: '#/components/schemas/ApiToken'
          - description: ' The API tokens used by Dynatrace API to authenticate various
              API calls. '
      required:
      - apiToken
      type: object
    GoogleAnalyticsConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required by Google
        Analytics. '
      properties:
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: ' The identifier for the desired client. '
        clientSecret:
          allOf:
          - $ref: '#/components/schemas/ClientSecret'
          - description: ' The client secret used by the OAuth client to authenticate
              to the authorization server. '
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: ' The credentials used to access protected Google Analytics
              resources. '
        refreshToken:
          allOf:
          - $ref: '#/components/schemas/RefreshToken'
          - description: " The credentials used to acquire new access tokens. This\
              \ is required only for OAuth2 access tokens, and is not required for\
              \ OAuth1 access tokens. "
        oAuthRequest:
          $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileCredentials_oAuthRequest'
      required:
      - clientId
      - clientSecret
      type: object
    HoneycodeConnectorProfileCredentials:
      description: ' The connector-specific credentials required when using Amazon
        Honeycode. '
      properties:
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: ' The credentials used to access protected Amazon Honeycode
              resources. '
        refreshToken:
          allOf:
          - $ref: '#/components/schemas/RefreshToken'
          - description: ' The credentials used to acquire new access tokens. '
        oAuthRequest:
          $ref: '#/components/schemas/ConnectorOAuthRequest'
      type: object
    InforNexusConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required by Infor
        Nexus. '
      properties:
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyId'
          - description: ' The Access Key portion of the credentials. '
        userId:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: ' The identifier for the user. '
        secretAccessKey:
          allOf:
          - $ref: '#/components/schemas/Key'
          - description: ' The secret key used to sign requests. '
        datakey:
          allOf:
          - $ref: '#/components/schemas/Key'
          - description: ' The encryption keys used to encrypt data. '
      required:
      - accessKeyId
      - datakey
      - secretAccessKey
      - userId
      type: object
    MarketoConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required by Marketo. '
      properties:
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: ' The identifier for the desired client. '
        clientSecret:
          allOf:
          - $ref: '#/components/schemas/ClientSecret'
          - description: ' The client secret used by the OAuth client to authenticate
              to the authorization server. '
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: ' The credentials used to access protected Marketo resources. '
        oAuthRequest:
          $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileCredentials_oAuthRequest'
      required:
      - clientId
      - clientSecret
      type: object
    RedshiftConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        Amazon Redshift. '
      properties:
        username:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The name of the user. '
        password:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: ' The password that corresponds to the user name. '
      type: object
    SalesforceConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        Salesforce. '
      properties:
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: ' The credentials used to access protected Salesforce resources. '
        refreshToken:
          allOf:
          - $ref: '#/components/schemas/RefreshToken'
          - description: ' The credentials used to acquire new access tokens. '
        oAuthRequest:
          $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileCredentials_oAuthRequest'
        clientCredentialsArn:
          allOf:
          - $ref: '#/components/schemas/ClientCredentialsArn'
          - description: " The secret manager ARN, which contains the client ID and\
              \ client secret of the connected app. "
        oAuth2GrantType:
          allOf:
          - $ref: '#/components/schemas/OAuth2GrantType'
          - description: "<p>Specifies the OAuth 2.0 grant type that Amazon AppFlow\
              \ uses when it requests an access token from Salesforce. Amazon AppFlow\
              \ requires an access token each time it attempts to access your Salesforce\
              \ records.</p> <p>You can specify one of the following values:</p> <dl>\
              \ <dt>AUTHORIZATION_CODE</dt> <dd> <p>Amazon AppFlow passes an authorization\
              \ code when it requests the access token from Salesforce. Amazon AppFlow\
              \ receives the authorization code from Salesforce after you log in to\
              \ your Salesforce account and authorize Amazon AppFlow to access your\
              \ records.</p> </dd> <dt>CLIENT_CREDENTIALS</dt> <dd> <p>Amazon AppFlow\
              \ passes client credentials (a client ID and client secret) when it\
              \ requests the access token from Salesforce. You provide these credentials\
              \ to Amazon AppFlow when you define the connection to your Salesforce\
              \ account.</p> </dd> <dt>JWT_BEARER</dt> <dd> <p>Amazon AppFlow passes\
              \ a JSON web token (JWT) when it requests the access token from Salesforce.\
              \ You provide the JWT to Amazon AppFlow when you define the connection\
              \ to your Salesforce account. When you use this grant type, you don't\
              \ need to log in to your Salesforce account to authorize Amazon AppFlow\
              \ to access your records.</p> </dd> </dl>"
        jwtToken:
          allOf:
          - $ref: '#/components/schemas/JwtToken'
          - description: A JSON web token (JWT) that authorizes Amazon AppFlow to
              access your Salesforce records.
      type: object
    ServiceNowConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        ServiceNow. '
      properties:
        username:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: ' The name of the user. '
        password:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: ' The password that corresponds to the user name. '
      required:
      - password
      - username
      type: object
    SingularConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        Singular. '
      properties:
        apiKey:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          - description: " A unique alphanumeric identifier used to authenticate a\
              \ user, developer, or calling program to your API. "
      required:
      - apiKey
      type: object
    SlackConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        Slack. '
      properties:
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: ' The identifier for the client. '
        clientSecret:
          allOf:
          - $ref: '#/components/schemas/ClientSecret'
          - description: ' The client secret used by the OAuth client to authenticate
              to the authorization server. '
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: ' The credentials used to access protected Slack resources. '
        oAuthRequest:
          $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileCredentials_oAuthRequest'
      required:
      - clientId
      - clientSecret
      type: object
    SnowflakeConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        Snowflake. '
      properties:
        username:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: ' The name of the user. '
        password:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: ' The password that corresponds to the user name. '
      required:
      - password
      - username
      type: object
    TrendmicroConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        Trend Micro. '
      properties:
        apiSecretKey:
          allOf:
          - $ref: '#/components/schemas/ApiSecretKey'
          - description: ' The Secret Access Key portion of the credentials. '
      required:
      - apiSecretKey
      type: object
    VeevaConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        Veeva. '
      properties:
        username:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: ' The name of the user. '
        password:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: ' The password that corresponds to the user name. '
      required:
      - password
      - username
      type: object
    ZendeskConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        Zendesk. '
      properties:
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: ' The identifier for the desired client. '
        clientSecret:
          allOf:
          - $ref: '#/components/schemas/ClientSecret'
          - description: ' The client secret used by the OAuth client to authenticate
              to the authorization server. '
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: ' The credentials used to access protected Zendesk resources. '
        oAuthRequest:
          $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileCredentials_oAuthRequest'
      required:
      - clientId
      - clientSecret
      type: object
    SAPODataConnectorProfileCredentials:
      description: ' The connector-specific profile credentials required when using
        SAPOData. '
      example:
        basicAuthCredentials:
          password: ""
          username: ""
        oAuthCredentials:
          clientId: ""
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          clientSecret: ""
          accessToken: ""
          refreshToken: ""
      properties:
        basicAuthCredentials:
          $ref: '#/components/schemas/SAPODataConnectorProfileCredentials_basicAuthCredentials'
        oAuthCredentials:
          $ref: '#/components/schemas/SAPODataConnectorProfileCredentials_oAuthCredentials'
      type: object
    CustomConnectorProfileCredentials:
      description: The connector-specific profile credentials that are required when
        using the custom connector.
      example:
        apiKey:
          apiKey: ""
          apiSecretKey: ""
        custom:
          customAuthenticationType: ""
          credentialsMap: ""
        authenticationType: ""
        basic:
          password: ""
          username: ""
        oauth2:
          clientId: ""
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          clientSecret: ""
          accessToken: ""
          refreshToken: ""
      properties:
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication type that the custom connector uses for
              authenticating while creating a connector profile.
        basic:
          $ref: '#/components/schemas/CustomConnectorProfileCredentials_basic'
        oauth2:
          $ref: '#/components/schemas/CustomConnectorProfileCredentials_oauth2'
        apiKey:
          $ref: '#/components/schemas/CustomConnectorProfileCredentials_apiKey'
        custom:
          $ref: '#/components/schemas/CustomConnectorProfileCredentials_custom'
      required:
      - authenticationType
      type: object
    PardotConnectorProfileCredentials:
      description: The connector-specific profile credentials required when using
        Salesforce Pardot.
      properties:
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: The credentials used to access protected Salesforce Pardot
              resources.
        refreshToken:
          allOf:
          - $ref: '#/components/schemas/RefreshToken'
          - description: The credentials used to acquire new access tokens.
        oAuthRequest:
          $ref: '#/components/schemas/ConnectorOAuthRequest'
        clientCredentialsArn:
          allOf:
          - $ref: '#/components/schemas/ClientCredentialsArn'
          - description: "The secret manager ARN, which contains the client ID and\
              \ client secret of the connected app."
      type: object
    ConnectorProfileDetailList:
      items:
        $ref: '#/components/schemas/ConnectorProfile'
      type: array
    ConnectorProfileNameList:
      items:
        $ref: '#/components/schemas/ConnectorProfileName'
      maxItems: 100
      minItems: 0
      type: array
    DatadogConnectorProfileProperties:
      description: ' The connector-specific profile properties required by Datadog. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the Datadog resource. '
      required:
      - instanceUrl
      type: object
    DynatraceConnectorProfileProperties:
      description: ' The connector-specific profile properties required by Dynatrace. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the Dynatrace resource. '
      required:
      - instanceUrl
      type: object
    GoogleAnalyticsConnectorProfileProperties:
      description: ' The connector-specific profile properties required by Google
        Analytics. '
      properties: {}
      type: object
    HoneycodeConnectorProfileProperties:
      description: ' The connector-specific properties required when using Amazon
        Honeycode. '
      properties: {}
      type: object
    InforNexusConnectorProfileProperties:
      description: ' The connector-specific profile properties required by Infor Nexus. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the Infor Nexus resource. '
      required:
      - instanceUrl
      type: object
    MarketoConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Marketo. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the Marketo resource. '
      required:
      - instanceUrl
      type: object
    RedshiftConnectorProfileProperties:
      description: ' The connector-specific profile properties when using Amazon Redshift. '
      properties:
        databaseUrl:
          allOf:
          - $ref: '#/components/schemas/DatabaseUrl'
          - description: ' The JDBC URL of the Amazon Redshift cluster. '
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: ' A name for the associated Amazon S3 bucket. '
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: ' The object key for the destination bucket in which Amazon
              AppFlow places the files. '
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: " The Amazon Resource Name (ARN) of IAM role that grants\
              \ Amazon Redshift read-only access to Amazon S3. For more information,\
              \ and for the polices that you attach to this role, see <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/security_iam_service-role-policies.html#redshift-access-s3\"\
              >Allow Amazon Redshift to access your Amazon AppFlow data in Amazon\
              \ S3</a>."
        dataApiRoleArn:
          allOf:
          - $ref: '#/components/schemas/DataApiRoleArn'
          - description: "The Amazon Resource Name (ARN) of an IAM role that permits\
              \ Amazon AppFlow to access your Amazon Redshift database through the\
              \ Data API. For more information, and for the polices that you attach\
              \ to this role, see <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/security_iam_service-role-policies.html#access-redshift\"\
              >Allow Amazon AppFlow to access Amazon Redshift databases with the Data\
              \ API</a>."
        isRedshiftServerless:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the connector profile defines a connection
              to an Amazon Redshift Serverless data warehouse.
        clusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/ClusterIdentifier'
          - description: The unique ID that's assigned to an Amazon Redshift cluster.
        workgroupName:
          allOf:
          - $ref: '#/components/schemas/WorkgroupName'
          - description: The name of an Amazon Redshift workgroup.
        databaseName:
          allOf:
          - $ref: '#/components/schemas/DatabaseName'
          - description: The name of an Amazon Redshift database.
      required:
      - bucketName
      - roleArn
      type: object
    SalesforceConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Salesforce. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the Salesforce resource. '
        isSandboxEnvironment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Indicates whether the connector profile applies to a sandbox
              or production environment. '
        usePrivateLinkForMetadataAndAuthorization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>If the connection mode for the connector profile is private,\
              \ this parameter sets whether Amazon AppFlow uses the private network\
              \ to send metadata and authorization calls to Salesforce. Amazon AppFlow\
              \ sends private calls through Amazon Web Services PrivateLink. These\
              \ calls travel through Amazon Web Services infrastructure without being\
              \ exposed to the public internet.</p> <p>Set either of the following\
              \ values:</p> <dl> <dt>true</dt> <dd> <p>Amazon AppFlow sends all calls\
              \ to Salesforce over the private network.</p> <p>These private calls\
              \ are:</p> <ul> <li> <p>Calls to get metadata about your Salesforce\
              \ records. This metadata describes your Salesforce objects and their\
              \ fields.</p> </li> <li> <p>Calls to get or refresh access tokens that\
              \ allow Amazon AppFlow to access your Salesforce records.</p> </li>\
              \ <li> <p>Calls to transfer your Salesforce records as part of a flow\
              \ run.</p> </li> </ul> </dd> <dt>false</dt> <dd> <p>The default value.\
              \ Amazon AppFlow sends some calls to Salesforce privately and other\
              \ calls over the public internet.</p> <p>The public calls are: </p>\
              \ <ul> <li> <p>Calls to get metadata about your Salesforce records.</p>\
              \ </li> <li> <p>Calls to get or refresh access tokens.</p> </li> </ul>\
              \ <p>The private calls are:</p> <ul> <li> <p>Calls to transfer your\
              \ Salesforce records as part of a flow run.</p> </li> </ul> </dd> </dl>"
      type: object
    ServiceNowConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        ServiceNow. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the ServiceNow resource. '
      required:
      - instanceUrl
      type: object
    SingularConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Singular. '
      properties: {}
      type: object
    SlackConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Slack. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the Slack resource. '
      required:
      - instanceUrl
      type: object
    SnowflakeConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Snowflake. '
      properties:
        warehouse:
          allOf:
          - $ref: '#/components/schemas/Warehouse'
          - description: ' The name of the Snowflake warehouse. '
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          - description: " The name of the Amazon S3 stage that was created while\
              \ setting up an Amazon S3 stage in the Snowflake account. This is written\
              \ in the following format: &lt; Database&gt;&lt; Schema&gt;&lt;Stage\
              \ Name&gt;. "
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: ' The name of the Amazon S3 bucket associated with Snowflake. '
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: ' The bucket path that refers to the Amazon S3 bucket associated
              with Snowflake. '
        privateLinkServiceName:
          allOf:
          - $ref: '#/components/schemas/PrivateLinkServiceName'
          - description: ' The Snowflake Private Link service name to be used for
              private data transfers. '
        accountName:
          allOf:
          - $ref: '#/components/schemas/AccountName'
          - description: ' The name of the account. '
        region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: ' The Amazon Web Services Region of the Snowflake account. '
      required:
      - bucketName
      - stage
      - warehouse
      type: object
    TrendmicroConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Trend Micro. '
      properties: {}
      type: object
    VeevaConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Veeva. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the Veeva resource. '
      required:
      - instanceUrl
      type: object
    ZendeskConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        Zendesk. '
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: ' The location of the Zendesk resource. '
      required:
      - instanceUrl
      type: object
    SAPODataConnectorProfileProperties:
      description: ' The connector-specific profile properties required when using
        SAPOData. '
      example:
        privateLinkServiceName: ""
        logonLanguage: ""
        oAuthProperties:
          tokenUrl: ""
          oAuthScopes: ""
          authCodeUrl: ""
        disableSSO: ""
        applicationHostUrl: ""
        applicationServicePath: ""
        clientNumber: ""
        portNumber: ""
      properties:
        applicationHostUrl:
          allOf:
          - $ref: '#/components/schemas/ApplicationHostUrl'
          - description: ' The location of the SAPOData resource. '
        applicationServicePath:
          allOf:
          - $ref: '#/components/schemas/ApplicationServicePath'
          - description: ' The application path to catalog service. '
        portNumber:
          allOf:
          - $ref: '#/components/schemas/PortNumber'
          - description: ' The port number of the SAPOData instance. '
        clientNumber:
          allOf:
          - $ref: '#/components/schemas/ClientNumber'
          - description: ' The client number for the client creating the connection. '
        logonLanguage:
          allOf:
          - $ref: '#/components/schemas/LogonLanguage'
          - description: ' The logon language of SAPOData instance. '
        privateLinkServiceName:
          allOf:
          - $ref: '#/components/schemas/PrivateLinkServiceName'
          - description: ' The SAPOData Private Link service name to be used for private
              data transfers. '
        oAuthProperties:
          $ref: '#/components/schemas/SAPODataConnectorProfileProperties_oAuthProperties'
        disableSSO:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>If you set this parameter to <code>true</code>, Amazon\
              \ AppFlow bypasses the single sign-on (SSO) settings in your SAP account\
              \ when it accesses your SAP OData instance.</p> <p>Whether you need\
              \ this option depends on the types of credentials that you applied to\
              \ your SAP OData connection profile. If your profile uses basic authentication\
              \ credentials, SAP SSO can prevent Amazon AppFlow from connecting to\
              \ your account with your username and password. In this case, bypassing\
              \ SSO makes it possible for Amazon AppFlow to connect successfully.\
              \ However, if your profile uses OAuth credentials, this parameter has\
              \ no affect.</p>"
      required:
      - applicationHostUrl
      - applicationServicePath
      - clientNumber
      - portNumber
      type: object
    CustomConnectorProfileProperties:
      description: The profile properties required by the custom connector.
      properties:
        profileProperties:
          allOf:
          - $ref: '#/components/schemas/ProfilePropertiesMap'
          - description: A map of properties that are required to create a profile
              for the custom connector.
        oAuth2Properties:
          $ref: '#/components/schemas/OAuth2Properties'
      type: object
    PardotConnectorProfileProperties:
      description: The connector-specific profile properties required when using Salesforce
        Pardot.
      properties:
        instanceUrl:
          allOf:
          - $ref: '#/components/schemas/InstanceUrl'
          - description: The location of the Salesforce Pardot resource.
        isSandboxEnvironment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the connector profile applies to a sandbox
              or production environment.
        businessUnitId:
          allOf:
          - $ref: '#/components/schemas/BusinessUnitId'
          - description: The business unit id of Salesforce Pardot instance.
      type: object
    ConnectorRuntimeSettingDataType:
      maxLength: 256
      pattern: \S+
      type: string
    ConnectorRuntimeSettingScope:
      maxLength: 256
      pattern: \S+
      type: string
    ConnectorSuppliedValueOptionList:
      items:
        $ref: '#/components/schemas/ConnectorSuppliedValue'
      type: array
    ConnectorRuntimeSetting:
      description: Contains information about the connector runtime settings that
        are required for flow execution.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          - description: Contains value information about the connector runtime setting.
        dataType:
          allOf:
          - $ref: '#/components/schemas/ConnectorRuntimeSettingDataType'
          - description: Data type of the connector runtime setting.
        isRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether this connector runtime setting is required.
        label:
          allOf:
          - $ref: '#/components/schemas/Label'
          - description: A label used for connector runtime setting.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description about the connector runtime setting.
        scope:
          allOf:
          - $ref: '#/components/schemas/ConnectorRuntimeSettingScope'
          - description: Indicates the scope of the connector runtime setting.
        connectorSuppliedValueOptions:
          allOf:
          - $ref: '#/components/schemas/ConnectorSuppliedValueOptionList'
          - description: Contains default values for the connector runtime setting
              that are supplied by the connector.
      type: object
    ConnectorSuppliedValue:
      maxLength: 256
      pattern: \S+
      type: string
    KMSArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws:kms:.*:[0-9]+:.*"
      type: string
    CreateConnectorProfileRequest:
      example:
        connectorType: ""
        connectorProfileConfig:
          connectorProfileCredentials:
            Amplitude:
              apiKey: ""
              secretKey: ""
            GoogleAnalytics:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
              refreshToken: ""
            ServiceNow:
              password: ""
              username: ""
            CustomConnector:
              apiKey:
                apiKey: ""
                apiSecretKey: ""
              custom:
                customAuthenticationType: ""
                credentialsMap: ""
              authenticationType: ""
              basic:
                password: ""
                username: ""
              oauth2:
                clientId: ""
                oAuthRequest:
                  redirectUri: ""
                  authCode: ""
                clientSecret: ""
                accessToken: ""
                refreshToken: ""
            SAPOData:
              basicAuthCredentials:
                password: ""
                username: ""
              oAuthCredentials:
                clientId: ""
                oAuthRequest:
                  redirectUri: ""
                  authCode: ""
                clientSecret: ""
                accessToken: ""
                refreshToken: ""
            Pardot:
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              accessToken: ""
              clientCredentialsArn: ""
              refreshToken: ""
            Honeycode:
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              accessToken: ""
              refreshToken: ""
            Veeva:
              password: ""
              username: ""
            Trendmicro:
              apiSecretKey: ""
            Datadog:
              apiKey: ""
              applicationKey: ""
            Marketo:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
            Redshift:
              password: ""
              username: ""
            Singular:
              apiKey: ""
            Slack:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
            Snowflake:
              password: ""
              username: ""
            Dynatrace:
              apiToken: ""
            Zendesk:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
            InforNexus:
              accessKeyId: ""
              secretAccessKey: ""
              datakey: ""
              userId: ""
            Salesforce:
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              oAuth2GrantType: ""
              jwtToken: ""
              accessToken: ""
              clientCredentialsArn: ""
              refreshToken: ""
          connectorProfileProperties:
            Amplitude: ""
            GoogleAnalytics: ""
            ServiceNow:
              instanceUrl: ""
            CustomConnector:
              oAuth2Properties:
                tokenUrl: ""
                tokenUrlCustomProperties: ""
                oAuth2GrantType: ""
              profileProperties: ""
            SAPOData:
              privateLinkServiceName: ""
              logonLanguage: ""
              oAuthProperties:
                tokenUrl: ""
                oAuthScopes: ""
                authCodeUrl: ""
              disableSSO: ""
              applicationHostUrl: ""
              applicationServicePath: ""
              clientNumber: ""
              portNumber: ""
            Pardot:
              isSandboxEnvironment: ""
              businessUnitId: ""
              instanceUrl: ""
            Honeycode: ""
            Veeva:
              instanceUrl: ""
            Trendmicro: ""
            Datadog:
              instanceUrl: ""
            Marketo:
              instanceUrl: ""
            Redshift:
              bucketName: ""
              databaseName: ""
              roleArn: ""
              bucketPrefix: ""
              workgroupName: ""
              clusterIdentifier: ""
              isRedshiftServerless: ""
              dataApiRoleArn: ""
              databaseUrl: ""
            Singular: ""
            Slack:
              instanceUrl: ""
            Snowflake:
              bucketName: ""
              privateLinkServiceName: ""
              stage: ""
              accountName: ""
              bucketPrefix: ""
              warehouse: ""
              region: ""
            Dynatrace:
              instanceUrl: ""
            Zendesk:
              instanceUrl: ""
            InforNexus:
              instanceUrl: ""
            Salesforce:
              isSandboxEnvironment: ""
              usePrivateLinkForMetadataAndAuthorization: ""
              instanceUrl: ""
        connectionMode: ""
        connectorProfileName: ""
        clientToken: ""
        kmsArn: ""
        connectorLabel: ""
      properties:
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: ' The name of the connector profile. The name is unique for
              each <code>ConnectorProfile</code> in your Amazon Web Services account. '
        kmsArn:
          allOf:
          - $ref: '#/components/schemas/KMSArn'
          - description: " The ARN (Amazon Resource Name) of the Key Management Service\
              \ (KMS) key you provide for encryption. This is required if you do not\
              \ want to use the Amazon AppFlow-managed KMS key. If you don't provide\
              \ anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS\
              \ key. "
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " The type of connector, such as Salesforce, Amplitude, and\
              \ so on. "
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The label of the connector. The label is unique for each
              <code>ConnectorRegistration</code> in your Amazon Web Services account.
              Only needed if calling for CUSTOMCONNECTOR connector type/.
        connectionMode:
          allOf:
          - $ref: '#/components/schemas/ConnectionMode'
          - description: ' Indicates the connection mode and specifies whether it
              is public or private. Private flows use Amazon Web Services PrivateLink
              to route data over Amazon Web Services infrastructure without exposing
              it to the public internet. '
        connectorProfileConfig:
          $ref: '#/components/schemas/CreateConnectorProfileRequest_connectorProfileConfig'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "<p>The <code>clientToken</code> parameter is an idempotency\
              \ token. It ensures that your <code>CreateConnectorProfile</code> request\
              \ completes only once. You choose the value to pass. For example, if\
              \ you don't receive a response from your request, you can safely retry\
              \ the request with the same <code>clientToken</code> parameter value.</p>\
              \ <p>If you omit a <code>clientToken</code> value, the Amazon Web Services\
              \ SDK that you are using inserts a value for you. This way, the SDK\
              \ can safely retry requests multiple times after a network error. You\
              \ must provide your own value for other use cases.</p> <p>If you specify\
              \ input parameters that differ from your first request, an error occurs.\
              \ If you use a different value for <code>clientToken</code>, Amazon\
              \ AppFlow considers it a new call to <code>CreateConnectorProfile</code>.\
              \ The token is active for 8 hours.</p>"
      required:
      - connectionMode
      - connectorProfileConfig
      - connectorProfileName
      - connectorType
      title: CreateConnectorProfileRequest
      type: object
    FlowDescription:
      maxLength: 2048
      pattern: "[\\w!@#\\-.?,\\s]*"
      type: string
    TriggerConfig:
      description: ' The trigger settings that determine how and when Amazon AppFlow
        runs the specified flow. '
      properties:
        triggerType:
          allOf:
          - $ref: '#/components/schemas/TriggerType'
          - description: " Specifies the type of flow trigger. This can be <code>OnDemand</code>,\
              \ <code>Scheduled</code>, or <code>Event</code>. "
        triggerProperties:
          $ref: '#/components/schemas/CreateFlow_request_triggerConfig_triggerProperties'
      required:
      - triggerType
      type: object
    SourceFlowConfig:
      description: ' Contains information about the configuration of the source connector
        used in the flow. '
      example:
        connectorType: ""
        apiVersion: ""
        connectorProfileName: ""
        incrementalPullConfig:
          datetimeTypeFieldName: ""
        sourceConnectorProperties:
          Amplitude:
            object: ""
          S3:
            bucketName: ""
            bucketPrefix: ""
            s3InputFormatConfig:
              s3InputFileType: ""
          GoogleAnalytics:
            object: ""
          ServiceNow:
            object: ""
          CustomConnector:
            customProperties: ""
            entityName: ""
            dataTransferApi:
              Type: ""
              Name: ""
          SAPOData:
            objectPath: ""
          Pardot:
            object: ""
          Veeva:
            includeSourceFiles: ""
            documentType: ""
            includeAllVersions: ""
            includeRenditions: ""
            object: ""
          Trendmicro:
            object: ""
          Datadog:
            object: ""
          Marketo:
            object: ""
          Singular:
            object: ""
          Slack:
            object: ""
          Dynatrace:
            object: ""
          Zendesk:
            object: ""
          InforNexus:
            object: ""
          Salesforce:
            includeDeletedRecords: ""
            enableDynamicFieldUpdate: ""
            object: ""
            dataTransferApi: ""
      properties:
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " The type of connector, such as Salesforce, Amplitude, and\
              \ so on. "
        apiVersion:
          allOf:
          - $ref: '#/components/schemas/ApiVersion'
          - description: The API version of the connector when it's used as a source
              in the flow.
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: ' The name of the connector profile. This name must be unique
              for each connector profile in the Amazon Web Services account. '
        sourceConnectorProperties:
          $ref: '#/components/schemas/CreateFlow_request_sourceFlowConfig_sourceConnectorProperties'
        incrementalPullConfig:
          $ref: '#/components/schemas/CreateFlow_request_sourceFlowConfig_incrementalPullConfig'
      required:
      - connectorType
      - sourceConnectorProperties
      type: object
    DestinationFlowConfigList:
      items:
        $ref: '#/components/schemas/DestinationFlowConfig'
      type: array
    Tasks:
      items:
        $ref: '#/components/schemas/Task'
      type: array
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    MetadataCatalogConfig:
      description: "Specifies the configuration that Amazon AppFlow uses when it catalogs\
        \ your data. When Amazon AppFlow catalogs your data, it stores metadata in\
        \ a data catalog."
      properties:
        glueDataCatalog:
          $ref: '#/components/schemas/CreateFlow_request_metadataCatalogConfig_glueDataCatalog'
      type: object
    CreateFlowRequest:
      example:
        destinationFlowConfigList: ""
        triggerConfig:
          triggerProperties:
            Scheduled:
              scheduleOffset: ""
              scheduleExpression: ""
              timezone: ""
              flowErrorDeactivationThreshold: ""
              dataPullMode: ""
              firstExecutionFrom: ""
              scheduleStartTime: ""
              scheduleEndTime: ""
          triggerType: ""
        sourceFlowConfig:
          connectorType: ""
          apiVersion: ""
          connectorProfileName: ""
          incrementalPullConfig:
            datetimeTypeFieldName: ""
          sourceConnectorProperties:
            Amplitude:
              object: ""
            S3:
              bucketName: ""
              bucketPrefix: ""
              s3InputFormatConfig:
                s3InputFileType: ""
            GoogleAnalytics:
              object: ""
            ServiceNow:
              object: ""
            CustomConnector:
              customProperties: ""
              entityName: ""
              dataTransferApi:
                Type: ""
                Name: ""
            SAPOData:
              objectPath: ""
            Pardot:
              object: ""
            Veeva:
              includeSourceFiles: ""
              documentType: ""
              includeAllVersions: ""
              includeRenditions: ""
              object: ""
            Trendmicro:
              object: ""
            Datadog:
              object: ""
            Marketo:
              object: ""
            Singular:
              object: ""
            Slack:
              object: ""
            Dynatrace:
              object: ""
            Zendesk:
              object: ""
            InforNexus:
              object: ""
            Salesforce:
              includeDeletedRecords: ""
              enableDynamicFieldUpdate: ""
              object: ""
              dataTransferApi: ""
        clientToken: ""
        kmsArn: ""
        description: ""
        flowName: ""
        metadataCatalogConfig:
          glueDataCatalog:
            databaseName: ""
            tablePrefix: ""
            roleArn: ""
        tasks: ""
        tags: ""
      properties:
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
        description:
          allOf:
          - $ref: '#/components/schemas/FlowDescription'
          - description: ' A description of the flow you want to create. '
        kmsArn:
          allOf:
          - $ref: '#/components/schemas/KMSArn'
          - description: " The ARN (Amazon Resource Name) of the Key Management Service\
              \ (KMS) key you provide for encryption. This is required if you do not\
              \ want to use the Amazon AppFlow-managed KMS key. If you don't provide\
              \ anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS\
              \ key. "
        triggerConfig:
          $ref: '#/components/schemas/DescribeFlowResponse_triggerConfig'
        sourceFlowConfig:
          $ref: '#/components/schemas/DescribeFlowResponse_sourceFlowConfig'
        destinationFlowConfigList:
          allOf:
          - $ref: '#/components/schemas/DestinationFlowConfigList'
          - description: ' The configuration that controls how Amazon AppFlow places
              data in the destination connector. '
        tasks:
          allOf:
          - $ref: '#/components/schemas/Tasks'
          - description: ' A list of tasks that Amazon AppFlow performs while transferring
              the data in the flow run. '
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: " The tags used to organize, track, or control access for\
              \ your flow. "
        metadataCatalogConfig:
          $ref: '#/components/schemas/DescribeFlowResponse_metadataCatalogConfig'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "<p>The <code>clientToken</code> parameter is an idempotency\
              \ token. It ensures that your <code>CreateFlow</code> request completes\
              \ only once. You choose the value to pass. For example, if you don't\
              \ receive a response from your request, you can safely retry the request\
              \ with the same <code>clientToken</code> parameter value.</p> <p>If\
              \ you omit a <code>clientToken</code> value, the Amazon Web Services\
              \ SDK that you are using inserts a value for you. This way, the SDK\
              \ can safely retry requests multiple times after a network error. You\
              \ must provide your own value for other use cases.</p> <p>If you specify\
              \ input parameters that differ from your first request, an error occurs.\
              \ If you use a different value for <code>clientToken</code>, Amazon\
              \ AppFlow considers it a new call to <code>CreateFlow</code>. The token\
              \ is active for 8 hours.</p>"
      required:
      - destinationFlowConfigList
      - flowName
      - sourceFlowConfig
      - tasks
      - triggerConfig
      title: CreateFlowRequest
      type: object
    FlowArn:
      maxLength: 512
      pattern: "arn:aws:appflow:.*:[0-9]+:.*"
      type: string
    FlowStatus:
      enum:
      - Active
      - Deprecated
      - Deleted
      - Draft
      - Errored
      - Suspended
      type: string
    CreatedBy:
      maxLength: 256
      pattern: \S+
      type: string
    CredentialsMapValue:
      format: password
      maxLength: 2048
      pattern: \S+
      type: string
    CredentialsMap:
      additionalProperties:
        $ref: '#/components/schemas/CredentialsMapValue'
      maxProperties: 50
      minProperties: 0
      type: object
    CredentialsMapKey:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "[\\w]+"
      type: string
    CustomAuthenticationType:
      maxLength: 256
      pattern: \S+
      type: string
    CustomAuthConfig:
      description: Configuration information required for custom authentication.
      properties:
        customAuthenticationType:
          allOf:
          - $ref: '#/components/schemas/CustomAuthenticationType'
          - description: The authentication type that the custom connector uses.
        authParameters:
          allOf:
          - $ref: '#/components/schemas/AuthParameterList'
          - description: Information about authentication parameters required for
              authentication.
      type: object
    CustomAuthCredentials:
      description: The custom credentials required for custom authentication.
      properties:
        customAuthenticationType:
          allOf:
          - $ref: '#/components/schemas/CustomAuthenticationType'
          - description: The custom authentication type that the connector uses.
        credentialsMap:
          allOf:
          - $ref: '#/components/schemas/CredentialsMap'
          - description: A map that holds custom authentication credentials.
      required:
      - customAuthenticationType
      type: object
    EntityName:
      maxLength: 1024
      pattern: \S+
      type: string
    ErrorHandlingConfig:
      description: " The settings that determine how Amazon AppFlow handles an error\
        \ when placing data in the destination. For example, this setting would determine\
        \ if the flow should fail after one insertion error, or continue and attempt\
        \ to insert every record regardless of the initial failure. <code>ErrorHandlingConfig</code>\
        \ is a part of the destination connector details. "
      properties:
        failOnFirstDestinationError:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies if the flow should fail after the first instance
              of a failure when attempting to place data in the destination. '
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: ' Specifies the Amazon S3 bucket prefix. '
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: ' Specifies the name of the Amazon S3 bucket. '
      type: object
    WriteOperationType:
      description: " The possible write operations in the destination connector. When\
        \ this value is not provided, this defaults to the <code>INSERT</code> operation. "
      enum:
      - INSERT
      - UPSERT
      - UPDATE
      - DELETE
      type: string
    IdFieldNameList:
      description: ' A list of field names that can be used as an ID field when performing
        a write operation. '
      items:
        $ref: '#/components/schemas/Name'
      minItems: 0
      type: array
    CustomConnectorDestinationProperties:
      description: The properties that are applied when the custom connector is being
        used as a destination.
      properties:
        entityName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The entity specified in the custom connector as a destination
              in the flow.
        errorHandlingConfig:
          $ref: '#/components/schemas/CustomConnectorDestinationProperties_errorHandlingConfig'
        writeOperationType:
          allOf:
          - $ref: '#/components/schemas/WriteOperationType'
          - description: Specifies the type of write operation to be performed in
              the custom connector when it's used as destination.
        idFieldNames:
          allOf:
          - $ref: '#/components/schemas/IdFieldNameList'
          - description: "The name of the field that Amazon AppFlow uses as an ID\
              \ when performing a write operation such as update, delete, or upsert."
        customProperties:
          allOf:
          - $ref: '#/components/schemas/CustomProperties'
          - description: The custom properties that are specific to the connector
              when it's used as a destination in the flow.
      required:
      - entityName
      type: object
    OAuth2Credentials:
      description: The OAuth 2.0 credentials required for OAuth 2.0 authentication.
      properties:
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: The identifier for the desired client.
        clientSecret:
          allOf:
          - $ref: '#/components/schemas/ClientSecret'
          - description: The client secret used by the OAuth client to authenticate
              to the authorization server.
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: The access token used to access the connector on your behalf.
        refreshToken:
          allOf:
          - $ref: '#/components/schemas/RefreshToken'
          - description: The refresh token used to refresh an expired access token.
        oAuthRequest:
          $ref: '#/components/schemas/ConnectorOAuthRequest'
      type: object
    ProfilePropertiesMap:
      additionalProperties:
        $ref: '#/components/schemas/ProfilePropertyValue'
      maxProperties: 50
      minProperties: 0
      type: object
    OAuth2Properties:
      description: The OAuth 2.0 properties required for OAuth 2.0 authentication.
      example:
        tokenUrl: ""
        tokenUrlCustomProperties: ""
        oAuth2GrantType: ""
      properties:
        tokenUrl:
          allOf:
          - $ref: '#/components/schemas/TokenUrl'
          - description: The token URL required for OAuth 2.0 authentication.
        oAuth2GrantType:
          allOf:
          - $ref: '#/components/schemas/OAuth2GrantType'
          - description: The OAuth 2.0 grant type used by connector for OAuth 2.0
              authentication.
        tokenUrlCustomProperties:
          allOf:
          - $ref: '#/components/schemas/TokenUrlCustomProperties'
          - description: Associates your token URL with a map of properties that you
              define. Use this parameter to provide any additional details that the
              connector requires to authenticate your request.
      required:
      - oAuth2GrantType
      - tokenUrl
      type: object
    DataTransferApi:
      description: The API of the connector application that Amazon AppFlow uses to
        transfer your data.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DataTransferApiTypeName'
          - description: The name of the connector application API.
        Type:
          allOf:
          - $ref: '#/components/schemas/DataTransferApiType'
          - description: "<p>You can specify one of the following types:</p> <dl>\
              \ <dt>AUTOMATIC</dt> <dd> <p>The default. Optimizes a flow for datasets\
              \ that fluctuate in size from small to large. For each flow run, Amazon\
              \ AppFlow chooses to use the SYNC or ASYNC API type based on the amount\
              \ of data that the run transfers.</p> </dd> <dt>SYNC</dt> <dd> <p>A\
              \ synchronous API. This type of API optimizes a flow for small to medium-sized\
              \ datasets.</p> </dd> <dt>ASYNC</dt> <dd> <p>An asynchronous API. This\
              \ type of API optimizes a flow for large datasets.</p> </dd> </dl>"
      type: object
    CustomConnectorSourceProperties:
      description: The properties that are applied when the custom connector is being
        used as a source.
      example:
        customProperties: ""
        entityName: ""
        dataTransferApi:
          Type: ""
          Name: ""
      properties:
        entityName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The entity specified in the custom connector as a source
              in the flow.
        customProperties:
          allOf:
          - $ref: '#/components/schemas/CustomProperties'
          - description: Custom properties that are required to use the custom connector
              as a source.
        dataTransferApi:
          $ref: '#/components/schemas/CustomConnectorSourceProperties_dataTransferApi'
      required:
      - entityName
      type: object
    CustomPropertyValue:
      maxLength: 2048
      pattern: \S+
      type: string
    CustomPropertyKey:
      maxLength: 128
      minLength: 1
      pattern: "[\\w]+"
      type: string
    DomainName:
      maxLength: 64
      pattern: \S+
      type: string
    ObjectTypeName:
      maxLength: 255
      pattern: \S+
      type: string
    CustomerProfilesDestinationProperties:
      description: ' The properties that are applied when Amazon Connect Customer
        Profiles is used as a destination. '
      properties:
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The unique name of the Amazon Connect Customer Profiles
              domain. '
        objectTypeName:
          allOf:
          - $ref: '#/components/schemas/ObjectTypeName'
          - description: ' The object specified in the Amazon Connect Customer Profiles
              flow destination. '
      required:
      - domainName
      type: object
    DataApiRoleArn:
      maxLength: 512
      pattern: "arn:aws:iam:.*:[0-9]+:.*"
      type: string
    DataPullMode:
      enum:
      - Incremental
      - Complete
      type: string
    DataTransferApiTypeName:
      maxLength: 64
      pattern: "[\\w/-]+"
      type: string
    DataTransferApiType:
      enum:
      - SYNC
      - ASYNC
      - AUTOMATIC
      type: string
    DatabaseName:
      maxLength: 512
      pattern: \S+
      type: string
    DatabaseUrl:
      maxLength: 512
      pattern: \S+
      type: string
    InstanceUrl:
      maxLength: 256
      pattern: \S+
      type: string
    DatadogSourceProperties:
      description: ' The properties that are applied when Datadog is being used as
        a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Datadog flow source. '
      required:
      - object
      type: object
    DatetimeTypeFieldName:
      maxLength: 256
      pattern: .*
      type: string
    DeleteConnectorProfileRequest:
      example:
        forceDelete: ""
        connectorProfileName: ""
      properties:
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: ' The name of the connector profile. The name is unique for
              each <code>ConnectorProfile</code> in your account. '
        forceDelete:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Indicates whether Amazon AppFlow should delete the profile,\
              \ even if it is currently in use in one or more flows. "
      required:
      - connectorProfileName
      title: DeleteConnectorProfileRequest
      type: object
    DeleteFlowRequest:
      example:
        forceDelete: ""
        flowName: ""
      properties:
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
        forceDelete:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Indicates whether Amazon AppFlow should delete the flow,\
              \ even if it is currently in use. "
      required:
      - flowName
      title: DeleteFlowRequest
      type: object
    DescribeConnectorEntityRequest:
      example:
        connectorType: ""
        apiVersion: ""
        connectorProfileName: ""
        connectorEntityName: ""
      properties:
        connectorEntityName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: ' The entity name for that connector. '
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " The type of connector application, such as Salesforce,\
              \ Amplitude, and so on. "
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: ' The name of the connector profile. The name is unique for
              each <code>ConnectorProfile</code> in the Amazon Web Services account. '
        apiVersion:
          allOf:
          - $ref: '#/components/schemas/ApiVersion'
          - description: The version of the API that's used by the connector.
      required:
      - connectorEntityName
      title: DescribeConnectorEntityRequest
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 2048
      pattern: \S+
      type: string
    DescribeConnectorProfilesRequest:
      example:
        connectorType: ""
        maxResults: ""
        nextToken: ""
        connectorProfileNames: ""
        connectorLabel: ""
      properties:
        connectorProfileNames:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileNameList'
          - description: ' The name of the connector profile. The name is unique for
              each <code>ConnectorProfile</code> in the Amazon Web Services account. '
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " The type of connector, such as Salesforce, Amplitude, and\
              \ so on. "
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The name of the connector. The name is unique for each <code>ConnectorRegistration</code>
              in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR
              connector type/.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of items that should be returned
              in the result set. The default for <code>maxResults</code> is 20 (for
              all paginated API operations). '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The pagination token for the next page of data. '
      title: DescribeConnectorProfilesRequest
      type: object
    DescribeConnectorRequest:
      example:
        connectorType: ""
        connectorLabel: ""
      properties:
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: "The connector type, such as CUSTOMCONNECTOR, Saleforce,\
              \ Marketo. Please choose CUSTOMCONNECTOR for Lambda based custom connectors."
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The label of the connector. The label is unique for each
              <code>ConnectorRegistration</code> in your Amazon Web Services account.
              Only needed if calling for CUSTOMCONNECTOR connector type/.
      required:
      - connectorType
      title: DescribeConnectorRequest
      type: object
    DescribeConnectorsRequest:
      example:
        connectorTypes: ""
        maxResults: ""
        nextToken: ""
      properties:
        connectorTypes:
          allOf:
          - $ref: '#/components/schemas/ConnectorTypeList'
          - description: " The type of connector, such as Salesforce, Amplitude, and\
              \ so on. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items that should be returned in the
              result set. The default is 20.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The pagination token for the next page of data. '
      title: DescribeConnectorsRequest
      type: object
    DescribeFlowExecutionRecordsRequest:
      example:
        maxResults: ""
        nextToken: ""
        flowName: ""
      properties:
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of items that should be returned
              in the result set. The default for <code>maxResults</code> is 20 (for
              all paginated API operations). '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The pagination token for the next page of data. '
      required:
      - flowName
      title: DescribeFlowExecutionRecordsRequest
      type: object
    FlowExecutionList:
      items:
        $ref: '#/components/schemas/ExecutionRecord'
      type: array
    DescribeFlowRequest:
      example:
        flowName: ""
      properties:
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
      required:
      - flowName
      title: DescribeFlowRequest
      type: object
    FlowStatusMessage:
      maxLength: 2048
      pattern: "[\\s\\w/!@#+=.-]*"
      type: string
    ExecutionDetails:
      description: " Describes the details of the flow run, including the timestamp,\
        \ status, and message. "
      properties:
        mostRecentExecutionMessage:
          allOf:
          - $ref: '#/components/schemas/MostRecentExecutionMessage'
          - description: ' Describes the details of the most recent flow run. '
        mostRecentExecutionTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies the time of the most recent flow run. '
        mostRecentExecutionStatus:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: ' Specifies the status of the most recent flow run. '
      type: object
    UpdatedBy:
      maxLength: 256
      pattern: \S+
      type: string
    MetadataCatalogDetails:
      items:
        $ref: '#/components/schemas/MetadataCatalogDetail'
      type: array
    RedshiftDestinationProperties:
      description: ' The properties that are applied when Amazon Redshift is being
        used as a destination. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Amazon Redshift flow destination. '
        intermediateBucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: ' The intermediate bucket that Amazon AppFlow uses when moving
              data into Amazon Redshift. '
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: ' The object key for the bucket in which Amazon AppFlow places
              the destination files. '
        errorHandlingConfig:
          $ref: '#/components/schemas/RedshiftDestinationProperties_errorHandlingConfig'
      required:
      - intermediateBucketName
      - object
      type: object
    S3DestinationProperties:
      description: ' The properties that are applied when Amazon S3 is used as a destination. '
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: ' The Amazon S3 bucket name in which Amazon AppFlow places
              the transferred data. '
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: ' The object key for the destination bucket in which Amazon
              AppFlow places the files. '
        s3OutputFormatConfig:
          $ref: '#/components/schemas/S3OutputFormatConfig'
      required:
      - bucketName
      type: object
    SalesforceDestinationProperties:
      description: ' The properties that are applied when Salesforce is being used
        as a destination. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Salesforce flow destination. '
        idFieldNames:
          allOf:
          - $ref: '#/components/schemas/IdFieldNameList'
          - description: ' The name of the field that Amazon AppFlow uses as an ID
              when performing a write operation such as update or delete. '
        errorHandlingConfig:
          $ref: '#/components/schemas/SalesforceDestinationProperties_errorHandlingConfig'
        writeOperationType:
          allOf:
          - $ref: '#/components/schemas/WriteOperationType'
          - description: " This specifies the type of write operation to be performed\
              \ in Salesforce. When the value is <code>UPSERT</code>, then <code>idFieldNames</code>\
              \ is required. "
        dataTransferApi:
          allOf:
          - $ref: '#/components/schemas/SalesforceDataTransferApi'
          - description: "<p>Specifies which Salesforce API is used by Amazon AppFlow\
              \ when your flow transfers data to Salesforce.</p> <dl> <dt>AUTOMATIC</dt>\
              \ <dd> <p>The default. Amazon AppFlow selects which API to use based\
              \ on the number of records that your flow transfers to Salesforce. If\
              \ your flow transfers fewer than 1,000 records, Amazon AppFlow uses\
              \ Salesforce REST API. If your flow transfers 1,000 records or more,\
              \ Amazon AppFlow uses Salesforce Bulk API 2.0.</p> <p>Each of these\
              \ Salesforce APIs structures data differently. If Amazon AppFlow selects\
              \ the API automatically, be aware that, for recurring flows, the data\
              \ output might vary from one flow run to the next. For example, if a\
              \ flow runs daily, it might use REST API on one day to transfer 900\
              \ records, and it might use Bulk API 2.0 on the next day to transfer\
              \ 1,100 records. For each of these flow runs, the respective Salesforce\
              \ API formats the data differently. Some of the differences include\
              \ how dates are formatted and null values are represented. Also, Bulk\
              \ API 2.0 doesn't transfer Salesforce compound fields.</p> <p>By choosing\
              \ this option, you optimize flow performance for both small and large\
              \ data transfers, but the tradeoff is inconsistent formatting in the\
              \ output.</p> </dd> <dt>BULKV2</dt> <dd> <p>Amazon AppFlow uses only\
              \ Salesforce Bulk API 2.0. This API runs asynchronous data transfers,\
              \ and it's optimal for large sets of data. By choosing this option,\
              \ you ensure that your flow writes consistent output, but you optimize\
              \ performance only for large data transfers.</p> <p>Note that Bulk API\
              \ 2.0 does not transfer Salesforce compound fields.</p> </dd> <dt>REST_SYNC</dt>\
              \ <dd> <p>Amazon AppFlow uses only Salesforce REST API. By choosing\
              \ this option, you ensure that your flow writes consistent output, but\
              \ you decrease performance for large data transfers that are better\
              \ suited for Bulk API 2.0. In some cases, if your flow attempts to transfer\
              \ a vary large set of data, it might fail with a timed out error.</p>\
              \ </dd> </dl>"
      required:
      - object
      type: object
    SnowflakeDestinationProperties:
      description: ' The properties that are applied when Snowflake is being used
        as a destination. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Snowflake flow destination. '
        intermediateBucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: ' The intermediate bucket that Amazon AppFlow uses when moving
              data into Snowflake. '
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: ' The object key for the destination bucket in which Amazon
              AppFlow places the files. '
        errorHandlingConfig:
          $ref: '#/components/schemas/SnowflakeDestinationProperties_errorHandlingConfig'
      required:
      - intermediateBucketName
      - object
      type: object
    EventBridgeDestinationProperties:
      description: ' The properties that are applied when Amazon EventBridge is being
        used as a destination. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Amazon EventBridge flow destination. '
        errorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
      required:
      - object
      type: object
    LookoutMetricsDestinationProperties:
      description: ' The properties that are applied when Amazon Lookout for Metrics
        is used as a destination. '
      properties: {}
      type: object
    UpsolverDestinationProperties:
      description: ' The properties that are applied when Upsolver is used as a destination. '
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/UpsolverBucketName'
          - description: ' The Upsolver Amazon S3 bucket name in which Amazon AppFlow
              places the transferred data. '
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: ' The object key for the destination Upsolver Amazon S3 bucket
              in which Amazon AppFlow places the files. '
        s3OutputFormatConfig:
          $ref: '#/components/schemas/UpsolverDestinationProperties_s3OutputFormatConfig'
      required:
      - bucketName
      - s3OutputFormatConfig
      type: object
    HoneycodeDestinationProperties:
      description: ' The properties that are applied when Amazon Honeycode is used
        as a destination. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Amazon Honeycode flow destination. '
        errorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
      required:
      - object
      type: object
    ZendeskDestinationProperties:
      description: The properties that are applied when Zendesk is used as a destination.
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The object specified in the Zendesk flow destination.
        idFieldNames:
          description: ' A list of field names that can be used as an ID field when
            performing a write operation. '
          items:
            $ref: '#/components/schemas/Name'
          minItems: 0
          type: array
        errorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
        writeOperationType:
          $ref: '#/components/schemas/WriteOperationType'
      required:
      - object
      type: object
    MarketoDestinationProperties:
      description: The properties that Amazon AppFlow applies when you use Marketo
        as a flow destination.
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The object specified in the Marketo flow destination.
        errorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
      required:
      - object
      type: object
    SAPODataDestinationProperties:
      description: The properties that are applied when using SAPOData as a flow destination
      properties:
        objectPath:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The object path specified in the SAPOData flow destination.
        successResponseHandlingConfig:
          $ref: '#/components/schemas/SAPODataDestinationProperties_successResponseHandlingConfig'
        idFieldNames:
          description: ' A list of field names that can be used as an ID field when
            performing a write operation. '
          items:
            $ref: '#/components/schemas/Name'
          minItems: 0
          type: array
        errorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
        writeOperationType:
          $ref: '#/components/schemas/WriteOperationType'
      required:
      - objectPath
      type: object
    DestinationConnectorProperties:
      description: ' This stores the information that is required to query a particular
        connector. '
      properties:
        Redshift:
          $ref: '#/components/schemas/DestinationConnectorProperties_Redshift'
        S3:
          $ref: '#/components/schemas/DestinationConnectorProperties_S3'
        Salesforce:
          $ref: '#/components/schemas/DestinationConnectorProperties_Salesforce'
        Snowflake:
          $ref: '#/components/schemas/DestinationConnectorProperties_Snowflake'
        EventBridge:
          $ref: '#/components/schemas/DestinationConnectorProperties_EventBridge'
        LookoutMetrics:
          allOf:
          - $ref: '#/components/schemas/LookoutMetricsDestinationProperties'
          - description: ' The properties required to query Amazon Lookout for Metrics. '
        Upsolver:
          $ref: '#/components/schemas/DestinationConnectorProperties_Upsolver'
        Honeycode:
          $ref: '#/components/schemas/DestinationConnectorProperties_Honeycode'
        CustomerProfiles:
          $ref: '#/components/schemas/DestinationConnectorProperties_CustomerProfiles'
        Zendesk:
          $ref: '#/components/schemas/DestinationConnectorProperties_Zendesk'
        Marketo:
          $ref: '#/components/schemas/DestinationConnectorProperties_Marketo'
        CustomConnector:
          $ref: '#/components/schemas/DestinationConnectorProperties_CustomConnector'
        SAPOData:
          $ref: '#/components/schemas/DestinationConnectorProperties_SAPOData'
      type: object
    DestinationField:
      maxLength: 256
      pattern: .*
      type: string
    DocumentType:
      maxLength: 512
      pattern: "[\\s\\w_-]+"
      type: string
    Double:
      format: double
      type: number
    DynatraceSourceProperties:
      description: ' The properties that are applied when Dynatrace is being used
        as a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Dynatrace flow source. '
      required:
      - object
      type: object
    EntitiesPath:
      maxLength: 256
      pattern: "[\\s\\w/!@#+=,.-]*"
      type: string
    ExecutionMessage:
      maxLength: 2048
      pattern: "[\\s\\w/!@#+=.-]*"
      type: string
    ErrorInfo:
      description: " Provides details in the event of a failed flow, including the\
        \ failure count and the related error messages. "
      properties:
        putFailuresCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' Specifies the failure count for the attempted flow. '
        executionMessage:
          allOf:
          - $ref: '#/components/schemas/ExecutionMessage'
          - description: ' Specifies the error message that appears if a flow fails. '
      type: object
    MostRecentExecutionMessage:
      maxLength: 2048
      pattern: "[\\w!@#\\-.?,\\s]*"
      type: string
    ExecutionStatus:
      enum:
      - InProgress
      - Successful
      - Error
      - CancelStarted
      - Canceled
      type: string
    ExecutionResult:
      description: ' Specifies the end result of the flow run. '
      properties:
        errorInfo:
          $ref: '#/components/schemas/ExecutionResult_errorInfo'
        bytesProcessed:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' The total number of bytes processed by the flow run. '
        bytesWritten:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' The total number of bytes written as a result of the flow
              run. '
        recordsProcessed:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' The number of records processed in the flow run. '
      type: object
    ExecutionRecord:
      description: ' Specifies information about the past flow run instances for a
        given flow. '
      properties:
        executionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: ' Specifies the identifier of the given flow run. '
        executionStatus:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: " Specifies the flow run status and whether it is in progress,\
              \ has completed successfully, or has failed. "
        executionResult:
          $ref: '#/components/schemas/ExecutionRecord_executionResult'
        startedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies the start time of the flow run. '
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies the time of the most recent update. '
        dataPullStartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp that determines the first new or updated
              record to be transferred in the flow run. '
        dataPullEndTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp that indicates the last new or updated record
              to be transferred in the flow run. '
        metadataCatalogDetails:
          allOf:
          - $ref: '#/components/schemas/MetadataCatalogDetails'
          - description: "Describes the metadata catalog, metadata table, and data\
              \ partitions that Amazon AppFlow used for the associated flow run."
      type: object
    FieldType:
      type: string
    FilterOperatorList:
      items:
        $ref: '#/components/schemas/Operator'
      type: array
    SupportedValueList:
      items:
        $ref: '#/components/schemas/Value'
      type: array
    Range:
      description: The range of values that the property supports.
      properties:
        maximum:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: Maximum value supported by the field.
        minimum:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: Minimum value supported by the field.
      type: object
    FieldTypeDetails:
      description: ' Contains details regarding the supported field type and the operators
        that can be applied for filtering. '
      properties:
        fieldType:
          allOf:
          - $ref: '#/components/schemas/FieldType'
          - description: " The type of field, such as string, integer, date, and so\
              \ on. "
        filterOperators:
          allOf:
          - $ref: '#/components/schemas/FilterOperatorList'
          - description: ' The list of operators supported by a field. '
        supportedValues:
          allOf:
          - $ref: '#/components/schemas/SupportedValueList'
          - description: " The list of values that a field can contain. For example,\
              \ a Boolean <code>fieldType</code> can have two values: \"true\" and\
              \ \"false\". "
        valueRegexPattern:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The regular expression pattern for the field name.
        supportedDateFormat:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The date format that the field supports.
        fieldValueRange:
          $ref: '#/components/schemas/FieldTypeDetails_fieldValueRange'
        fieldLengthRange:
          $ref: '#/components/schemas/FieldTypeDetails_fieldLengthRange'
      required:
      - fieldType
      - filterOperators
      type: object
    FileType:
      enum:
      - CSV
      - JSON
      - PARQUET
      type: string
    FlowDefinition:
      description: " The properties of the flow, such as its source, destination,\
        \ trigger type, and so on. "
      properties:
        flowArn:
          allOf:
          - $ref: '#/components/schemas/FlowArn'
          - description: ' The flow''s Amazon Resource Name (ARN). '
        description:
          allOf:
          - $ref: '#/components/schemas/FlowDescription'
          - description: ' A user-entered description of the flow. '
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
        flowStatus:
          allOf:
          - $ref: '#/components/schemas/FlowStatus'
          - description: ' Indicates the current status of the flow. '
        sourceConnectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " Specifies the source connector type, such as Salesforce,\
              \ Amazon S3, Amplitude, and so on. "
        sourceConnectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The label of the source connector in the flow.
        destinationConnectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " Specifies the destination connector type, such as Salesforce,\
              \ Amazon S3, Amplitude, and so on. "
        destinationConnectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The label of the destination connector in the flow.
        triggerType:
          allOf:
          - $ref: '#/components/schemas/TriggerType'
          - description: " Specifies the type of flow trigger. This can be <code>OnDemand</code>,\
              \ <code>Scheduled</code>, or <code>Event</code>. "
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies when the flow was created. '
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies when the flow was last updated. '
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          - description: ' The ARN of the user who created the flow. '
        lastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          - description: ' Specifies the account user name that most recently updated
              the flow. '
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: " The tags used to organize, track, or control access for\
              \ your flow. "
        lastRunExecutionDetails:
          $ref: '#/components/schemas/DescribeFlowResponse_lastRunExecutionDetails'
      type: object
    FlowErrorDeactivationThreshold:
      maximum: 100
      minimum: 1
      type: integer
    FlowList:
      items:
        $ref: '#/components/schemas/FlowDefinition'
      type: array
    GlueDataCatalogIAMRole:
      maxLength: 512
      pattern: "arn:aws:iam:.*:[0-9]+:.*"
      type: string
    GlueDataCatalogDatabaseName:
      maxLength: 255
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    GlueDataCatalogTablePrefix:
      maxLength: 128
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    RefreshToken:
      maxLength: 4096
      pattern: \S+
      type: string
    OAuthScopeList:
      items:
        $ref: '#/components/schemas/OAuthScope'
      type: array
    GoogleAnalyticsSourceProperties:
      description: ' The properties that are applied when Google Analytics is being
        used as a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Google Analytics flow source. '
      required:
      - object
      type: object
    Group:
      maxLength: 128
      pattern: \S+
      type: string
    InforNexusSourceProperties:
      description: ' The properties that are applied when Infor Nexus is being used
        as a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Infor Nexus flow source. '
      required:
      - object
      type: object
    JavaBoolean:
      type: boolean
    JwtToken:
      format: password
      maxLength: 8000
      pattern: "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+\\/=]*)"
      type: string
    ListEntitiesMaxResults:
      maximum: 10000
      minimum: 1
      type: integer
    ListConnectorEntitiesRequest:
      example:
        connectorType: ""
        apiVersion: ""
        connectorProfileName: ""
        maxResults: ""
        nextToken: ""
        entitiesPath: ""
      properties:
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: " The name of the connector profile. The name is unique for\
              \ each <code>ConnectorProfile</code> in the Amazon Web Services account,\
              \ and is used to query the downstream connector. "
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " The type of connector, such as Salesforce, Amplitude, and\
              \ so on. "
        entitiesPath:
          allOf:
          - $ref: '#/components/schemas/EntitiesPath'
          - description: " This optional parameter is specific to connector implementation.\
              \ Some connectors support multiple levels or categories of entities.\
              \ You can find out the list of roots for such providers by sending a\
              \ request without the <code>entitiesPath</code> parameter. If the connector\
              \ supports entities at different roots, this initial request returns\
              \ the list of roots. Otherwise, this request returns all entities supported\
              \ by the provider. "
        apiVersion:
          allOf:
          - $ref: '#/components/schemas/ApiVersion'
          - description: The version of the API that's used by the connector.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListEntitiesMaxResults'
          - description: The maximum number of items that the operation returns in
              the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token that was provided by your prior <code>ListConnectorEntities</code>
              operation if the response was too big for the page size. You specify
              this token to get the next page of results in paginated response.
      title: ListConnectorEntitiesRequest
      type: object
    ListConnectorsRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the maximum number of items that should be returned
              in the result set. The default for <code>maxResults</code> is 20 (for
              all paginated API operations).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token for the next page of data.
      title: ListConnectorsRequest
      type: object
    ListFlowsRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of items that should be returned
              in the result set. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The pagination token for next page of data. '
      title: ListFlowsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    LogonLanguage:
      maxLength: 2
      pattern: "^[a-zA-Z0-9_]*$"
      type: string
    MarketoSourceProperties:
      description: ' The properties that are applied when Marketo is being used as
        a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Marketo flow source. '
      required:
      - object
      type: object
    RegistrationOutput:
      description: "<p>Describes the status of an attempt from Amazon AppFlow to register\
        \ a resource.</p> <p>When you run a flow that you've configured to use a metadata\
        \ catalog, Amazon AppFlow registers a metadata table and data partitions with\
        \ that catalog. This operation provides the status of that registration attempt.\
        \ The operation also indicates how many related resources Amazon AppFlow created\
        \ or updated.</p>"
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Explains the status of the registration attempt from Amazon\
              \ AppFlow. If the attempt fails, the message explains why."
        result:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the number of resources that Amazon AppFlow created
              or updated. Possible resources include metadata tables and data partitions.
        status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: Indicates the status of the registration attempt from Amazon
              AppFlow.
      type: object
    MetadataCatalogDetail:
      description: "Describes the metadata catalog, metadata table, and data partitions\
        \ that Amazon AppFlow used for the associated flow run."
      properties:
        catalogType:
          allOf:
          - $ref: '#/components/schemas/CatalogType'
          - description: <p>The type of metadata catalog that Amazon AppFlow used
              for the associated flow run. This parameter returns the following value:</p>
              <dl> <dt>GLUE</dt> <dd> <p>The metadata catalog is provided by the Glue
              Data Catalog. Glue includes the Glue Data Catalog as a component.</p>
              </dd> </dl>
        tableName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the table that stores the metadata for the associated
              flow run. The table stores metadata that represents the data that the
              flow transferred. Amazon AppFlow stores the table in the metadata catalog.
        tableRegistrationOutput:
          $ref: '#/components/schemas/MetadataCatalogDetail_tableRegistrationOutput'
        partitionRegistrationOutput:
          $ref: '#/components/schemas/MetadataCatalogDetail_partitionRegistrationOutput'
      type: object
    OAuth2CustomPropType:
      enum:
      - TOKEN_URL
      - AUTH_URL
      type: string
    OAuth2CustomParameter:
      description: Custom parameter required for OAuth 2.0 authentication.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          - description: The key of the custom parameter required for OAuth 2.0 authentication.
        isRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the custom parameter for OAuth 2.0 authentication
              is required.
        label:
          allOf:
          - $ref: '#/components/schemas/Label'
          - description: The label of the custom parameter used for OAuth 2.0 authentication.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description about the custom parameter used for OAuth 2.0
              authentication.
        isSensitiveField:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether this authentication custom parameter is
              a sensitive field.
        connectorSuppliedValues:
          allOf:
          - $ref: '#/components/schemas/ConnectorSuppliedValueList'
          - description: Contains default values for this authentication parameter
              that are supplied by the connector.
        type:
          allOf:
          - $ref: '#/components/schemas/OAuth2CustomPropType'
          - description: Indicates whether custom parameter is used with TokenUrl
              or AuthUrl.
      type: object
    OAuth2CustomPropertiesList:
      items:
        $ref: '#/components/schemas/OAuth2CustomParameter'
      type: array
    TokenUrlList:
      items:
        $ref: '#/components/schemas/TokenUrl'
      type: array
    OAuth2GrantTypeSupportedList:
      items:
        $ref: '#/components/schemas/OAuth2GrantType'
      type: array
    OAuth2GrantType:
      enum:
      - CLIENT_CREDENTIALS
      - AUTHORIZATION_CODE
      - JWT_BEARER
      type: string
    TokenUrl:
      maxLength: 256
      pattern: "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
      type: string
    TokenUrlCustomProperties:
      additionalProperties:
        $ref: '#/components/schemas/CustomPropertyValue'
      maxProperties: 50
      minProperties: 0
      type: object
    OAuthCredentials:
      description: ' The OAuth credentials required for OAuth type authentication. '
      properties:
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: ' The identifier for the desired client. '
        clientSecret:
          allOf:
          - $ref: '#/components/schemas/ClientSecret'
          - description: ' The client secret used by the OAuth client to authenticate
              to the authorization server. '
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: ' The access token used to access protected SAPOData resources. '
        refreshToken:
          allOf:
          - $ref: '#/components/schemas/RefreshToken'
          - description: ' The refresh token used to refresh expired access token. '
        oAuthRequest:
          $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileCredentials_oAuthRequest'
      required:
      - clientId
      - clientSecret
      type: object
    OAuthProperties:
      description: ' The OAuth properties required for OAuth type authentication. '
      properties:
        tokenUrl:
          allOf:
          - $ref: '#/components/schemas/TokenUrl'
          - description: ' The token url required to fetch access/refresh tokens using
              authorization code and also to refresh expired access token using refresh
              token.'
        authCodeUrl:
          allOf:
          - $ref: '#/components/schemas/AuthCodeUrl'
          - description: ' The authorization code url required to redirect to SAP
              Login Page to fetch authorization code for OAuth type authentication. '
        oAuthScopes:
          allOf:
          - $ref: '#/components/schemas/OAuthScopeList'
          - description: ' The OAuth scopes required for OAuth type authentication. '
      required:
      - authCodeUrl
      - oAuthScopes
      - tokenUrl
      type: object
    OAuthScope:
      maxLength: 128
      pattern: \S+
      type: string
    OperatorPropertiesKeys:
      enum:
      - VALUE
      - VALUES
      - DATA_TYPE
      - UPPER_BOUND
      - LOWER_BOUND
      - SOURCE_DATA_TYPE
      - DESTINATION_DATA_TYPE
      - VALIDATION_ACTION
      - MASK_VALUE
      - MASK_LENGTH
      - TRUNCATE_LENGTH
      - MATH_OPERATION_FIELDS_ORDER
      - CONCAT_FORMAT
      - SUBFIELD_CATEGORY_MAP
      - EXCLUDE_SOURCE_FIELDS_LIST
      - INCLUDE_NEW_FIELDS
      - ORDERED_PARTITION_KEYS_LIST
      type: string
    Operators:
      enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - CONTAINS
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      type: string
    PardotSourceProperties:
      description: The properties that are applied when Salesforce Pardot is being
        used as a source.
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The object specified in the Salesforce Pardot flow source.
      required:
      - object
      type: object
    PathPrefix:
      enum:
      - EXECUTION_ID
      - SCHEMA_VERSION
      type: string
    PathPrefixHierarchy:
      items:
        $ref: '#/components/schemas/PathPrefix'
      type: array
    PortNumber:
      maximum: 65535
      minimum: 1
      type: integer
    PrefixType:
      enum:
      - FILENAME
      - PATH
      - PATH_AND_FILENAME
      type: string
    PrefixFormat:
      enum:
      - YEAR
      - MONTH
      - DAY
      - HOUR
      - MINUTE
      type: string
    PrefixConfig:
      description: Specifies elements that Amazon AppFlow includes in the file and
        folder names in the flow destination.
      properties:
        prefixType:
          allOf:
          - $ref: '#/components/schemas/PrefixType'
          - description: "Determines the format of the prefix, and whether it applies\
              \ to the file name, file path, or both. "
        prefixFormat:
          allOf:
          - $ref: '#/components/schemas/PrefixFormat'
          - description: 'Determines the level of granularity for the date and time
              that''s included in the prefix. '
        pathPrefixHierarchy:
          allOf:
          - $ref: '#/components/schemas/PathPrefixHierarchy'
          - description: <p>Specifies whether the destination file path includes either
              or both of the following elements:</p> <dl> <dt>EXECUTION_ID</dt> <dd>
              <p>The ID that Amazon AppFlow assigns to the flow run.</p> </dd> <dt>SCHEMA_VERSION</dt>
              <dd> <p>The version number of your data schema. Amazon AppFlow assigns
              this version number. The version number increases by one when you change
              any of the following settings in your flow configuration:</p> <ul> <li>
              <p>Source-to-destination field mappings</p> </li> <li> <p>Field data
              types</p> </li> <li> <p>Partition keys</p> </li> </ul> </dd> </dl>
      type: object
    PrivateConnectionProvisioningFailureCause:
      enum:
      - CONNECTOR_AUTHENTICATION
      - CONNECTOR_SERVER
      - INTERNAL_SERVER
      - ACCESS_DENIED
      - VALIDATION
      type: string
    PrivateConnectionProvisioningFailureMessage:
      maxLength: 2048
      pattern: "[\\s\\w/!@#+=.-]*"
      type: string
    PrivateConnectionProvisioningStatus:
      enum:
      - FAILED
      - PENDING
      - CREATED
      type: string
    PrivateLinkServiceName:
      maxLength: 512
      pattern: "^$|com.amazonaws.vpce.[\\w/!:@#.\\-]+"
      type: string
    ProfilePropertyValue:
      maxLength: 2048
      pattern: \S+
      type: string
    ProfilePropertyKey:
      maxLength: 128
      minLength: 1
      pattern: "[\\w]+"
      type: string
    Property:
      maxLength: 2048
      pattern: .+
      type: string
    RoleArn:
      maxLength: 512
      pattern: "arn:aws:iam:.*:[0-9]+:.*"
      type: string
    WorkgroupName:
      maxLength: 512
      pattern: \S+
      type: string
    Region:
      maxLength: 64
      pattern: \S+
      type: string
    RegionList:
      items:
        $ref: '#/components/schemas/Region'
      type: array
    RegisterConnectorRequest:
      example:
        connectorProvisioningType: ""
        clientToken: ""
        connectorLabel: ""
        description: ""
        connectorProvisioningConfig:
          lambda:
            lambdaArn: ""
      properties:
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: ' The name of the connector. The name is unique for each
              <code>ConnectorRegistration</code> in your Amazon Web Services account.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description about the connector that's being registered.
        connectorProvisioningType:
          allOf:
          - $ref: '#/components/schemas/ConnectorProvisioningType'
          - description: 'The provisioning type of the connector. Currently the only
              supported value is LAMBDA. '
        connectorProvisioningConfig:
          $ref: '#/components/schemas/RegisterConnectorRequest_connectorProvisioningConfig'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "<p>The <code>clientToken</code> parameter is an idempotency\
              \ token. It ensures that your <code>RegisterConnector</code> request\
              \ completes only once. You choose the value to pass. For example, if\
              \ you don't receive a response from your request, you can safely retry\
              \ the request with the same <code>clientToken</code> parameter value.</p>\
              \ <p>If you omit a <code>clientToken</code> value, the Amazon Web Services\
              \ SDK that you are using inserts a value for you. This way, the SDK\
              \ can safely retry requests multiple times after a network error. You\
              \ must provide your own value for other use cases.</p> <p>If you specify\
              \ input parameters that differ from your first request, an error occurs.\
              \ If you use a different value for <code>clientToken</code>, Amazon\
              \ AppFlow considers it a new call to <code>RegisterConnector</code>.\
              \ The token is active for 8 hours.</p>"
      title: RegisterConnectorRequest
      type: object
    ResetConnectorMetadataCacheRequest:
      example:
        connectorType: ""
        apiVersion: ""
        connectorProfileName: ""
        connectorEntityName: ""
        entitiesPath: ""
      properties:
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: "<p>The name of the connector profile that you want to reset\
              \ cached metadata for.</p> <p>You can omit this parameter if you're\
              \ resetting the cache for any of the following connectors: Amazon Connect,\
              \ Amazon EventBridge, Amazon Lookout for Metrics, Amazon S3, or Upsolver.\
              \ If you're resetting the cache for any other connector, you must include\
              \ this parameter in your request.</p>"
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: "<p>The type of connector to reset cached metadata for.</p>\
              \ <p>You must include this parameter in your request if you're resetting\
              \ the cache for any of the following connectors: Amazon Connect, Amazon\
              \ EventBridge, Amazon Lookout for Metrics, Amazon S3, or Upsolver. If\
              \ you're resetting the cache for any other connector, you can omit this\
              \ parameter from your request. </p>"
        connectorEntityName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: "<p>Use this parameter if you want to reset cached metadata\
              \ about the details for an individual entity.</p> <p>If you don't include\
              \ this parameter in your request, Amazon AppFlow only resets cached\
              \ metadata about entity names, not entity details.</p>"
        entitiesPath:
          allOf:
          - $ref: '#/components/schemas/EntitiesPath'
          - description: "<p>Use this parameter only if you’re resetting the cached\
              \ metadata about a nested entity. Only some connectors support nested\
              \ entities. A nested entity is one that has another entity as a parent.\
              \ To use this parameter, specify the name of the parent entity.</p>\
              \ <p>To look up the parent-child relationship of entities, you can send\
              \ a ListConnectorEntities request that omits the entitiesPath parameter.\
              \ Amazon AppFlow will return a list of top-level entities. For each\
              \ one, it indicates whether the entity has nested entities. Then, in\
              \ a subsequent ListConnectorEntities request, you can specify a parent\
              \ entity name for the entitiesPath parameter. Amazon AppFlow will return\
              \ a list of the child entities for that parent.</p>"
        apiVersion:
          allOf:
          - $ref: '#/components/schemas/ApiVersion'
          - description: "<p>The API version that you specified in the connector profile\
              \ that you’re resetting cached metadata for. You must use this parameter\
              \ only if the connector supports multiple API versions or if the connector\
              \ type is CustomConnector.</p> <p>To look up how many versions a connector\
              \ supports, use the DescribeConnectors action. In the response, find\
              \ the value that Amazon AppFlow returns for the connectorVersion parameter.</p>\
              \ <p>To look up the connector type, use the DescribeConnectorProfiles\
              \ action. In the response, find the value that Amazon AppFlow returns\
              \ for the connectorType parameter.</p> <p>To look up the API version\
              \ that you specified in a connector profile, use the DescribeConnectorProfiles\
              \ action.</p>"
      title: ResetConnectorMetadataCacheRequest
      type: object
    S3OutputFormatConfig:
      description: ' The configuration that determines how Amazon AppFlow should format
        the flow output data when Amazon S3 is used as the destination. '
      properties:
        fileType:
          allOf:
          - $ref: '#/components/schemas/FileType'
          - description: ' Indicates the file type that Amazon AppFlow places in the
              Amazon S3 bucket. '
        prefixConfig:
          $ref: '#/components/schemas/S3OutputFormatConfig_prefixConfig'
        aggregationConfig:
          $ref: '#/components/schemas/AggregationConfig'
        preserveSourceDataTyping:
          allOf:
          - $ref: '#/components/schemas/JavaBoolean'
          - description: "<p>If your file output format is Parquet, use this parameter\
              \ to set whether Amazon AppFlow preserves the data types in your source\
              \ data when it writes the output to Amazon S3. </p> <ul> <li> <p> <code>true</code>:\
              \ Amazon AppFlow preserves the data types when it writes to Amazon S3.\
              \ For example, an integer or <code>1</code> in your source data is still\
              \ an integer in your output.</p> </li> <li> <p> <code>false</code>:\
              \ Amazon AppFlow converts all of the source data into strings when it\
              \ writes to Amazon S3. For example, an integer of <code>1</code> in\
              \ your source data becomes the string <code>\"1\"</code> in the output.</p>\
              \ </li> </ul>"
      type: object
    S3InputFileType:
      enum:
      - CSV
      - JSON
      type: string
    S3InputFormatConfig:
      description: " When you use Amazon S3 as the source, the configuration format\
        \ that you provide the flow input data. "
      example:
        s3InputFileType: ""
      properties:
        s3InputFileType:
          allOf:
          - $ref: '#/components/schemas/S3InputFileType'
          - description: ' The file type that Amazon AppFlow gets from your Amazon
              S3 bucket. '
      type: object
    S3SourceProperties:
      description: ' The properties that are applied when Amazon S3 is being used
        as the flow source. '
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: ' The Amazon S3 bucket name where the source files are stored. '
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: ' The object key for the Amazon S3 bucket in which the source
              files are stored. '
        s3InputFormatConfig:
          $ref: '#/components/schemas/S3InputFormatConfig'
      required:
      - bucketName
      type: object
    SuccessResponseHandlingConfig:
      description: "<p>Determines how Amazon AppFlow handles the success response\
        \ that it gets from the connector after placing data.</p> <p>For example,\
        \ this setting would determine where to write the response from the destination\
        \ connector upon a successful insert operation.</p>"
      properties:
        bucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: The Amazon S3 bucket prefix.
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The name of the Amazon S3 bucket.
      type: object
    SAPODataSourceProperties:
      description: ' The properties that are applied when using SAPOData as a flow
        source. '
      example:
        objectPath: ""
      properties:
        objectPath:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object path specified in the SAPOData flow source. '
      type: object
    SalesforceDataTransferApi:
      enum:
      - AUTOMATIC
      - BULKV2
      - REST_SYNC
      type: string
    SalesforceDataTransferApiList:
      items:
        $ref: '#/components/schemas/SalesforceDataTransferApi'
      type: array
    SalesforceSourceProperties:
      description: ' The properties that are applied when Salesforce is being used
        as a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Salesforce flow source. '
        enableDynamicFieldUpdate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' The flag that enables dynamic fetching of new (recently
              added) fields in the Salesforce objects while running a flow. '
        includeDeletedRecords:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Indicates whether Amazon AppFlow includes deleted files
              in the flow run. '
        dataTransferApi:
          allOf:
          - $ref: '#/components/schemas/SalesforceDataTransferApi'
          - description: "<p>Specifies which Salesforce API is used by Amazon AppFlow\
              \ when your flow transfers data from Salesforce.</p> <dl> <dt>AUTOMATIC</dt>\
              \ <dd> <p>The default. Amazon AppFlow selects which API to use based\
              \ on the number of records that your flow transfers from Salesforce.\
              \ If your flow transfers fewer than 1,000,000 records, Amazon AppFlow\
              \ uses Salesforce REST API. If your flow transfers 1,000,000 records\
              \ or more, Amazon AppFlow uses Salesforce Bulk API 2.0.</p> <p>Each\
              \ of these Salesforce APIs structures data differently. If Amazon AppFlow\
              \ selects the API automatically, be aware that, for recurring flows,\
              \ the data output might vary from one flow run to the next. For example,\
              \ if a flow runs daily, it might use REST API on one day to transfer\
              \ 900,000 records, and it might use Bulk API 2.0 on the next day to\
              \ transfer 1,100,000 records. For each of these flow runs, the respective\
              \ Salesforce API formats the data differently. Some of the differences\
              \ include how dates are formatted and null values are represented. Also,\
              \ Bulk API 2.0 doesn't transfer Salesforce compound fields.</p> <p>By\
              \ choosing this option, you optimize flow performance for both small\
              \ and large data transfers, but the tradeoff is inconsistent formatting\
              \ in the output.</p> </dd> <dt>BULKV2</dt> <dd> <p>Amazon AppFlow uses\
              \ only Salesforce Bulk API 2.0. This API runs asynchronous data transfers,\
              \ and it's optimal for large sets of data. By choosing this option,\
              \ you ensure that your flow writes consistent output, but you optimize\
              \ performance only for large data transfers.</p> <p>Note that Bulk API\
              \ 2.0 does not transfer Salesforce compound fields.</p> </dd> <dt>REST_SYNC</dt>\
              \ <dd> <p>Amazon AppFlow uses only Salesforce REST API. By choosing\
              \ this option, you ensure that your flow writes consistent output, but\
              \ you decrease performance for large data transfers that are better\
              \ suited for Bulk API 2.0. In some cases, if your flow attempts to transfer\
              \ a vary large set of data, it might fail wituh a timed out error.</p>\
              \ </dd> </dl>"
      required:
      - object
      type: object
    ScheduleExpression:
      maxLength: 256
      pattern: .*
      type: string
    ScheduleFrequencyType:
      enum:
      - BYMINUTE
      - HOURLY
      - DAILY
      - WEEKLY
      - MONTHLY
      - ONCE
      type: string
    ScheduleOffset:
      maximum: 36000
      minimum: 0
      type: integer
    Timezone:
      maxLength: 256
      pattern: .*
      type: string
    ScheduledTriggerProperties:
      description: " Specifies the configuration details of a schedule-triggered flow\
        \ as defined by the user. Currently, these settings only apply to the <code>Scheduled</code>\
        \ trigger type. "
      properties:
        scheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: " The scheduling expression that determines the rate at which\
              \ the schedule will run, for example <code>rate(5minutes)</code>. "
        dataPullMode:
          allOf:
          - $ref: '#/components/schemas/DataPullMode'
          - description: ' Specifies whether a scheduled flow has an incremental data
              transfer or a complete data transfer for each flow run. '
        scheduleStartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "The time at which the scheduled flow starts. The time is\
              \ formatted as a timestamp that follows the ISO 8601 standard, such\
              \ as <code>2022-04-26T13:00:00-07:00</code>."
        scheduleEndTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "The time at which the scheduled flow ends. The time is formatted\
              \ as a timestamp that follows the ISO 8601 standard, such as <code>2022-04-27T13:00:00-07:00</code>."
        timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: "<p>Specifies the time zone used when referring to the dates\
              \ and times of a scheduled flow, such as <code>America/New_York</code>.\
              \ This time zone is only a descriptive label. It doesn't affect how\
              \ Amazon AppFlow interprets the timestamps that you specify to schedule\
              \ the flow.</p> <p>If you want to schedule a flow by using times in\
              \ a particular time zone, indicate the time zone as a UTC offset in\
              \ your timestamps. For example, the UTC offsets for the <code>America/New_York</code>\
              \ timezone are <code>-04:00</code> EDT and <code>-05:00 EST</code>.</p>"
        scheduleOffset:
          allOf:
          - $ref: '#/components/schemas/ScheduleOffset'
          - description: ' Specifies the optional offset that is added to the time
              interval for a schedule-triggered flow. '
        firstExecutionFrom:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' Specifies the date range for the records to import from
              the connector in the first flow run. '
        flowErrorDeactivationThreshold:
          allOf:
          - $ref: '#/components/schemas/FlowErrorDeactivationThreshold'
          - description: Defines how many times a scheduled flow fails consecutively
              before Amazon AppFlow deactivates it.
      required:
      - scheduleExpression
      type: object
    ServiceNowSourceProperties:
      description: ' The properties that are applied when ServiceNow is being used
        as a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the ServiceNow flow source. '
      required:
      - object
      type: object
    SingularSourceProperties:
      description: ' The properties that are applied when Singular is being used as
        a source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Singular flow source. '
      required:
      - object
      type: object
    SlackSourceProperties:
      description: ' The properties that are applied when Slack is being used as a
        source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Slack flow source. '
      required:
      - object
      type: object
    Warehouse:
      maxLength: 512
      pattern: "[\\s\\w/!@#+=.-]*"
      type: string
    Stage:
      maxLength: 512
      pattern: \S+
      type: string
    TrendmicroSourceProperties:
      description: ' The properties that are applied when using Trend Micro as a flow
        source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Trend Micro flow source. '
      required:
      - object
      type: object
    VeevaSourceProperties:
      description: ' The properties that are applied when using Veeva as a flow source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Veeva flow source. '
        documentType:
          allOf:
          - $ref: '#/components/schemas/DocumentType'
          - description: The document type specified in the Veeva document extract
              flow.
        includeSourceFiles:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Boolean value to include source files in Veeva document extract
              flow.
        includeRenditions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Boolean value to include file renditions in Veeva document
              extract flow.
        includeAllVersions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Boolean value to include All Versions of files in Veeva document
              extract flow.
      required:
      - object
      type: object
    ZendeskSourceProperties:
      description: ' The properties that are applied when using Zendesk as a flow
        source. '
      properties:
        object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: ' The object specified in the Zendesk flow source. '
      required:
      - object
      type: object
    SourceFields:
      items:
        $ref: '#/components/schemas/String'
      type: array
    StartFlowRequest:
      example:
        clientToken: ""
        flowName: ""
      properties:
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "<p>The <code>clientToken</code> parameter is an idempotency\
              \ token. It ensures that your <code>StartFlow</code> request completes\
              \ only once. You choose the value to pass. For example, if you don't\
              \ receive a response from your request, you can safely retry the request\
              \ with the same <code>clientToken</code> parameter value.</p> <p>If\
              \ you omit a <code>clientToken</code> value, the Amazon Web Services\
              \ SDK that you are using inserts a value for you. This way, the SDK\
              \ can safely retry requests multiple times after a network error. You\
              \ must provide your own value for other use cases.</p> <p>If you specify\
              \ input parameters that differ from your first request, an error occurs\
              \ for flows that run on a schedule or based on an event. However, the\
              \ error doesn't occur for flows that run on demand. You set the conditions\
              \ that initiate your flow for the <code>triggerConfig</code> parameter.</p>\
              \ <p>If you use a different value for <code>clientToken</code>, Amazon\
              \ AppFlow considers it a new call to <code>StartFlow</code>. The token\
              \ is active for 8 hours.</p>"
      required:
      - flowName
      title: StartFlowRequest
      type: object
    StopFlowRequest:
      properties:
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
      required:
      - flowName
      title: StopFlowRequest
      type: object
    SupportedApiVersion:
      maxLength: 256
      pattern: \S+
      type: string
    SupportedDataTransferType:
      enum:
      - RECORD
      - FILE
      type: string
    Value:
      maxLength: 128
      pattern: \S+
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: " The tags used to organize, track, or control access for\
              \ your flow. "
      required:
      - tags
      title: TagResourceRequest
      type: object
    TaskType:
      enum:
      - Arithmetic
      - Filter
      - Map
      - Map_all
      - Mask
      - Merge
      - Passthrough
      - Truncate
      - Validate
      - Partition
      type: string
    TaskPropertiesMap:
      additionalProperties:
        $ref: '#/components/schemas/Property'
      type: object
    UnregisterConnectorRequest:
      example:
        forceDelete: ""
        connectorLabel: ""
      properties:
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The label of the connector. The label is unique for each
              <code>ConnectorRegistration</code> in your Amazon Web Services account.
        forceDelete:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether Amazon AppFlow should unregister the connector,\
              \ even if it is currently in use in one or more connector profiles.\
              \ The default value is false."
      required:
      - connectorLabel
      title: UnregisterConnectorRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateConnectorProfileRequest:
      example:
        connectorProfileConfig:
          connectorProfileCredentials:
            Amplitude:
              apiKey: ""
              secretKey: ""
            GoogleAnalytics:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
              refreshToken: ""
            ServiceNow:
              password: ""
              username: ""
            CustomConnector:
              apiKey:
                apiKey: ""
                apiSecretKey: ""
              custom:
                customAuthenticationType: ""
                credentialsMap: ""
              authenticationType: ""
              basic:
                password: ""
                username: ""
              oauth2:
                clientId: ""
                oAuthRequest:
                  redirectUri: ""
                  authCode: ""
                clientSecret: ""
                accessToken: ""
                refreshToken: ""
            SAPOData:
              basicAuthCredentials:
                password: ""
                username: ""
              oAuthCredentials:
                clientId: ""
                oAuthRequest:
                  redirectUri: ""
                  authCode: ""
                clientSecret: ""
                accessToken: ""
                refreshToken: ""
            Pardot:
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              accessToken: ""
              clientCredentialsArn: ""
              refreshToken: ""
            Honeycode:
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              accessToken: ""
              refreshToken: ""
            Veeva:
              password: ""
              username: ""
            Trendmicro:
              apiSecretKey: ""
            Datadog:
              apiKey: ""
              applicationKey: ""
            Marketo:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
            Redshift:
              password: ""
              username: ""
            Singular:
              apiKey: ""
            Slack:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
            Snowflake:
              password: ""
              username: ""
            Dynatrace:
              apiToken: ""
            Zendesk:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
            InforNexus:
              accessKeyId: ""
              secretAccessKey: ""
              datakey: ""
              userId: ""
            Salesforce:
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              oAuth2GrantType: ""
              jwtToken: ""
              accessToken: ""
              clientCredentialsArn: ""
              refreshToken: ""
          connectorProfileProperties:
            Amplitude: ""
            GoogleAnalytics: ""
            ServiceNow:
              instanceUrl: ""
            CustomConnector:
              oAuth2Properties:
                tokenUrl: ""
                tokenUrlCustomProperties: ""
                oAuth2GrantType: ""
              profileProperties: ""
            SAPOData:
              privateLinkServiceName: ""
              logonLanguage: ""
              oAuthProperties:
                tokenUrl: ""
                oAuthScopes: ""
                authCodeUrl: ""
              disableSSO: ""
              applicationHostUrl: ""
              applicationServicePath: ""
              clientNumber: ""
              portNumber: ""
            Pardot:
              isSandboxEnvironment: ""
              businessUnitId: ""
              instanceUrl: ""
            Honeycode: ""
            Veeva:
              instanceUrl: ""
            Trendmicro: ""
            Datadog:
              instanceUrl: ""
            Marketo:
              instanceUrl: ""
            Redshift:
              bucketName: ""
              databaseName: ""
              roleArn: ""
              bucketPrefix: ""
              workgroupName: ""
              clusterIdentifier: ""
              isRedshiftServerless: ""
              dataApiRoleArn: ""
              databaseUrl: ""
            Singular: ""
            Slack:
              instanceUrl: ""
            Snowflake:
              bucketName: ""
              privateLinkServiceName: ""
              stage: ""
              accountName: ""
              bucketPrefix: ""
              warehouse: ""
              region: ""
            Dynatrace:
              instanceUrl: ""
            Zendesk:
              instanceUrl: ""
            InforNexus:
              instanceUrl: ""
            Salesforce:
              isSandboxEnvironment: ""
              usePrivateLinkForMetadataAndAuthorization: ""
              instanceUrl: ""
        connectionMode: ""
        connectorProfileName: ""
        clientToken: ""
      properties:
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: ' The name of the connector profile and is unique for each
              <code>ConnectorProfile</code> in the Amazon Web Services account. '
        connectionMode:
          allOf:
          - $ref: '#/components/schemas/ConnectionMode'
          - description: ' Indicates the connection mode and if it is public or private. '
        connectorProfileConfig:
          $ref: '#/components/schemas/UpdateConnectorProfileRequest_connectorProfileConfig'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "<p>The <code>clientToken</code> parameter is an idempotency\
              \ token. It ensures that your <code>UpdateConnectorProfile</code> request\
              \ completes only once. You choose the value to pass. For example, if\
              \ you don't receive a response from your request, you can safely retry\
              \ the request with the same <code>clientToken</code> parameter value.</p>\
              \ <p>If you omit a <code>clientToken</code> value, the Amazon Web Services\
              \ SDK that you are using inserts a value for you. This way, the SDK\
              \ can safely retry requests multiple times after a network error. You\
              \ must provide your own value for other use cases.</p> <p>If you specify\
              \ input parameters that differ from your first request, an error occurs.\
              \ If you use a different value for <code>clientToken</code>, Amazon\
              \ AppFlow considers it a new call to <code>UpdateConnectorProfile</code>.\
              \ The token is active for 8 hours.</p>"
      required:
      - connectionMode
      - connectorProfileConfig
      - connectorProfileName
      title: UpdateConnectorProfileRequest
      type: object
    UpdateConnectorRegistrationRequest:
      example:
        clientToken: ""
        connectorLabel: ""
        description: ""
        connectorProvisioningConfig:
          lambda:
            lambdaArn: ""
      properties:
        connectorLabel:
          allOf:
          - $ref: '#/components/schemas/ConnectorLabel'
          - description: The name of the connector. The name is unique for each connector
              registration in your AWS account.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description about the update that you're applying to the
              connector.
        connectorProvisioningConfig:
          $ref: '#/components/schemas/ConnectorProvisioningConfig'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "<p>The <code>clientToken</code> parameter is an idempotency\
              \ token. It ensures that your <code>UpdateConnectorRegistration</code>\
              \ request completes only once. You choose the value to pass. For example,\
              \ if you don't receive a response from your request, you can safely\
              \ retry the request with the same <code>clientToken</code> parameter\
              \ value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon\
              \ Web Services SDK that you are using inserts a value for you. This\
              \ way, the SDK can safely retry requests multiple times after a network\
              \ error. You must provide your own value for other use cases.</p> <p>If\
              \ you specify input parameters that differ from your first request,\
              \ an error occurs. If you use a different value for <code>clientToken</code>,\
              \ Amazon AppFlow considers it a new call to <code>UpdateConnectorRegistration</code>.\
              \ The token is active for 8 hours.</p>"
      required:
      - connectorLabel
      title: UpdateConnectorRegistrationRequest
      type: object
    UpdateFlowRequest:
      example:
        destinationFlowConfigList: ""
        triggerConfig:
          triggerProperties:
            Scheduled:
              scheduleOffset: ""
              scheduleExpression: ""
              timezone: ""
              flowErrorDeactivationThreshold: ""
              dataPullMode: ""
              firstExecutionFrom: ""
              scheduleStartTime: ""
              scheduleEndTime: ""
          triggerType: ""
        sourceFlowConfig:
          connectorType: ""
          apiVersion: ""
          connectorProfileName: ""
          incrementalPullConfig:
            datetimeTypeFieldName: ""
          sourceConnectorProperties:
            Amplitude:
              object: ""
            S3:
              bucketName: ""
              bucketPrefix: ""
              s3InputFormatConfig:
                s3InputFileType: ""
            GoogleAnalytics:
              object: ""
            ServiceNow:
              object: ""
            CustomConnector:
              customProperties: ""
              entityName: ""
              dataTransferApi:
                Type: ""
                Name: ""
            SAPOData:
              objectPath: ""
            Pardot:
              object: ""
            Veeva:
              includeSourceFiles: ""
              documentType: ""
              includeAllVersions: ""
              includeRenditions: ""
              object: ""
            Trendmicro:
              object: ""
            Datadog:
              object: ""
            Marketo:
              object: ""
            Singular:
              object: ""
            Slack:
              object: ""
            Dynatrace:
              object: ""
            Zendesk:
              object: ""
            InforNexus:
              object: ""
            Salesforce:
              includeDeletedRecords: ""
              enableDynamicFieldUpdate: ""
              object: ""
              dataTransferApi: ""
        clientToken: ""
        description: ""
        flowName: ""
        metadataCatalogConfig:
          glueDataCatalog:
            databaseName: ""
            tablePrefix: ""
            roleArn: ""
        tasks: ""
      properties:
        flowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' The specified name of the flow. Spaces are not allowed.
              Use underscores (_) or hyphens (-) only. '
        description:
          allOf:
          - $ref: '#/components/schemas/FlowDescription'
          - description: ' A description of the flow. '
        triggerConfig:
          $ref: '#/components/schemas/DescribeFlowResponse_triggerConfig'
        sourceFlowConfig:
          $ref: '#/components/schemas/SourceFlowConfig'
        destinationFlowConfigList:
          allOf:
          - $ref: '#/components/schemas/DestinationFlowConfigList'
          - description: ' The configuration that controls how Amazon AppFlow transfers
              data to the destination connector. '
        tasks:
          allOf:
          - $ref: '#/components/schemas/Tasks'
          - description: ' A list of tasks that Amazon AppFlow performs while transferring
              the data in the flow run. '
        metadataCatalogConfig:
          $ref: '#/components/schemas/DescribeFlowResponse_metadataCatalogConfig'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "<p>The <code>clientToken</code> parameter is an idempotency\
              \ token. It ensures that your <code>UpdateFlow</code> request completes\
              \ only once. You choose the value to pass. For example, if you don't\
              \ receive a response from your request, you can safely retry the request\
              \ with the same <code>clientToken</code> parameter value.</p> <p>If\
              \ you omit a <code>clientToken</code> value, the Amazon Web Services\
              \ SDK that you are using inserts a value for you. This way, the SDK\
              \ can safely retry requests multiple times after a network error. You\
              \ must provide your own value for other use cases.</p> <p>If you specify\
              \ input parameters that differ from your first request, an error occurs.\
              \ If you use a different value for <code>clientToken</code>, Amazon\
              \ AppFlow considers it a new call to <code>UpdateFlow</code>. The token\
              \ is active for 8 hours.</p>"
      required:
      - destinationFlowConfigList
      - flowName
      - sourceFlowConfig
      - tasks
      - triggerConfig
      title: UpdateFlowRequest
      type: object
    UpsolverBucketName:
      maxLength: 63
      minLength: 16
      pattern: ^(upsolver-appflow)\S*
      type: string
    UpsolverS3OutputFormatConfig:
      description: ' The configuration that determines how Amazon AppFlow formats
        the flow output data when Upsolver is used as the destination. '
      properties:
        fileType:
          allOf:
          - $ref: '#/components/schemas/FileType'
          - description: ' Indicates the file type that Amazon AppFlow places in the
              Upsolver Amazon S3 bucket. '
        prefixConfig:
          $ref: '#/components/schemas/PrefixConfig'
        aggregationConfig:
          $ref: '#/components/schemas/AggregationConfig'
      required:
      - prefixConfig
      type: object
    CancelFlowExecutions_request:
      properties:
        flowName:
          description: The name of a flow with active runs that you want to cancel.
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        executionIds:
          description: "<p>The ID of each active run to cancel. These runs must belong\
            \ to the flow you specify in your request.</p> <p>If you omit this parameter,\
            \ your request ends all active runs that belong to the flow.</p>"
          items:
            $ref: '#/components/schemas/ExecutionId'
          maxItems: 100
          minItems: 0
          type: array
      required:
      - flowName
      type: object
    CreateConnectorProfile_request_connectorProfileConfig_connectorProfileProperties:
      allOf:
      - $ref: '#/components/schemas/ConnectorProfileProperties'
      - description: ' The connector-specific properties of the profile configuration. '
      example:
        Amplitude: ""
        GoogleAnalytics: ""
        ServiceNow:
          instanceUrl: ""
        CustomConnector:
          oAuth2Properties:
            tokenUrl: ""
            tokenUrlCustomProperties: ""
            oAuth2GrantType: ""
          profileProperties: ""
        SAPOData:
          privateLinkServiceName: ""
          logonLanguage: ""
          oAuthProperties:
            tokenUrl: ""
            oAuthScopes: ""
            authCodeUrl: ""
          disableSSO: ""
          applicationHostUrl: ""
          applicationServicePath: ""
          clientNumber: ""
          portNumber: ""
        Pardot:
          isSandboxEnvironment: ""
          businessUnitId: ""
          instanceUrl: ""
        Honeycode: ""
        Veeva:
          instanceUrl: ""
        Trendmicro: ""
        Datadog:
          instanceUrl: ""
        Marketo:
          instanceUrl: ""
        Redshift:
          bucketName: ""
          databaseName: ""
          roleArn: ""
          bucketPrefix: ""
          workgroupName: ""
          clusterIdentifier: ""
          isRedshiftServerless: ""
          dataApiRoleArn: ""
          databaseUrl: ""
        Singular: ""
        Slack:
          instanceUrl: ""
        Snowflake:
          bucketName: ""
          privateLinkServiceName: ""
          stage: ""
          accountName: ""
          bucketPrefix: ""
          warehouse: ""
          region: ""
        Dynatrace:
          instanceUrl: ""
        Zendesk:
          instanceUrl: ""
        InforNexus:
          instanceUrl: ""
        Salesforce:
          isSandboxEnvironment: ""
          usePrivateLinkForMetadataAndAuthorization: ""
          instanceUrl: ""
    CreateConnectorProfile_request_connectorProfileConfig_connectorProfileCredentials:
      allOf:
      - $ref: '#/components/schemas/ConnectorProfileCredentials'
      - description: ' The connector-specific credentials required by each connector. '
      example:
        Amplitude:
          apiKey: ""
          secretKey: ""
        GoogleAnalytics:
          clientId: ""
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          clientSecret: ""
          accessToken: ""
          refreshToken: ""
        ServiceNow:
          password: ""
          username: ""
        CustomConnector:
          apiKey:
            apiKey: ""
            apiSecretKey: ""
          custom:
            customAuthenticationType: ""
            credentialsMap: ""
          authenticationType: ""
          basic:
            password: ""
            username: ""
          oauth2:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
            refreshToken: ""
        SAPOData:
          basicAuthCredentials:
            password: ""
            username: ""
          oAuthCredentials:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
            refreshToken: ""
        Pardot:
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          accessToken: ""
          clientCredentialsArn: ""
          refreshToken: ""
        Honeycode:
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          accessToken: ""
          refreshToken: ""
        Veeva:
          password: ""
          username: ""
        Trendmicro:
          apiSecretKey: ""
        Datadog:
          apiKey: ""
          applicationKey: ""
        Marketo:
          clientId: ""
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          clientSecret: ""
          accessToken: ""
        Redshift:
          password: ""
          username: ""
        Singular:
          apiKey: ""
        Slack:
          clientId: ""
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          clientSecret: ""
          accessToken: ""
        Snowflake:
          password: ""
          username: ""
        Dynatrace:
          apiToken: ""
        Zendesk:
          clientId: ""
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          clientSecret: ""
          accessToken: ""
        InforNexus:
          accessKeyId: ""
          secretAccessKey: ""
          datakey: ""
          userId: ""
        Salesforce:
          oAuthRequest:
            redirectUri: ""
            authCode: ""
          oAuth2GrantType: ""
          jwtToken: ""
          accessToken: ""
          clientCredentialsArn: ""
          refreshToken: ""
    CreateConnectorProfile_request_connectorProfileConfig:
      description: ' Defines the connector-specific configuration and credentials
        for the connector profile. '
      properties:
        connectorProfileProperties:
          $ref: '#/components/schemas/CreateConnectorProfile_request_connectorProfileConfig_connectorProfileProperties'
        connectorProfileCredentials:
          $ref: '#/components/schemas/CreateConnectorProfile_request_connectorProfileConfig_connectorProfileCredentials'
      type: object
    CreateConnectorProfile_request:
      properties:
        connectorProfileName:
          description: ' The name of the connector profile. The name is unique for
            each <code>ConnectorProfile</code> in your Amazon Web Services account. '
          maxLength: 256
          pattern: "[\\w/!@#+=.-]+"
          type: string
        kmsArn:
          description: " The ARN (Amazon Resource Name) of the Key Management Service\
            \ (KMS) key you provide for encryption. This is required if you do not\
            \ want to use the Amazon AppFlow-managed KMS key. If you don't provide\
            \ anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. "
          maxLength: 2048
          minLength: 20
          pattern: "arn:aws:kms:.*:[0-9]+:.*"
          type: string
        connectorType:
          description: " The type of connector, such as Salesforce, Amplitude, and\
            \ so on. "
          enum:
          - Salesforce
          - Singular
          - Slack
          - Redshift
          - S3
          - Marketo
          - Googleanalytics
          - Zendesk
          - Servicenow
          - Datadog
          - Trendmicro
          - Snowflake
          - Dynatrace
          - Infornexus
          - Amplitude
          - Veeva
          - EventBridge
          - LookoutMetrics
          - Upsolver
          - Honeycode
          - CustomerProfiles
          - SAPOData
          - CustomConnector
          - Pardot
          type: string
        connectorLabel:
          description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code>
            in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR
            connector type/.
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        connectionMode:
          description: ' Indicates the connection mode and specifies whether it is
            public or private. Private flows use Amazon Web Services PrivateLink to
            route data over Amazon Web Services infrastructure without exposing it
            to the public internet. '
          enum:
          - Public
          - Private
          type: string
        connectorProfileConfig:
          $ref: '#/components/schemas/CreateConnectorProfile_request_connectorProfileConfig'
        clientToken:
          description: "<p>The <code>clientToken</code> parameter is an idempotency\
            \ token. It ensures that your <code>CreateConnectorProfile</code> request\
            \ completes only once. You choose the value to pass. For example, if you\
            \ don't receive a response from your request, you can safely retry the\
            \ request with the same <code>clientToken</code> parameter value.</p>\
            \ <p>If you omit a <code>clientToken</code> value, the Amazon Web Services\
            \ SDK that you are using inserts a value for you. This way, the SDK can\
            \ safely retry requests multiple times after a network error. You must\
            \ provide your own value for other use cases.</p> <p>If you specify input\
            \ parameters that differ from your first request, an error occurs. If\
            \ you use a different value for <code>clientToken</code>, Amazon AppFlow\
            \ considers it a new call to <code>CreateConnectorProfile</code>. The\
            \ token is active for 8 hours.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[ -~]+"
          type: string
      required:
      - connectionMode
      - connectorProfileConfig
      - connectorProfileName
      - connectorType
      type: object
    CreateFlow_request_triggerConfig_triggerProperties:
      allOf:
      - $ref: '#/components/schemas/TriggerProperties'
      - description: " Specifies the configuration details of a schedule-triggered\
          \ flow as defined by the user. Currently, these settings only apply to the\
          \ <code>Scheduled</code> trigger type. "
      example:
        Scheduled:
          scheduleOffset: ""
          scheduleExpression: ""
          timezone: ""
          flowErrorDeactivationThreshold: ""
          dataPullMode: ""
          firstExecutionFrom: ""
          scheduleStartTime: ""
          scheduleEndTime: ""
    CreateFlow_request_triggerConfig:
      description: ' The trigger settings that determine how and when Amazon AppFlow
        runs the specified flow. '
      properties:
        triggerType:
          allOf:
          - $ref: '#/components/schemas/TriggerType'
          - description: " Specifies the type of flow trigger. This can be <code>OnDemand</code>,\
              \ <code>Scheduled</code>, or <code>Event</code>. "
        triggerProperties:
          $ref: '#/components/schemas/CreateFlow_request_triggerConfig_triggerProperties'
      type: object
    CreateFlow_request_sourceFlowConfig_sourceConnectorProperties:
      allOf:
      - $ref: '#/components/schemas/SourceConnectorProperties'
      - description: ' Specifies the information that is required to query a particular
          source connector. '
      example:
        Amplitude:
          object: ""
        S3:
          bucketName: ""
          bucketPrefix: ""
          s3InputFormatConfig:
            s3InputFileType: ""
        GoogleAnalytics:
          object: ""
        ServiceNow:
          object: ""
        CustomConnector:
          customProperties: ""
          entityName: ""
          dataTransferApi:
            Type: ""
            Name: ""
        SAPOData:
          objectPath: ""
        Pardot:
          object: ""
        Veeva:
          includeSourceFiles: ""
          documentType: ""
          includeAllVersions: ""
          includeRenditions: ""
          object: ""
        Trendmicro:
          object: ""
        Datadog:
          object: ""
        Marketo:
          object: ""
        Singular:
          object: ""
        Slack:
          object: ""
        Dynatrace:
          object: ""
        Zendesk:
          object: ""
        InforNexus:
          object: ""
        Salesforce:
          includeDeletedRecords: ""
          enableDynamicFieldUpdate: ""
          object: ""
          dataTransferApi: ""
    CreateFlow_request_sourceFlowConfig_incrementalPullConfig:
      allOf:
      - $ref: '#/components/schemas/IncrementalPullConfig'
      - description: " Defines the configuration for a scheduled incremental data\
          \ pull. If a valid configuration is provided, the fields specified in the\
          \ configuration are used when querying for the incremental data pull. "
      example:
        datetimeTypeFieldName: ""
    CreateFlow_request_sourceFlowConfig:
      description: ' Contains information about the configuration of the source connector
        used in the flow. '
      properties:
        connectorType:
          allOf:
          - $ref: '#/components/schemas/ConnectorType'
          - description: " The type of connector, such as Salesforce, Amplitude, and\
              \ so on. "
        apiVersion:
          allOf:
          - $ref: '#/components/schemas/ApiVersion'
          - description: The API version of the connector when it's used as a source
              in the flow.
        connectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: ' The name of the connector profile. This name must be unique
              for each connector profile in the Amazon Web Services account. '
        sourceConnectorProperties:
          $ref: '#/components/schemas/CreateFlow_request_sourceFlowConfig_sourceConnectorProperties'
        incrementalPullConfig:
          $ref: '#/components/schemas/CreateFlow_request_sourceFlowConfig_incrementalPullConfig'
      type: object
    CreateFlow_request_metadataCatalogConfig_glueDataCatalog:
      allOf:
      - $ref: '#/components/schemas/GlueDataCatalogConfig'
      - description: Specifies the configuration that Amazon AppFlow uses when it
          catalogs your data with the Glue Data Catalog.
      example:
        databaseName: ""
        tablePrefix: ""
        roleArn: ""
    CreateFlow_request_metadataCatalogConfig:
      description: "Specifies the configuration that Amazon AppFlow uses when it catalogs\
        \ your data. When Amazon AppFlow catalogs your data, it stores metadata in\
        \ a data catalog."
      properties:
        glueDataCatalog:
          $ref: '#/components/schemas/CreateFlow_request_metadataCatalogConfig_glueDataCatalog'
      type: object
    CreateFlow_request:
      properties:
        flowName:
          description: ' The specified name of the flow. Spaces are not allowed. Use
            underscores (_) or hyphens (-) only. '
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        description:
          description: ' A description of the flow you want to create. '
          maxLength: 2048
          pattern: "[\\w!@#\\-.?,\\s]*"
          type: string
        kmsArn:
          description: " The ARN (Amazon Resource Name) of the Key Management Service\
            \ (KMS) key you provide for encryption. This is required if you do not\
            \ want to use the Amazon AppFlow-managed KMS key. If you don't provide\
            \ anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. "
          maxLength: 2048
          minLength: 20
          pattern: "arn:aws:kms:.*:[0-9]+:.*"
          type: string
        triggerConfig:
          $ref: '#/components/schemas/CreateFlow_request_triggerConfig'
        sourceFlowConfig:
          $ref: '#/components/schemas/CreateFlow_request_sourceFlowConfig'
        destinationFlowConfigList:
          description: ' The configuration that controls how Amazon AppFlow places
            data in the destination connector. '
          items:
            $ref: '#/components/schemas/DestinationFlowConfig'
          type: array
        tasks:
          description: ' A list of tasks that Amazon AppFlow performs while transferring
            the data in the flow run. '
          items:
            $ref: '#/components/schemas/Task'
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: " The tags used to organize, track, or control access for your\
            \ flow. "
          maxProperties: 50
          minProperties: 0
          type: object
        metadataCatalogConfig:
          $ref: '#/components/schemas/CreateFlow_request_metadataCatalogConfig'
        clientToken:
          description: "<p>The <code>clientToken</code> parameter is an idempotency\
            \ token. It ensures that your <code>CreateFlow</code> request completes\
            \ only once. You choose the value to pass. For example, if you don't receive\
            \ a response from your request, you can safely retry the request with\
            \ the same <code>clientToken</code> parameter value.</p> <p>If you omit\
            \ a <code>clientToken</code> value, the Amazon Web Services SDK that you\
            \ are using inserts a value for you. This way, the SDK can safely retry\
            \ requests multiple times after a network error. You must provide your\
            \ own value for other use cases.</p> <p>If you specify input parameters\
            \ that differ from your first request, an error occurs. If you use a different\
            \ value for <code>clientToken</code>, Amazon AppFlow considers it a new\
            \ call to <code>CreateFlow</code>. The token is active for 8 hours.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[ -~]+"
          type: string
      required:
      - destinationFlowConfigList
      - flowName
      - sourceFlowConfig
      - tasks
      - triggerConfig
      type: object
    DeleteConnectorProfile_request:
      properties:
        connectorProfileName:
          description: ' The name of the connector profile. The name is unique for
            each <code>ConnectorProfile</code> in your account. '
          maxLength: 256
          pattern: "[\\w/!@#+=.-]+"
          type: string
        forceDelete:
          description: " Indicates whether Amazon AppFlow should delete the profile,\
            \ even if it is currently in use in one or more flows. "
          type: boolean
      required:
      - connectorProfileName
      type: object
    DeleteFlow_request:
      properties:
        flowName:
          description: ' The specified name of the flow. Spaces are not allowed. Use
            underscores (_) or hyphens (-) only. '
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        forceDelete:
          description: " Indicates whether Amazon AppFlow should delete the flow,\
            \ even if it is currently in use. "
          type: boolean
      required:
      - flowName
      type: object
    DescribeConnector_request:
      properties:
        connectorType:
          description: "The connector type, such as CUSTOMCONNECTOR, Saleforce, Marketo.\
            \ Please choose CUSTOMCONNECTOR for Lambda based custom connectors."
          enum:
          - Salesforce
          - Singular
          - Slack
          - Redshift
          - S3
          - Marketo
          - Googleanalytics
          - Zendesk
          - Servicenow
          - Datadog
          - Trendmicro
          - Snowflake
          - Dynatrace
          - Infornexus
          - Amplitude
          - Veeva
          - EventBridge
          - LookoutMetrics
          - Upsolver
          - Honeycode
          - CustomerProfiles
          - SAPOData
          - CustomConnector
          - Pardot
          type: string
        connectorLabel:
          description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code>
            in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR
            connector type/.
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
      required:
      - connectorType
      type: object
    DescribeConnectorEntity_request:
      properties:
        connectorEntityName:
          description: ' The entity name for that connector. '
          maxLength: 1024
          pattern: \S+
          type: string
        connectorType:
          description: " The type of connector application, such as Salesforce, Amplitude,\
            \ and so on. "
          enum:
          - Salesforce
          - Singular
          - Slack
          - Redshift
          - S3
          - Marketo
          - Googleanalytics
          - Zendesk
          - Servicenow
          - Datadog
          - Trendmicro
          - Snowflake
          - Dynatrace
          - Infornexus
          - Amplitude
          - Veeva
          - EventBridge
          - LookoutMetrics
          - Upsolver
          - Honeycode
          - CustomerProfiles
          - SAPOData
          - CustomConnector
          - Pardot
          type: string
        connectorProfileName:
          description: ' The name of the connector profile. The name is unique for
            each <code>ConnectorProfile</code> in the Amazon Web Services account. '
          maxLength: 256
          pattern: "[\\w/!@#+=.-]+"
          type: string
        apiVersion:
          description: The version of the API that's used by the connector.
          maxLength: 256
          pattern: \S+
          type: string
      required:
      - connectorEntityName
      type: object
    DescribeConnectorProfiles_request:
      properties:
        connectorProfileNames:
          description: ' The name of the connector profile. The name is unique for
            each <code>ConnectorProfile</code> in the Amazon Web Services account. '
          items:
            $ref: '#/components/schemas/ConnectorProfileName'
          maxItems: 100
          minItems: 0
          type: array
        connectorType:
          description: " The type of connector, such as Salesforce, Amplitude, and\
            \ so on. "
          enum:
          - Salesforce
          - Singular
          - Slack
          - Redshift
          - S3
          - Marketo
          - Googleanalytics
          - Zendesk
          - Servicenow
          - Datadog
          - Trendmicro
          - Snowflake
          - Dynatrace
          - Infornexus
          - Amplitude
          - Veeva
          - EventBridge
          - LookoutMetrics
          - Upsolver
          - Honeycode
          - CustomerProfiles
          - SAPOData
          - CustomConnector
          - Pardot
          type: string
        connectorLabel:
          description: The name of the connector. The name is unique for each <code>ConnectorRegistration</code>
            in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR
            connector type/.
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        maxResults:
          description: ' Specifies the maximum number of items that should be returned
            in the result set. The default for <code>maxResults</code> is 20 (for
            all paginated API operations). '
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: ' The pagination token for the next page of data. '
          maxLength: 2048
          pattern: \S+
          type: string
      type: object
    DescribeConnectors_request:
      properties:
        connectorTypes:
          description: " The type of connector, such as Salesforce, Amplitude, and\
            \ so on. "
          items:
            $ref: '#/components/schemas/ConnectorType'
          maxItems: 100
          minItems: 0
          type: array
        maxResults:
          description: The maximum number of items that should be returned in the
            result set. The default is 20.
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: ' The pagination token for the next page of data. '
          maxLength: 2048
          pattern: \S+
          type: string
      type: object
    DescribeFlow_request:
      properties:
        flowName:
          description: ' The specified name of the flow. Spaces are not allowed. Use
            underscores (_) or hyphens (-) only. '
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
      required:
      - flowName
      type: object
    DescribeFlowExecutionRecords_request:
      properties:
        flowName:
          description: ' The specified name of the flow. Spaces are not allowed. Use
            underscores (_) or hyphens (-) only. '
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        maxResults:
          description: ' Specifies the maximum number of items that should be returned
            in the result set. The default for <code>maxResults</code> is 20 (for
            all paginated API operations). '
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: ' The pagination token for the next page of data. '
          maxLength: 2048
          pattern: \S+
          type: string
      required:
      - flowName
      type: object
    ListConnectorEntities_request:
      properties:
        connectorProfileName:
          description: " The name of the connector profile. The name is unique for\
            \ each <code>ConnectorProfile</code> in the Amazon Web Services account,\
            \ and is used to query the downstream connector. "
          maxLength: 256
          pattern: "[\\w/!@#+=.-]+"
          type: string
        connectorType:
          description: " The type of connector, such as Salesforce, Amplitude, and\
            \ so on. "
          enum:
          - Salesforce
          - Singular
          - Slack
          - Redshift
          - S3
          - Marketo
          - Googleanalytics
          - Zendesk
          - Servicenow
          - Datadog
          - Trendmicro
          - Snowflake
          - Dynatrace
          - Infornexus
          - Amplitude
          - Veeva
          - EventBridge
          - LookoutMetrics
          - Upsolver
          - Honeycode
          - CustomerProfiles
          - SAPOData
          - CustomConnector
          - Pardot
          type: string
        entitiesPath:
          description: " This optional parameter is specific to connector implementation.\
            \ Some connectors support multiple levels or categories of entities. You\
            \ can find out the list of roots for such providers by sending a request\
            \ without the <code>entitiesPath</code> parameter. If the connector supports\
            \ entities at different roots, this initial request returns the list of\
            \ roots. Otherwise, this request returns all entities supported by the\
            \ provider. "
          maxLength: 256
          pattern: "[\\s\\w/!@#+=,.-]*"
          type: string
        apiVersion:
          description: The version of the API that's used by the connector.
          maxLength: 256
          pattern: \S+
          type: string
        maxResults:
          description: The maximum number of items that the operation returns in the
            response.
          maximum: 10000
          minimum: 1
          type: integer
        nextToken:
          description: A token that was provided by your prior <code>ListConnectorEntities</code>
            operation if the response was too big for the page size. You specify this
            token to get the next page of results in paginated response.
          maxLength: 2048
          pattern: \S+
          type: string
      type: object
    ListConnectors_request:
      properties:
        maxResults:
          description: Specifies the maximum number of items that should be returned
            in the result set. The default for <code>maxResults</code> is 20 (for
            all paginated API operations).
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: The pagination token for the next page of data.
          maxLength: 2048
          pattern: \S+
          type: string
      type: object
    ListFlows_request:
      properties:
        maxResults:
          description: ' Specifies the maximum number of items that should be returned
            in the result set. '
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: ' The pagination token for next page of data. '
          maxLength: 2048
          pattern: \S+
          type: string
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: " The tags used to organize, track, or control access for your\
            \ flow. "
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - tags
      type: object
    RegisterConnector_request_connectorProvisioningConfig_lambda:
      allOf:
      - $ref: '#/components/schemas/LambdaConnectorProvisioningConfig'
      - description: Contains information about the configuration of the lambda which
          is being registered as the connector.
      example:
        lambdaArn: ""
    RegisterConnector_request_connectorProvisioningConfig:
      description: Contains information about the configuration of the connector being
        registered.
      properties:
        lambda:
          $ref: '#/components/schemas/RegisterConnector_request_connectorProvisioningConfig_lambda'
      type: object
    RegisterConnector_request:
      properties:
        connectorLabel:
          description: ' The name of the connector. The name is unique for each <code>ConnectorRegistration</code>
            in your Amazon Web Services account.'
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        description:
          description: A description about the connector that's being registered.
          maxLength: 1024
          pattern: "[\\s\\w/!@#+=.-]*"
          type: string
        connectorProvisioningType:
          description: "The type of provisioning that the connector supports, such\
            \ as Lambda."
          enum:
          - LAMBDA
          type: string
        connectorProvisioningConfig:
          $ref: '#/components/schemas/RegisterConnector_request_connectorProvisioningConfig'
        clientToken:
          description: "<p>The <code>clientToken</code> parameter is an idempotency\
            \ token. It ensures that your <code>RegisterConnector</code> request completes\
            \ only once. You choose the value to pass. For example, if you don't receive\
            \ a response from your request, you can safely retry the request with\
            \ the same <code>clientToken</code> parameter value.</p> <p>If you omit\
            \ a <code>clientToken</code> value, the Amazon Web Services SDK that you\
            \ are using inserts a value for you. This way, the SDK can safely retry\
            \ requests multiple times after a network error. You must provide your\
            \ own value for other use cases.</p> <p>If you specify input parameters\
            \ that differ from your first request, an error occurs. If you use a different\
            \ value for <code>clientToken</code>, Amazon AppFlow considers it a new\
            \ call to <code>RegisterConnector</code>. The token is active for 8 hours.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[ -~]+"
          type: string
      type: object
    ResetConnectorMetadataCache_request:
      properties:
        connectorProfileName:
          description: "<p>The name of the connector profile that you want to reset\
            \ cached metadata for.</p> <p>You can omit this parameter if you're resetting\
            \ the cache for any of the following connectors: Amazon Connect, Amazon\
            \ EventBridge, Amazon Lookout for Metrics, Amazon S3, or Upsolver. If\
            \ you're resetting the cache for any other connector, you must include\
            \ this parameter in your request.</p>"
          maxLength: 256
          pattern: "[\\w/!@#+=.-]+"
          type: string
        connectorType:
          description: "<p>The type of connector to reset cached metadata for.</p>\
            \ <p>You must include this parameter in your request if you're resetting\
            \ the cache for any of the following connectors: Amazon Connect, Amazon\
            \ EventBridge, Amazon Lookout for Metrics, Amazon S3, or Upsolver. If\
            \ you're resetting the cache for any other connector, you can omit this\
            \ parameter from your request. </p>"
          enum:
          - Salesforce
          - Singular
          - Slack
          - Redshift
          - S3
          - Marketo
          - Googleanalytics
          - Zendesk
          - Servicenow
          - Datadog
          - Trendmicro
          - Snowflake
          - Dynatrace
          - Infornexus
          - Amplitude
          - Veeva
          - EventBridge
          - LookoutMetrics
          - Upsolver
          - Honeycode
          - CustomerProfiles
          - SAPOData
          - CustomConnector
          - Pardot
          type: string
        connectorEntityName:
          description: "<p>Use this parameter if you want to reset cached metadata\
            \ about the details for an individual entity.</p> <p>If you don't include\
            \ this parameter in your request, Amazon AppFlow only resets cached metadata\
            \ about entity names, not entity details.</p>"
          maxLength: 1024
          pattern: \S+
          type: string
        entitiesPath:
          description: "<p>Use this parameter only if you’re resetting the cached\
            \ metadata about a nested entity. Only some connectors support nested\
            \ entities. A nested entity is one that has another entity as a parent.\
            \ To use this parameter, specify the name of the parent entity.</p> <p>To\
            \ look up the parent-child relationship of entities, you can send a ListConnectorEntities\
            \ request that omits the entitiesPath parameter. Amazon AppFlow will return\
            \ a list of top-level entities. For each one, it indicates whether the\
            \ entity has nested entities. Then, in a subsequent ListConnectorEntities\
            \ request, you can specify a parent entity name for the entitiesPath parameter.\
            \ Amazon AppFlow will return a list of the child entities for that parent.</p>"
          maxLength: 256
          pattern: "[\\s\\w/!@#+=,.-]*"
          type: string
        apiVersion:
          description: "<p>The API version that you specified in the connector profile\
            \ that you’re resetting cached metadata for. You must use this parameter\
            \ only if the connector supports multiple API versions or if the connector\
            \ type is CustomConnector.</p> <p>To look up how many versions a connector\
            \ supports, use the DescribeConnectors action. In the response, find the\
            \ value that Amazon AppFlow returns for the connectorVersion parameter.</p>\
            \ <p>To look up the connector type, use the DescribeConnectorProfiles\
            \ action. In the response, find the value that Amazon AppFlow returns\
            \ for the connectorType parameter.</p> <p>To look up the API version that\
            \ you specified in a connector profile, use the DescribeConnectorProfiles\
            \ action.</p>"
          maxLength: 256
          pattern: \S+
          type: string
      type: object
    StartFlow_request:
      properties:
        flowName:
          description: ' The specified name of the flow. Spaces are not allowed. Use
            underscores (_) or hyphens (-) only. '
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        clientToken:
          description: "<p>The <code>clientToken</code> parameter is an idempotency\
            \ token. It ensures that your <code>StartFlow</code> request completes\
            \ only once. You choose the value to pass. For example, if you don't receive\
            \ a response from your request, you can safely retry the request with\
            \ the same <code>clientToken</code> parameter value.</p> <p>If you omit\
            \ a <code>clientToken</code> value, the Amazon Web Services SDK that you\
            \ are using inserts a value for you. This way, the SDK can safely retry\
            \ requests multiple times after a network error. You must provide your\
            \ own value for other use cases.</p> <p>If you specify input parameters\
            \ that differ from your first request, an error occurs for flows that\
            \ run on a schedule or based on an event. However, the error doesn't occur\
            \ for flows that run on demand. You set the conditions that initiate your\
            \ flow for the <code>triggerConfig</code> parameter.</p> <p>If you use\
            \ a different value for <code>clientToken</code>, Amazon AppFlow considers\
            \ it a new call to <code>StartFlow</code>. The token is active for 8 hours.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[ -~]+"
          type: string
      required:
      - flowName
      type: object
    UnregisterConnector_request:
      properties:
        connectorLabel:
          description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code>
            in your Amazon Web Services account.
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        forceDelete:
          description: "Indicates whether Amazon AppFlow should unregister the connector,\
            \ even if it is currently in use in one or more connector profiles. The\
            \ default value is false."
          type: boolean
      required:
      - connectorLabel
      type: object
    UpdateConnectorProfile_request:
      properties:
        connectorProfileName:
          description: ' The name of the connector profile and is unique for each
            <code>ConnectorProfile</code> in the Amazon Web Services account. '
          maxLength: 256
          pattern: "[\\w/!@#+=.-]+"
          type: string
        connectionMode:
          description: ' Indicates the connection mode and if it is public or private. '
          enum:
          - Public
          - Private
          type: string
        connectorProfileConfig:
          $ref: '#/components/schemas/CreateConnectorProfile_request_connectorProfileConfig'
        clientToken:
          description: "<p>The <code>clientToken</code> parameter is an idempotency\
            \ token. It ensures that your <code>UpdateConnectorProfile</code> request\
            \ completes only once. You choose the value to pass. For example, if you\
            \ don't receive a response from your request, you can safely retry the\
            \ request with the same <code>clientToken</code> parameter value.</p>\
            \ <p>If you omit a <code>clientToken</code> value, the Amazon Web Services\
            \ SDK that you are using inserts a value for you. This way, the SDK can\
            \ safely retry requests multiple times after a network error. You must\
            \ provide your own value for other use cases.</p> <p>If you specify input\
            \ parameters that differ from your first request, an error occurs. If\
            \ you use a different value for <code>clientToken</code>, Amazon AppFlow\
            \ considers it a new call to <code>UpdateConnectorProfile</code>. The\
            \ token is active for 8 hours.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[ -~]+"
          type: string
      required:
      - connectionMode
      - connectorProfileConfig
      - connectorProfileName
      type: object
    UpdateConnectorRegistration_request:
      properties:
        connectorLabel:
          description: The name of the connector. The name is unique for each connector
            registration in your AWS account.
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        description:
          description: A description about the update that you're applying to the
            connector.
          maxLength: 1024
          pattern: "[\\s\\w/!@#+=.-]*"
          type: string
        connectorProvisioningConfig:
          $ref: '#/components/schemas/RegisterConnector_request_connectorProvisioningConfig'
        clientToken:
          description: "<p>The <code>clientToken</code> parameter is an idempotency\
            \ token. It ensures that your <code>UpdateConnectorRegistration</code>\
            \ request completes only once. You choose the value to pass. For example,\
            \ if you don't receive a response from your request, you can safely retry\
            \ the request with the same <code>clientToken</code> parameter value.</p>\
            \ <p>If you omit a <code>clientToken</code> value, the Amazon Web Services\
            \ SDK that you are using inserts a value for you. This way, the SDK can\
            \ safely retry requests multiple times after a network error. You must\
            \ provide your own value for other use cases.</p> <p>If you specify input\
            \ parameters that differ from your first request, an error occurs. If\
            \ you use a different value for <code>clientToken</code>, Amazon AppFlow\
            \ considers it a new call to <code>UpdateConnectorRegistration</code>.\
            \ The token is active for 8 hours.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[ -~]+"
          type: string
      required:
      - connectorLabel
      type: object
    UpdateFlow_request:
      properties:
        flowName:
          description: ' The specified name of the flow. Spaces are not allowed. Use
            underscores (_) or hyphens (-) only. '
          maxLength: 256
          pattern: "[a-zA-Z0-9][\\w!@#.-]+"
          type: string
        description:
          description: ' A description of the flow. '
          maxLength: 2048
          pattern: "[\\w!@#\\-.?,\\s]*"
          type: string
        triggerConfig:
          $ref: '#/components/schemas/CreateFlow_request_triggerConfig'
        sourceFlowConfig:
          $ref: '#/components/schemas/CreateFlow_request_sourceFlowConfig'
        destinationFlowConfigList:
          description: ' The configuration that controls how Amazon AppFlow transfers
            data to the destination connector. '
          items:
            $ref: '#/components/schemas/DestinationFlowConfig'
          type: array
        tasks:
          description: ' A list of tasks that Amazon AppFlow performs while transferring
            the data in the flow run. '
          items:
            $ref: '#/components/schemas/Task'
          type: array
        metadataCatalogConfig:
          $ref: '#/components/schemas/CreateFlow_request_metadataCatalogConfig'
        clientToken:
          description: "<p>The <code>clientToken</code> parameter is an idempotency\
            \ token. It ensures that your <code>UpdateFlow</code> request completes\
            \ only once. You choose the value to pass. For example, if you don't receive\
            \ a response from your request, you can safely retry the request with\
            \ the same <code>clientToken</code> parameter value.</p> <p>If you omit\
            \ a <code>clientToken</code> value, the Amazon Web Services SDK that you\
            \ are using inserts a value for you. This way, the SDK can safely retry\
            \ requests multiple times after a network error. You must provide your\
            \ own value for other use cases.</p> <p>If you specify input parameters\
            \ that differ from your first request, an error occurs. If you use a different\
            \ value for <code>clientToken</code>, Amazon AppFlow considers it a new\
            \ call to <code>UpdateFlow</code>. The token is active for 8 hours.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[ -~]+"
          type: string
      required:
      - destinationFlowConfigList
      - flowName
      - sourceFlowConfig
      - tasks
      - triggerConfig
      type: object
    ConnectorProfileProperties_Datadog:
      allOf:
      - $ref: '#/components/schemas/DatadogConnectorProfileProperties'
      - description: ' The connector-specific properties required by Datadog. '
      example:
        instanceUrl: ""
    ConnectorProfileProperties_Dynatrace:
      allOf:
      - $ref: '#/components/schemas/DynatraceConnectorProfileProperties'
      - description: ' The connector-specific properties required by Dynatrace. '
      example:
        instanceUrl: ""
    ConnectorProfileProperties_InforNexus:
      allOf:
      - $ref: '#/components/schemas/InforNexusConnectorProfileProperties'
      - description: ' The connector-specific properties required by Infor Nexus. '
      example:
        instanceUrl: ""
    ConnectorProfileProperties_Marketo:
      allOf:
      - $ref: '#/components/schemas/MarketoConnectorProfileProperties'
      - description: ' The connector-specific properties required by Marketo. '
      example:
        instanceUrl: ""
    ConnectorProfileProperties_Redshift:
      allOf:
      - $ref: '#/components/schemas/RedshiftConnectorProfileProperties'
      - description: ' The connector-specific properties required by Amazon Redshift. '
      example:
        bucketName: ""
        databaseName: ""
        roleArn: ""
        bucketPrefix: ""
        workgroupName: ""
        clusterIdentifier: ""
        isRedshiftServerless: ""
        dataApiRoleArn: ""
        databaseUrl: ""
    ConnectorProfileProperties_Salesforce:
      allOf:
      - $ref: '#/components/schemas/SalesforceConnectorProfileProperties'
      - description: ' The connector-specific properties required by Salesforce. '
      example:
        isSandboxEnvironment: ""
        usePrivateLinkForMetadataAndAuthorization: ""
        instanceUrl: ""
    ConnectorProfileProperties_ServiceNow:
      allOf:
      - $ref: '#/components/schemas/ServiceNowConnectorProfileProperties'
      - description: ' The connector-specific properties required by serviceNow. '
      example:
        instanceUrl: ""
    ConnectorProfileProperties_Slack:
      allOf:
      - $ref: '#/components/schemas/SlackConnectorProfileProperties'
      - description: ' The connector-specific properties required by Slack. '
      example:
        instanceUrl: ""
    ConnectorProfileProperties_Snowflake:
      allOf:
      - $ref: '#/components/schemas/SnowflakeConnectorProfileProperties'
      - description: ' The connector-specific properties required by Snowflake. '
      example:
        bucketName: ""
        privateLinkServiceName: ""
        stage: ""
        accountName: ""
        bucketPrefix: ""
        warehouse: ""
        region: ""
    ConnectorProfileProperties_Veeva:
      allOf:
      - $ref: '#/components/schemas/VeevaConnectorProfileProperties'
      - description: ' The connector-specific properties required by Veeva. '
      example:
        instanceUrl: ""
    ConnectorProfileProperties_Zendesk:
      allOf:
      - $ref: '#/components/schemas/ZendeskConnectorProfileProperties'
      - description: ' The connector-specific properties required by Zendesk. '
      example:
        instanceUrl: ""
    ConnectorProfileProperties_CustomConnector:
      allOf:
      - $ref: '#/components/schemas/CustomConnectorProfileProperties'
      - description: The properties required by the custom connector.
      example:
        oAuth2Properties:
          tokenUrl: ""
          tokenUrlCustomProperties: ""
          oAuth2GrantType: ""
        profileProperties: ""
    ConnectorProfileProperties_Pardot:
      allOf:
      - $ref: '#/components/schemas/PardotConnectorProfileProperties'
      - description: The connector-specific properties required by Salesforce Pardot.
      example:
        isSandboxEnvironment: ""
        businessUnitId: ""
        instanceUrl: ""
    ConnectorProfileCredentials_Amplitude:
      allOf:
      - $ref: '#/components/schemas/AmplitudeConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Amplitude. '
      example:
        apiKey: ""
        secretKey: ""
    ConnectorProfileCredentials_Datadog:
      allOf:
      - $ref: '#/components/schemas/DatadogConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Datadog. '
      example:
        apiKey: ""
        applicationKey: ""
    ConnectorProfileCredentials_Dynatrace:
      allOf:
      - $ref: '#/components/schemas/DynatraceConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Dynatrace. '
      example:
        apiToken: ""
    ConnectorProfileCredentials_GoogleAnalytics:
      allOf:
      - $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Google
          Analytics. '
      example:
        clientId: ""
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        clientSecret: ""
        accessToken: ""
        refreshToken: ""
    ConnectorProfileCredentials_Honeycode:
      allOf:
      - $ref: '#/components/schemas/HoneycodeConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Amazon
          Honeycode. '
      example:
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        accessToken: ""
        refreshToken: ""
    ConnectorProfileCredentials_InforNexus:
      allOf:
      - $ref: '#/components/schemas/InforNexusConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Infor
          Nexus. '
      example:
        accessKeyId: ""
        secretAccessKey: ""
        datakey: ""
        userId: ""
    ConnectorProfileCredentials_Marketo:
      allOf:
      - $ref: '#/components/schemas/MarketoConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Marketo. '
      example:
        clientId: ""
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        clientSecret: ""
        accessToken: ""
    ConnectorProfileCredentials_Redshift:
      allOf:
      - $ref: '#/components/schemas/RedshiftConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Amazon
          Redshift. '
      example:
        password: ""
        username: ""
    ConnectorProfileCredentials_Salesforce:
      allOf:
      - $ref: '#/components/schemas/SalesforceConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Salesforce. '
      example:
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        oAuth2GrantType: ""
        jwtToken: ""
        accessToken: ""
        clientCredentialsArn: ""
        refreshToken: ""
    ConnectorProfileCredentials_ServiceNow:
      allOf:
      - $ref: '#/components/schemas/ServiceNowConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using ServiceNow. '
      example:
        password: ""
        username: ""
    ConnectorProfileCredentials_Singular:
      allOf:
      - $ref: '#/components/schemas/SingularConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Singular. '
      example:
        apiKey: ""
    ConnectorProfileCredentials_Slack:
      allOf:
      - $ref: '#/components/schemas/SlackConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Slack. '
      example:
        clientId: ""
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        clientSecret: ""
        accessToken: ""
    ConnectorProfileCredentials_Snowflake:
      allOf:
      - $ref: '#/components/schemas/SnowflakeConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Snowflake. '
      example:
        password: ""
        username: ""
    ConnectorProfileCredentials_Trendmicro:
      allOf:
      - $ref: '#/components/schemas/TrendmicroConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Trend
          Micro. '
      example:
        apiSecretKey: ""
    ConnectorProfileCredentials_Veeva:
      allOf:
      - $ref: '#/components/schemas/VeevaConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Veeva. '
      example:
        password: ""
        username: ""
    ConnectorProfileCredentials_Zendesk:
      allOf:
      - $ref: '#/components/schemas/ZendeskConnectorProfileCredentials'
      - description: ' The connector-specific credentials required when using Zendesk. '
      example:
        clientId: ""
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        clientSecret: ""
        accessToken: ""
    ConnectorProfileCredentials_Pardot:
      allOf:
      - $ref: '#/components/schemas/PardotConnectorProfileCredentials'
      - description: The connector-specific credentials required when using Salesforce
          Pardot.
      example:
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        accessToken: ""
        clientCredentialsArn: ""
        refreshToken: ""
    TriggerProperties_Scheduled:
      allOf:
      - $ref: '#/components/schemas/ScheduledTriggerProperties'
      - description: ' Specifies the configuration details of a schedule-triggered
          flow as defined by the user. '
      example:
        scheduleOffset: ""
        scheduleExpression: ""
        timezone: ""
        flowErrorDeactivationThreshold: ""
        dataPullMode: ""
        firstExecutionFrom: ""
        scheduleStartTime: ""
        scheduleEndTime: ""
    SourceConnectorProperties_Amplitude:
      allOf:
      - $ref: '#/components/schemas/AmplitudeSourceProperties'
      - description: ' Specifies the information that is required for querying Amplitude. '
      example:
        object: ""
    SourceConnectorProperties_Datadog:
      allOf:
      - $ref: '#/components/schemas/DatadogSourceProperties'
      - description: ' Specifies the information that is required for querying Datadog. '
      example:
        object: ""
    SourceConnectorProperties_Dynatrace:
      allOf:
      - $ref: '#/components/schemas/DynatraceSourceProperties'
      - description: ' Specifies the information that is required for querying Dynatrace. '
      example:
        object: ""
    SourceConnectorProperties_GoogleAnalytics:
      allOf:
      - $ref: '#/components/schemas/GoogleAnalyticsSourceProperties'
      - description: ' Specifies the information that is required for querying Google
          Analytics. '
      example:
        object: ""
    SourceConnectorProperties_InforNexus:
      allOf:
      - $ref: '#/components/schemas/InforNexusSourceProperties'
      - description: ' Specifies the information that is required for querying Infor
          Nexus. '
      example:
        object: ""
    SourceConnectorProperties_Marketo:
      allOf:
      - $ref: '#/components/schemas/MarketoSourceProperties'
      - description: ' Specifies the information that is required for querying Marketo. '
      example:
        object: ""
    SourceConnectorProperties_S3:
      allOf:
      - $ref: '#/components/schemas/S3SourceProperties'
      - description: ' Specifies the information that is required for querying Amazon
          S3. '
      example:
        bucketName: ""
        bucketPrefix: ""
        s3InputFormatConfig:
          s3InputFileType: ""
    SourceConnectorProperties_Salesforce:
      allOf:
      - $ref: '#/components/schemas/SalesforceSourceProperties'
      - description: ' Specifies the information that is required for querying Salesforce. '
      example:
        includeDeletedRecords: ""
        enableDynamicFieldUpdate: ""
        object: ""
        dataTransferApi: ""
    SourceConnectorProperties_ServiceNow:
      allOf:
      - $ref: '#/components/schemas/ServiceNowSourceProperties'
      - description: ' Specifies the information that is required for querying ServiceNow. '
      example:
        object: ""
    SourceConnectorProperties_Singular:
      allOf:
      - $ref: '#/components/schemas/SingularSourceProperties'
      - description: ' Specifies the information that is required for querying Singular. '
      example:
        object: ""
    SourceConnectorProperties_Slack:
      allOf:
      - $ref: '#/components/schemas/SlackSourceProperties'
      - description: ' Specifies the information that is required for querying Slack. '
      example:
        object: ""
    SourceConnectorProperties_Trendmicro:
      allOf:
      - $ref: '#/components/schemas/TrendmicroSourceProperties'
      - description: ' Specifies the information that is required for querying Trend
          Micro. '
      example:
        object: ""
    SourceConnectorProperties_Veeva:
      allOf:
      - $ref: '#/components/schemas/VeevaSourceProperties'
      - description: ' Specifies the information that is required for querying Veeva. '
      example:
        includeSourceFiles: ""
        documentType: ""
        includeAllVersions: ""
        includeRenditions: ""
        object: ""
    SourceConnectorProperties_Zendesk:
      allOf:
      - $ref: '#/components/schemas/ZendeskSourceProperties'
      - description: ' Specifies the information that is required for querying Zendesk. '
      example:
        object: ""
    SourceConnectorProperties_Pardot:
      allOf:
      - $ref: '#/components/schemas/PardotSourceProperties'
      - description: Specifies the information that is required for querying Salesforce
          Pardot.
      example:
        object: ""
    DestinationFlowConfig_destinationConnectorProperties:
      allOf:
      - $ref: '#/components/schemas/DestinationConnectorProperties'
      - description: ' This stores the information that is required to query a particular
          connector. '
    Task_connectorOperator:
      allOf:
      - $ref: '#/components/schemas/ConnectorOperator'
      - description: ' The operation to be performed on the provided source fields. '
    DescribeConnectorResponse_connectorConfiguration:
      allOf:
      - $ref: '#/components/schemas/ConnectorConfiguration'
      - description: Configuration info of all the connectors that the user requested.
      example:
        supportedSchedulingFrequencies: ""
        isPrivateLinkEnabled: ""
        registeredBy: ""
        connectorLabel: ""
        supportedApiVersions: ""
        canUseAsDestination: ""
        connectorRuntimeSettings: ""
        supportedWriteOperations: ""
        connectorProvisioningType: ""
        connectorModes: ""
        connectorVersion: ""
        supportedDataTransferApis: ""
        supportedDestinationConnectors: ""
        authenticationConfig:
          isApiKeyAuthSupported: ""
          isCustomAuthSupported: ""
          isOAuth2Supported: ""
          oAuth2Defaults:
            authCodeUrls: ""
            tokenUrls: ""
            oauth2GrantTypesSupported: ""
            oauth2CustomProperties: ""
            oauthScopes: ""
          isBasicAuthSupported: ""
          customAuthConfigs: ""
        canUseAsSource: ""
        connectorType: ""
        isPrivateLinkEndpointUrlRequired: ""
        connectorArn: ""
        registeredAt: ""
        logoURL: ""
        connectorOwner: ""
        supportedTriggerTypes: ""
        supportedOperators: ""
        supportedDataTransferTypes: ""
        connectorName: ""
        connectorDescription: ""
        connectorMetadata:
          Amplitude: ""
          S3: ""
          GoogleAnalytics:
            oAuthScopes: ""
          ServiceNow: ""
          Upsolver: ""
          CustomerProfiles: ""
          SAPOData: "{}"
          Pardot: ""
          Honeycode:
            oAuthScopes: ""
          Veeva: ""
          EventBridge: ""
          Trendmicro: ""
          Datadog: ""
          Marketo: ""
          Redshift: ""
          Singular: ""
          Slack:
            oAuthScopes: ""
          Snowflake:
            supportedRegions: ""
          Dynatrace: ""
          Zendesk:
            oAuthScopes: ""
          InforNexus: ""
          Salesforce:
            oauth2GrantTypesSupported: ""
            oAuthScopes: ""
            dataTransferApis: ""
        connectorProvisioningConfig:
          lambda:
            lambdaArn: ""
    DescribeFlowResponse_sourceFlowConfig:
      allOf:
      - $ref: '#/components/schemas/SourceFlowConfig'
      - description: ' The configuration that controls how Amazon AppFlow retrieves
          data from the source connector. '
      example:
        connectorType: ""
        apiVersion: ""
        connectorProfileName: ""
        incrementalPullConfig:
          datetimeTypeFieldName: ""
        sourceConnectorProperties:
          Amplitude:
            object: ""
          S3:
            bucketName: ""
            bucketPrefix: ""
            s3InputFormatConfig:
              s3InputFileType: ""
          GoogleAnalytics:
            object: ""
          ServiceNow:
            object: ""
          CustomConnector:
            customProperties: ""
            entityName: ""
            dataTransferApi:
              Type: ""
              Name: ""
          SAPOData:
            objectPath: ""
          Pardot:
            object: ""
          Veeva:
            includeSourceFiles: ""
            documentType: ""
            includeAllVersions: ""
            includeRenditions: ""
            object: ""
          Trendmicro:
            object: ""
          Datadog:
            object: ""
          Marketo:
            object: ""
          Singular:
            object: ""
          Slack:
            object: ""
          Dynatrace:
            object: ""
          Zendesk:
            object: ""
          InforNexus:
            object: ""
          Salesforce:
            includeDeletedRecords: ""
            enableDynamicFieldUpdate: ""
            object: ""
            dataTransferApi: ""
    DescribeFlowResponse_lastRunExecutionDetails:
      allOf:
      - $ref: '#/components/schemas/ExecutionDetails'
      - description: ' Describes the details of the most recent flow run. '
      example:
        mostRecentExecutionStatus: ""
        mostRecentExecutionTime: ""
        mostRecentExecutionMessage: ""
    DescribeFlowResponse_triggerConfig:
      allOf:
      - $ref: '#/components/schemas/TriggerConfig'
      - description: ' The trigger settings that determine how and when the flow runs. '
      example:
        triggerProperties:
          Scheduled:
            scheduleOffset: ""
            scheduleExpression: ""
            timezone: ""
            flowErrorDeactivationThreshold: ""
            dataPullMode: ""
            firstExecutionFrom: ""
            scheduleStartTime: ""
            scheduleEndTime: ""
        triggerType: ""
    DescribeFlowResponse_metadataCatalogConfig:
      allOf:
      - $ref: '#/components/schemas/MetadataCatalogConfig'
      - description: "Specifies the configuration that Amazon AppFlow uses when it\
          \ catalogs the data that's transferred by the associated flow. When Amazon\
          \ AppFlow catalogs the data from a flow, it stores metadata in a data catalog."
      example:
        glueDataCatalog:
          databaseName: ""
          tablePrefix: ""
          roleArn: ""
    AuthenticationConfig_oAuth2Defaults:
      allOf:
      - $ref: '#/components/schemas/OAuth2Defaults'
      - description: Contains the default values required for OAuth 2.0 authentication.
      example:
        authCodeUrls: ""
        tokenUrls: ""
        oauth2GrantTypesSupported: ""
        oauth2CustomProperties: ""
        oauthScopes: ""
    ConnectorMetadata_GoogleAnalytics:
      allOf:
      - $ref: '#/components/schemas/GoogleAnalyticsMetadata'
      - description: ' The connector metadata specific to Google Analytics. '
      example:
        oAuthScopes: ""
    ConnectorMetadata_Salesforce:
      allOf:
      - $ref: '#/components/schemas/SalesforceMetadata'
      - description: ' The connector metadata specific to Salesforce. '
      example:
        oauth2GrantTypesSupported: ""
        oAuthScopes: ""
        dataTransferApis: ""
    ConnectorMetadata_Slack:
      allOf:
      - $ref: '#/components/schemas/SlackMetadata'
      - description: ' The connector metadata specific to Slack. '
      example:
        oAuthScopes: ""
    ConnectorMetadata_Snowflake:
      allOf:
      - $ref: '#/components/schemas/SnowflakeMetadata'
      - description: ' The connector metadata specific to Snowflake. '
      example:
        supportedRegions: ""
    ConnectorMetadata_Zendesk:
      allOf:
      - $ref: '#/components/schemas/ZendeskMetadata'
      - description: ' The connector metadata specific to Zendesk. '
      example:
        oAuthScopes: ""
    ConnectorMetadata_Honeycode:
      allOf:
      - $ref: '#/components/schemas/HoneycodeMetadata'
      - description: ' The connector metadata specific to Amazon Honeycode. '
      example:
        oAuthScopes: ""
    ConnectorConfiguration_connectorMetadata:
      allOf:
      - $ref: '#/components/schemas/ConnectorMetadata'
      - description: " Specifies connector-specific metadata such as <code>oAuthScopes</code>,\
          \ <code>supportedRegions</code>, <code>privateLinkServiceUrl</code>, and\
          \ so on. "
      example:
        Amplitude: ""
        S3: ""
        GoogleAnalytics:
          oAuthScopes: ""
        ServiceNow: ""
        Upsolver: ""
        CustomerProfiles: ""
        SAPOData: "{}"
        Pardot: ""
        Honeycode:
          oAuthScopes: ""
        Veeva: ""
        EventBridge: ""
        Trendmicro: ""
        Datadog: ""
        Marketo: ""
        Redshift: ""
        Singular: ""
        Slack:
          oAuthScopes: ""
        Snowflake:
          supportedRegions: ""
        Dynatrace: ""
        Zendesk:
          oAuthScopes: ""
        InforNexus: ""
        Salesforce:
          oauth2GrantTypesSupported: ""
          oAuthScopes: ""
          dataTransferApis: ""
    ConnectorConfiguration_authenticationConfig:
      allOf:
      - $ref: '#/components/schemas/AuthenticationConfig'
      - description: The authentication config required for the connector.
      example:
        isApiKeyAuthSupported: ""
        isCustomAuthSupported: ""
        isOAuth2Supported: ""
        oAuth2Defaults:
          authCodeUrls: ""
          tokenUrls: ""
          oauth2GrantTypesSupported: ""
          oauth2CustomProperties: ""
          oauthScopes: ""
        isBasicAuthSupported: ""
        customAuthConfigs: ""
    ConnectorConfiguration_connectorProvisioningConfig:
      allOf:
      - $ref: '#/components/schemas/ConnectorProvisioningConfig'
      - description: The configuration required for registering the connector.
      example:
        lambda:
          lambdaArn: ""
    SupportedFieldTypeDetails_v1:
      allOf:
      - $ref: '#/components/schemas/FieldTypeDetails'
      - description: " The initial supported version for <code>fieldType</code>. If\
          \ this is later changed to a different version, v2 will be introduced. "
    ConnectorEntityField_supportedFieldTypeDetails:
      allOf:
      - $ref: '#/components/schemas/SupportedFieldTypeDetails'
      - description: " Contains details regarding the supported <code>FieldType</code>,\
          \ including the corresponding <code>filterOperators</code> and <code>supportedValues</code>. "
    ConnectorEntityField_sourceProperties:
      allOf:
      - $ref: '#/components/schemas/SourceFieldProperties'
      - description: ' The properties that can be applied to a field when the connector
          is being used as a source. '
    ConnectorEntityField_destinationProperties:
      allOf:
      - $ref: '#/components/schemas/DestinationFieldProperties'
      - description: ' The properties applied to a field when the connector is being
          used as a destination. '
    ConnectorProfile_privateConnectionProvisioningState:
      allOf:
      - $ref: '#/components/schemas/PrivateConnectionProvisioningState'
      - description: ' Specifies the private connection provisioning state. '
    GoogleAnalyticsConnectorProfileCredentials_oAuthRequest:
      allOf:
      - $ref: '#/components/schemas/ConnectorOAuthRequest'
      - description: ' The OAuth requirement needed to request security tokens from
          the connector endpoint. '
      example:
        redirectUri: ""
        authCode: ""
    SAPODataConnectorProfileCredentials_basicAuthCredentials:
      allOf:
      - $ref: '#/components/schemas/BasicAuthCredentials'
      - description: ' The SAPOData basic authentication credentials. '
      example:
        password: ""
        username: ""
    SAPODataConnectorProfileCredentials_oAuthCredentials:
      allOf:
      - $ref: '#/components/schemas/OAuthCredentials'
      - description: ' The SAPOData OAuth type authentication credentials. '
      example:
        clientId: ""
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        clientSecret: ""
        accessToken: ""
        refreshToken: ""
    CustomConnectorProfileCredentials_basic:
      allOf:
      - $ref: '#/components/schemas/BasicAuthCredentials'
      - description: The basic credentials that are required for the authentication
          of the user.
      example:
        password: ""
        username: ""
    CustomConnectorProfileCredentials_oauth2:
      allOf:
      - $ref: '#/components/schemas/OAuth2Credentials'
      - description: The OAuth 2.0 credentials required for the authentication of
          the user.
      example:
        clientId: ""
        oAuthRequest:
          redirectUri: ""
          authCode: ""
        clientSecret: ""
        accessToken: ""
        refreshToken: ""
    CustomConnectorProfileCredentials_apiKey:
      allOf:
      - $ref: '#/components/schemas/ApiKeyCredentials'
      - description: The API keys required for the authentication of the user.
      example:
        apiKey: ""
        apiSecretKey: ""
    CustomConnectorProfileCredentials_custom:
      allOf:
      - $ref: '#/components/schemas/CustomAuthCredentials'
      - description: "If the connector uses the custom authentication mechanism, this\
          \ holds the required credentials."
      example:
        customAuthenticationType: ""
        credentialsMap: ""
    SAPODataConnectorProfileProperties_oAuthProperties:
      allOf:
      - $ref: '#/components/schemas/OAuthProperties'
      - description: ' The SAPOData OAuth properties required for OAuth type authentication. '
      example:
        tokenUrl: ""
        oAuthScopes: ""
        authCodeUrl: ""
    CreateConnectorProfileRequest_connectorProfileConfig:
      allOf:
      - $ref: '#/components/schemas/ConnectorProfileConfig'
      - description: ' Defines the connector-specific configuration and credentials. '
      example:
        connectorProfileCredentials:
          Amplitude:
            apiKey: ""
            secretKey: ""
          GoogleAnalytics:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
            refreshToken: ""
          ServiceNow:
            password: ""
            username: ""
          CustomConnector:
            apiKey:
              apiKey: ""
              apiSecretKey: ""
            custom:
              customAuthenticationType: ""
              credentialsMap: ""
            authenticationType: ""
            basic:
              password: ""
              username: ""
            oauth2:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
              refreshToken: ""
          SAPOData:
            basicAuthCredentials:
              password: ""
              username: ""
            oAuthCredentials:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
              refreshToken: ""
          Pardot:
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            accessToken: ""
            clientCredentialsArn: ""
            refreshToken: ""
          Honeycode:
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            accessToken: ""
            refreshToken: ""
          Veeva:
            password: ""
            username: ""
          Trendmicro:
            apiSecretKey: ""
          Datadog:
            apiKey: ""
            applicationKey: ""
          Marketo:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
          Redshift:
            password: ""
            username: ""
          Singular:
            apiKey: ""
          Slack:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
          Snowflake:
            password: ""
            username: ""
          Dynatrace:
            apiToken: ""
          Zendesk:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
          InforNexus:
            accessKeyId: ""
            secretAccessKey: ""
            datakey: ""
            userId: ""
          Salesforce:
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            oAuth2GrantType: ""
            jwtToken: ""
            accessToken: ""
            clientCredentialsArn: ""
            refreshToken: ""
        connectorProfileProperties:
          Amplitude: ""
          GoogleAnalytics: ""
          ServiceNow:
            instanceUrl: ""
          CustomConnector:
            oAuth2Properties:
              tokenUrl: ""
              tokenUrlCustomProperties: ""
              oAuth2GrantType: ""
            profileProperties: ""
          SAPOData:
            privateLinkServiceName: ""
            logonLanguage: ""
            oAuthProperties:
              tokenUrl: ""
              oAuthScopes: ""
              authCodeUrl: ""
            disableSSO: ""
            applicationHostUrl: ""
            applicationServicePath: ""
            clientNumber: ""
            portNumber: ""
          Pardot:
            isSandboxEnvironment: ""
            businessUnitId: ""
            instanceUrl: ""
          Honeycode: ""
          Veeva:
            instanceUrl: ""
          Trendmicro: ""
          Datadog:
            instanceUrl: ""
          Marketo:
            instanceUrl: ""
          Redshift:
            bucketName: ""
            databaseName: ""
            roleArn: ""
            bucketPrefix: ""
            workgroupName: ""
            clusterIdentifier: ""
            isRedshiftServerless: ""
            dataApiRoleArn: ""
            databaseUrl: ""
          Singular: ""
          Slack:
            instanceUrl: ""
          Snowflake:
            bucketName: ""
            privateLinkServiceName: ""
            stage: ""
            accountName: ""
            bucketPrefix: ""
            warehouse: ""
            region: ""
          Dynatrace:
            instanceUrl: ""
          Zendesk:
            instanceUrl: ""
          InforNexus:
            instanceUrl: ""
          Salesforce:
            isSandboxEnvironment: ""
            usePrivateLinkForMetadataAndAuthorization: ""
            instanceUrl: ""
    CustomConnectorDestinationProperties_errorHandlingConfig:
      allOf:
      - $ref: '#/components/schemas/ErrorHandlingConfig'
      - description: The settings that determine how Amazon AppFlow handles an error
          when placing data in the custom connector as destination.
    CustomConnectorSourceProperties_dataTransferApi:
      allOf:
      - $ref: '#/components/schemas/DataTransferApi'
      - description: The API of the connector application that Amazon AppFlow uses
          to transfer your data.
      example:
        Type: ""
        Name: ""
    RedshiftDestinationProperties_errorHandlingConfig:
      allOf:
      - $ref: '#/components/schemas/ErrorHandlingConfig'
      - description: " The settings that determine how Amazon AppFlow handles an error\
          \ when placing data in the Amazon Redshift destination. For example, this\
          \ setting would determine if the flow should fail after one insertion error,\
          \ or continue and attempt to insert every record regardless of the initial\
          \ failure. <code>ErrorHandlingConfig</code> is a part of the destination\
          \ connector details. "
    SalesforceDestinationProperties_errorHandlingConfig:
      allOf:
      - $ref: '#/components/schemas/ErrorHandlingConfig'
      - description: " The settings that determine how Amazon AppFlow handles an error\
          \ when placing data in the Salesforce destination. For example, this setting\
          \ would determine if the flow should fail after one insertion error, or\
          \ continue and attempt to insert every record regardless of the initial\
          \ failure. <code>ErrorHandlingConfig</code> is a part of the destination\
          \ connector details. "
    SnowflakeDestinationProperties_errorHandlingConfig:
      allOf:
      - $ref: '#/components/schemas/ErrorHandlingConfig'
      - description: " The settings that determine how Amazon AppFlow handles an error\
          \ when placing data in the Snowflake destination. For example, this setting\
          \ would determine if the flow should fail after one insertion error, or\
          \ continue and attempt to insert every record regardless of the initial\
          \ failure. <code>ErrorHandlingConfig</code> is a part of the destination\
          \ connector details. "
    UpsolverDestinationProperties_s3OutputFormatConfig:
      allOf:
      - $ref: '#/components/schemas/UpsolverS3OutputFormatConfig'
      - description: ' The configuration that determines how data is formatted when
          Upsolver is used as the flow destination. '
    SAPODataDestinationProperties_successResponseHandlingConfig:
      allOf:
      - $ref: '#/components/schemas/SuccessResponseHandlingConfig'
      - description: "<p>Determines how Amazon AppFlow handles the success response\
          \ that it gets from the connector after placing data.</p> <p>For example,\
          \ this setting would determine where to write the response from a destination\
          \ connector upon a successful insert operation.</p>"
    DestinationConnectorProperties_Redshift:
      allOf:
      - $ref: '#/components/schemas/RedshiftDestinationProperties'
      - description: ' The properties required to query Amazon Redshift. '
    DestinationConnectorProperties_S3:
      allOf:
      - $ref: '#/components/schemas/S3DestinationProperties'
      - description: ' The properties required to query Amazon S3. '
    DestinationConnectorProperties_Salesforce:
      allOf:
      - $ref: '#/components/schemas/SalesforceDestinationProperties'
      - description: ' The properties required to query Salesforce. '
    DestinationConnectorProperties_Snowflake:
      allOf:
      - $ref: '#/components/schemas/SnowflakeDestinationProperties'
      - description: ' The properties required to query Snowflake. '
    DestinationConnectorProperties_EventBridge:
      allOf:
      - $ref: '#/components/schemas/EventBridgeDestinationProperties'
      - description: ' The properties required to query Amazon EventBridge. '
    DestinationConnectorProperties_Upsolver:
      allOf:
      - $ref: '#/components/schemas/UpsolverDestinationProperties'
      - description: ' The properties required to query Upsolver. '
    DestinationConnectorProperties_Honeycode:
      allOf:
      - $ref: '#/components/schemas/HoneycodeDestinationProperties'
      - description: ' The properties required to query Amazon Honeycode. '
    DestinationConnectorProperties_CustomerProfiles:
      allOf:
      - $ref: '#/components/schemas/CustomerProfilesDestinationProperties'
      - description: ' The properties required to query Amazon Connect Customer Profiles. '
    DestinationConnectorProperties_Zendesk:
      allOf:
      - $ref: '#/components/schemas/ZendeskDestinationProperties'
      - description: The properties required to query Zendesk.
    DestinationConnectorProperties_Marketo:
      allOf:
      - $ref: '#/components/schemas/MarketoDestinationProperties'
      - description: The properties required to query Marketo.
    DestinationConnectorProperties_CustomConnector:
      allOf:
      - $ref: '#/components/schemas/CustomConnectorDestinationProperties'
      - description: The properties that are required to query the custom Connector.
    DestinationConnectorProperties_SAPOData:
      allOf:
      - $ref: '#/components/schemas/SAPODataDestinationProperties'
      - description: The properties required to query SAPOData.
    ExecutionResult_errorInfo:
      allOf:
      - $ref: '#/components/schemas/ErrorInfo'
      - description: ' Provides any error message information related to the flow
          run. '
    ExecutionRecord_executionResult:
      allOf:
      - $ref: '#/components/schemas/ExecutionResult'
      - description: ' Describes the result of the given flow run. '
    FieldTypeDetails_fieldValueRange:
      allOf:
      - $ref: '#/components/schemas/Range'
      - description: The range of values this field can hold.
    FieldTypeDetails_fieldLengthRange:
      allOf:
      - $ref: '#/components/schemas/Range'
      - description: This is the allowable length range for this field's value.
    MetadataCatalogDetail_tableRegistrationOutput:
      allOf:
      - $ref: '#/components/schemas/RegistrationOutput'
      - description: Describes the status of the attempt from Amazon AppFlow to register
          the metadata table with the metadata catalog. Amazon AppFlow creates or
          updates this table for the associated flow run.
    MetadataCatalogDetail_partitionRegistrationOutput:
      allOf:
      - $ref: '#/components/schemas/RegistrationOutput'
      - description: "Describes the status of the attempt from Amazon AppFlow to register\
          \ the data partitions with the metadata catalog. The data partitions organize\
          \ the flow output into a hierarchical path, such as a folder path in an\
          \ S3 bucket. Amazon AppFlow creates the partitions (if they don't already\
          \ exist) based on your flow configuration."
    RegisterConnectorRequest_connectorProvisioningConfig:
      allOf:
      - $ref: '#/components/schemas/ConnectorProvisioningConfig'
      - description: The provisioning type of the connector. Currently the only supported
          value is LAMBDA.
      example:
        lambda:
          lambdaArn: ""
    S3OutputFormatConfig_prefixConfig:
      allOf:
      - $ref: '#/components/schemas/PrefixConfig'
      - description: ' Determines the prefix that Amazon AppFlow applies to the folder
          name in the Amazon S3 bucket. You can name folders according to the flow
          frequency and date. '
    UpdateConnectorProfileRequest_connectorProfileConfig:
      allOf:
      - $ref: '#/components/schemas/ConnectorProfileConfig'
      - description: ' Defines the connector-specific profile configuration and credentials. '
      example:
        connectorProfileCredentials:
          Amplitude:
            apiKey: ""
            secretKey: ""
          GoogleAnalytics:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
            refreshToken: ""
          ServiceNow:
            password: ""
            username: ""
          CustomConnector:
            apiKey:
              apiKey: ""
              apiSecretKey: ""
            custom:
              customAuthenticationType: ""
              credentialsMap: ""
            authenticationType: ""
            basic:
              password: ""
              username: ""
            oauth2:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
              refreshToken: ""
          SAPOData:
            basicAuthCredentials:
              password: ""
              username: ""
            oAuthCredentials:
              clientId: ""
              oAuthRequest:
                redirectUri: ""
                authCode: ""
              clientSecret: ""
              accessToken: ""
              refreshToken: ""
          Pardot:
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            accessToken: ""
            clientCredentialsArn: ""
            refreshToken: ""
          Honeycode:
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            accessToken: ""
            refreshToken: ""
          Veeva:
            password: ""
            username: ""
          Trendmicro:
            apiSecretKey: ""
          Datadog:
            apiKey: ""
            applicationKey: ""
          Marketo:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
          Redshift:
            password: ""
            username: ""
          Singular:
            apiKey: ""
          Slack:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
          Snowflake:
            password: ""
            username: ""
          Dynatrace:
            apiToken: ""
          Zendesk:
            clientId: ""
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            clientSecret: ""
            accessToken: ""
          InforNexus:
            accessKeyId: ""
            secretAccessKey: ""
            datakey: ""
            userId: ""
          Salesforce:
            oAuthRequest:
              redirectUri: ""
              authCode: ""
            oAuth2GrantType: ""
            jwtToken: ""
            accessToken: ""
            clientCredentialsArn: ""
            refreshToken: ""
        connectorProfileProperties:
          Amplitude: ""
          GoogleAnalytics: ""
          ServiceNow:
            instanceUrl: ""
          CustomConnector:
            oAuth2Properties:
              tokenUrl: ""
              tokenUrlCustomProperties: ""
              oAuth2GrantType: ""
            profileProperties: ""
          SAPOData:
            privateLinkServiceName: ""
            logonLanguage: ""
            oAuthProperties:
              tokenUrl: ""
              oAuthScopes: ""
              authCodeUrl: ""
            disableSSO: ""
            applicationHostUrl: ""
            applicationServicePath: ""
            clientNumber: ""
            portNumber: ""
          Pardot:
            isSandboxEnvironment: ""
            businessUnitId: ""
            instanceUrl: ""
          Honeycode: ""
          Veeva:
            instanceUrl: ""
          Trendmicro: ""
          Datadog:
            instanceUrl: ""
          Marketo:
            instanceUrl: ""
          Redshift:
            bucketName: ""
            databaseName: ""
            roleArn: ""
            bucketPrefix: ""
            workgroupName: ""
            clusterIdentifier: ""
            isRedshiftServerless: ""
            dataApiRoleArn: ""
            databaseUrl: ""
          Singular: ""
          Slack:
            instanceUrl: ""
          Snowflake:
            bucketName: ""
            privateLinkServiceName: ""
            stage: ""
            accountName: ""
            bucketPrefix: ""
            warehouse: ""
            region: ""
          Dynatrace:
            instanceUrl: ""
          Zendesk:
            instanceUrl: ""
          InforNexus:
            instanceUrl: ""
          Salesforce:
            isSandboxEnvironment: ""
            usePrivateLinkForMetadataAndAuthorization: ""
            instanceUrl: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

