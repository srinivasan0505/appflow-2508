/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConnectorConfigurationAuthenticationConfig;
import org.openapitools.client.model.ConnectorConfigurationConnectorMetadata;
import org.openapitools.client.model.ConnectorConfigurationConnectorProvisioningConfig;
import org.openapitools.client.model.ConnectorProvisioningType;
import org.openapitools.client.model.ConnectorType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeConnectorResponseConnectorConfiguration
 */
public class DescribeConnectorResponseConnectorConfigurationTest {
    private final DescribeConnectorResponseConnectorConfiguration model = new DescribeConnectorResponseConnectorConfiguration();

    /**
     * Model tests for DescribeConnectorResponseConnectorConfiguration
     */
    @Test
    public void testDescribeConnectorResponseConnectorConfiguration() {
        // TODO: test DescribeConnectorResponseConnectorConfiguration
    }

    /**
     * Test the property 'canUseAsSource'
     */
    @Test
    public void canUseAsSourceTest() {
        // TODO: test canUseAsSource
    }

    /**
     * Test the property 'canUseAsDestination'
     */
    @Test
    public void canUseAsDestinationTest() {
        // TODO: test canUseAsDestination
    }

    /**
     * Test the property 'supportedDestinationConnectors'
     */
    @Test
    public void supportedDestinationConnectorsTest() {
        // TODO: test supportedDestinationConnectors
    }

    /**
     * Test the property 'supportedSchedulingFrequencies'
     */
    @Test
    public void supportedSchedulingFrequenciesTest() {
        // TODO: test supportedSchedulingFrequencies
    }

    /**
     * Test the property 'isPrivateLinkEnabled'
     */
    @Test
    public void isPrivateLinkEnabledTest() {
        // TODO: test isPrivateLinkEnabled
    }

    /**
     * Test the property 'isPrivateLinkEndpointUrlRequired'
     */
    @Test
    public void isPrivateLinkEndpointUrlRequiredTest() {
        // TODO: test isPrivateLinkEndpointUrlRequired
    }

    /**
     * Test the property 'supportedTriggerTypes'
     */
    @Test
    public void supportedTriggerTypesTest() {
        // TODO: test supportedTriggerTypes
    }

    /**
     * Test the property 'connectorMetadata'
     */
    @Test
    public void connectorMetadataTest() {
        // TODO: test connectorMetadata
    }

    /**
     * Test the property 'connectorType'
     */
    @Test
    public void connectorTypeTest() {
        // TODO: test connectorType
    }

    /**
     * Test the property 'connectorLabel'
     */
    @Test
    public void connectorLabelTest() {
        // TODO: test connectorLabel
    }

    /**
     * Test the property 'connectorDescription'
     */
    @Test
    public void connectorDescriptionTest() {
        // TODO: test connectorDescription
    }

    /**
     * Test the property 'connectorOwner'
     */
    @Test
    public void connectorOwnerTest() {
        // TODO: test connectorOwner
    }

    /**
     * Test the property 'connectorName'
     */
    @Test
    public void connectorNameTest() {
        // TODO: test connectorName
    }

    /**
     * Test the property 'connectorVersion'
     */
    @Test
    public void connectorVersionTest() {
        // TODO: test connectorVersion
    }

    /**
     * Test the property 'connectorArn'
     */
    @Test
    public void connectorArnTest() {
        // TODO: test connectorArn
    }

    /**
     * Test the property 'connectorModes'
     */
    @Test
    public void connectorModesTest() {
        // TODO: test connectorModes
    }

    /**
     * Test the property 'authenticationConfig'
     */
    @Test
    public void authenticationConfigTest() {
        // TODO: test authenticationConfig
    }

    /**
     * Test the property 'connectorRuntimeSettings'
     */
    @Test
    public void connectorRuntimeSettingsTest() {
        // TODO: test connectorRuntimeSettings
    }

    /**
     * Test the property 'supportedApiVersions'
     */
    @Test
    public void supportedApiVersionsTest() {
        // TODO: test supportedApiVersions
    }

    /**
     * Test the property 'supportedOperators'
     */
    @Test
    public void supportedOperatorsTest() {
        // TODO: test supportedOperators
    }

    /**
     * Test the property 'supportedWriteOperations'
     */
    @Test
    public void supportedWriteOperationsTest() {
        // TODO: test supportedWriteOperations
    }

    /**
     * Test the property 'connectorProvisioningType'
     */
    @Test
    public void connectorProvisioningTypeTest() {
        // TODO: test connectorProvisioningType
    }

    /**
     * Test the property 'connectorProvisioningConfig'
     */
    @Test
    public void connectorProvisioningConfigTest() {
        // TODO: test connectorProvisioningConfig
    }

    /**
     * Test the property 'logoURL'
     */
    @Test
    public void logoURLTest() {
        // TODO: test logoURL
    }

    /**
     * Test the property 'registeredAt'
     */
    @Test
    public void registeredAtTest() {
        // TODO: test registeredAt
    }

    /**
     * Test the property 'registeredBy'
     */
    @Test
    public void registeredByTest() {
        // TODO: test registeredBy
    }

    /**
     * Test the property 'supportedDataTransferTypes'
     */
    @Test
    public void supportedDataTransferTypesTest() {
        // TODO: test supportedDataTransferTypes
    }

    /**
     * Test the property 'supportedDataTransferApis'
     */
    @Test
    public void supportedDataTransferApisTest() {
        // TODO: test supportedDataTransferApis
    }

}
