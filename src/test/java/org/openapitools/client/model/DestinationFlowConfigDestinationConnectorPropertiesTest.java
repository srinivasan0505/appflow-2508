/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DestinationConnectorPropertiesCustomConnector;
import org.openapitools.client.model.DestinationConnectorPropertiesCustomerProfiles;
import org.openapitools.client.model.DestinationConnectorPropertiesEventBridge;
import org.openapitools.client.model.DestinationConnectorPropertiesHoneycode;
import org.openapitools.client.model.DestinationConnectorPropertiesMarketo;
import org.openapitools.client.model.DestinationConnectorPropertiesRedshift;
import org.openapitools.client.model.DestinationConnectorPropertiesS3;
import org.openapitools.client.model.DestinationConnectorPropertiesSAPOData;
import org.openapitools.client.model.DestinationConnectorPropertiesSalesforce;
import org.openapitools.client.model.DestinationConnectorPropertiesSnowflake;
import org.openapitools.client.model.DestinationConnectorPropertiesUpsolver;
import org.openapitools.client.model.DestinationConnectorPropertiesZendesk;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DestinationFlowConfigDestinationConnectorProperties
 */
public class DestinationFlowConfigDestinationConnectorPropertiesTest {
    private final DestinationFlowConfigDestinationConnectorProperties model = new DestinationFlowConfigDestinationConnectorProperties();

    /**
     * Model tests for DestinationFlowConfigDestinationConnectorProperties
     */
    @Test
    public void testDestinationFlowConfigDestinationConnectorProperties() {
        // TODO: test DestinationFlowConfigDestinationConnectorProperties
    }

    /**
     * Test the property 'redshift'
     */
    @Test
    public void redshiftTest() {
        // TODO: test redshift
    }

    /**
     * Test the property 'S3'
     */
    @Test
    public void S3Test() {
        // TODO: test S3
    }

    /**
     * Test the property 'salesforce'
     */
    @Test
    public void salesforceTest() {
        // TODO: test salesforce
    }

    /**
     * Test the property 'snowflake'
     */
    @Test
    public void snowflakeTest() {
        // TODO: test snowflake
    }

    /**
     * Test the property 'eventBridge'
     */
    @Test
    public void eventBridgeTest() {
        // TODO: test eventBridge
    }

    /**
     * Test the property 'lookoutMetrics'
     */
    @Test
    public void lookoutMetricsTest() {
        // TODO: test lookoutMetrics
    }

    /**
     * Test the property 'upsolver'
     */
    @Test
    public void upsolverTest() {
        // TODO: test upsolver
    }

    /**
     * Test the property 'honeycode'
     */
    @Test
    public void honeycodeTest() {
        // TODO: test honeycode
    }

    /**
     * Test the property 'customerProfiles'
     */
    @Test
    public void customerProfilesTest() {
        // TODO: test customerProfiles
    }

    /**
     * Test the property 'zendesk'
     */
    @Test
    public void zendeskTest() {
        // TODO: test zendesk
    }

    /**
     * Test the property 'marketo'
     */
    @Test
    public void marketoTest() {
        // TODO: test marketo
    }

    /**
     * Test the property 'customConnector'
     */
    @Test
    public void customConnectorTest() {
        // TODO: test customConnector
    }

    /**
     * Test the property 'saPOData'
     */
    @Test
    public void saPODataTest() {
        // TODO: test saPOData
    }

}
