/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ConnectorEntityFieldDestinationProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:42:27.578242+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class ConnectorEntityFieldDestinationProperties {
  public static final String SERIALIZED_NAME_IS_CREATABLE = "isCreatable";
  @SerializedName(SERIALIZED_NAME_IS_CREATABLE)
  @javax.annotation.Nullable
  private Boolean isCreatable;

  public static final String SERIALIZED_NAME_IS_NULLABLE = "isNullable";
  @SerializedName(SERIALIZED_NAME_IS_NULLABLE)
  @javax.annotation.Nullable
  private Boolean isNullable;

  public static final String SERIALIZED_NAME_IS_UPSERTABLE = "isUpsertable";
  @SerializedName(SERIALIZED_NAME_IS_UPSERTABLE)
  @javax.annotation.Nullable
  private Boolean isUpsertable;

  public static final String SERIALIZED_NAME_IS_UPDATABLE = "isUpdatable";
  @SerializedName(SERIALIZED_NAME_IS_UPDATABLE)
  @javax.annotation.Nullable
  private Boolean isUpdatable;

  public static final String SERIALIZED_NAME_IS_DEFAULTED_ON_CREATE = "isDefaultedOnCreate";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULTED_ON_CREATE)
  @javax.annotation.Nullable
  private Boolean isDefaultedOnCreate;

  public static final String SERIALIZED_NAME_SUPPORTED_WRITE_OPERATIONS = "supportedWriteOperations";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_WRITE_OPERATIONS)
  @javax.annotation.Nullable
  private List supportedWriteOperations;

  public ConnectorEntityFieldDestinationProperties() {
  }

  public ConnectorEntityFieldDestinationProperties isCreatable(@javax.annotation.Nullable Boolean isCreatable) {
    this.isCreatable = isCreatable;
    return this;
  }

  /**
   * Get isCreatable
   * @return isCreatable
   */
  @javax.annotation.Nullable
  public Boolean getIsCreatable() {
    return isCreatable;
  }

  public void setIsCreatable(@javax.annotation.Nullable Boolean isCreatable) {
    this.isCreatable = isCreatable;
  }


  public ConnectorEntityFieldDestinationProperties isNullable(@javax.annotation.Nullable Boolean isNullable) {
    this.isNullable = isNullable;
    return this;
  }

  /**
   * Get isNullable
   * @return isNullable
   */
  @javax.annotation.Nullable
  public Boolean getIsNullable() {
    return isNullable;
  }

  public void setIsNullable(@javax.annotation.Nullable Boolean isNullable) {
    this.isNullable = isNullable;
  }


  public ConnectorEntityFieldDestinationProperties isUpsertable(@javax.annotation.Nullable Boolean isUpsertable) {
    this.isUpsertable = isUpsertable;
    return this;
  }

  /**
   * Get isUpsertable
   * @return isUpsertable
   */
  @javax.annotation.Nullable
  public Boolean getIsUpsertable() {
    return isUpsertable;
  }

  public void setIsUpsertable(@javax.annotation.Nullable Boolean isUpsertable) {
    this.isUpsertable = isUpsertable;
  }


  public ConnectorEntityFieldDestinationProperties isUpdatable(@javax.annotation.Nullable Boolean isUpdatable) {
    this.isUpdatable = isUpdatable;
    return this;
  }

  /**
   * Get isUpdatable
   * @return isUpdatable
   */
  @javax.annotation.Nullable
  public Boolean getIsUpdatable() {
    return isUpdatable;
  }

  public void setIsUpdatable(@javax.annotation.Nullable Boolean isUpdatable) {
    this.isUpdatable = isUpdatable;
  }


  public ConnectorEntityFieldDestinationProperties isDefaultedOnCreate(@javax.annotation.Nullable Boolean isDefaultedOnCreate) {
    this.isDefaultedOnCreate = isDefaultedOnCreate;
    return this;
  }

  /**
   * Get isDefaultedOnCreate
   * @return isDefaultedOnCreate
   */
  @javax.annotation.Nullable
  public Boolean getIsDefaultedOnCreate() {
    return isDefaultedOnCreate;
  }

  public void setIsDefaultedOnCreate(@javax.annotation.Nullable Boolean isDefaultedOnCreate) {
    this.isDefaultedOnCreate = isDefaultedOnCreate;
  }


  public ConnectorEntityFieldDestinationProperties supportedWriteOperations(@javax.annotation.Nullable List supportedWriteOperations) {
    this.supportedWriteOperations = supportedWriteOperations;
    return this;
  }

  /**
   * Get supportedWriteOperations
   * @return supportedWriteOperations
   */
  @javax.annotation.Nullable
  public List getSupportedWriteOperations() {
    return supportedWriteOperations;
  }

  public void setSupportedWriteOperations(@javax.annotation.Nullable List supportedWriteOperations) {
    this.supportedWriteOperations = supportedWriteOperations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectorEntityFieldDestinationProperties connectorEntityFieldDestinationProperties = (ConnectorEntityFieldDestinationProperties) o;
    return Objects.equals(this.isCreatable, connectorEntityFieldDestinationProperties.isCreatable) &&
        Objects.equals(this.isNullable, connectorEntityFieldDestinationProperties.isNullable) &&
        Objects.equals(this.isUpsertable, connectorEntityFieldDestinationProperties.isUpsertable) &&
        Objects.equals(this.isUpdatable, connectorEntityFieldDestinationProperties.isUpdatable) &&
        Objects.equals(this.isDefaultedOnCreate, connectorEntityFieldDestinationProperties.isDefaultedOnCreate) &&
        Objects.equals(this.supportedWriteOperations, connectorEntityFieldDestinationProperties.supportedWriteOperations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isCreatable, isNullable, isUpsertable, isUpdatable, isDefaultedOnCreate, supportedWriteOperations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectorEntityFieldDestinationProperties {\n");
    sb.append("    isCreatable: ").append(toIndentedString(isCreatable)).append("\n");
    sb.append("    isNullable: ").append(toIndentedString(isNullable)).append("\n");
    sb.append("    isUpsertable: ").append(toIndentedString(isUpsertable)).append("\n");
    sb.append("    isUpdatable: ").append(toIndentedString(isUpdatable)).append("\n");
    sb.append("    isDefaultedOnCreate: ").append(toIndentedString(isDefaultedOnCreate)).append("\n");
    sb.append("    supportedWriteOperations: ").append(toIndentedString(supportedWriteOperations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("isCreatable");
    openapiFields.add("isNullable");
    openapiFields.add("isUpsertable");
    openapiFields.add("isUpdatable");
    openapiFields.add("isDefaultedOnCreate");
    openapiFields.add("supportedWriteOperations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConnectorEntityFieldDestinationProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConnectorEntityFieldDestinationProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConnectorEntityFieldDestinationProperties is not found in the empty JSON string", ConnectorEntityFieldDestinationProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConnectorEntityFieldDestinationProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConnectorEntityFieldDestinationProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `isCreatable`
      if (jsonObj.get("isCreatable") != null && !jsonObj.get("isCreatable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("isCreatable"));
      }
      // validate the optional field `isNullable`
      if (jsonObj.get("isNullable") != null && !jsonObj.get("isNullable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("isNullable"));
      }
      // validate the optional field `isUpsertable`
      if (jsonObj.get("isUpsertable") != null && !jsonObj.get("isUpsertable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("isUpsertable"));
      }
      // validate the optional field `isUpdatable`
      if (jsonObj.get("isUpdatable") != null && !jsonObj.get("isUpdatable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("isUpdatable"));
      }
      // validate the optional field `isDefaultedOnCreate`
      if (jsonObj.get("isDefaultedOnCreate") != null && !jsonObj.get("isDefaultedOnCreate").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("isDefaultedOnCreate"));
      }
      // validate the optional field `supportedWriteOperations`
      if (jsonObj.get("supportedWriteOperations") != null && !jsonObj.get("supportedWriteOperations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("supportedWriteOperations"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConnectorEntityFieldDestinationProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConnectorEntityFieldDestinationProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConnectorEntityFieldDestinationProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConnectorEntityFieldDestinationProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ConnectorEntityFieldDestinationProperties>() {
           @Override
           public void write(JsonWriter out, ConnectorEntityFieldDestinationProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConnectorEntityFieldDestinationProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConnectorEntityFieldDestinationProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConnectorEntityFieldDestinationProperties
   * @throws IOException if the JSON string is invalid with respect to ConnectorEntityFieldDestinationProperties
   */
  public static ConnectorEntityFieldDestinationProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConnectorEntityFieldDestinationProperties.class);
  }

  /**
   * Convert an instance of ConnectorEntityFieldDestinationProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

