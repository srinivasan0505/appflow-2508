/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DataPullMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the &lt;code&gt;Scheduled&lt;/code&gt; trigger type. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:42:27.578242+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class ScheduledTriggerProperties {
  public static final String SERIALIZED_NAME_SCHEDULE_EXPRESSION = "scheduleExpression";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_EXPRESSION)
  @javax.annotation.Nonnull
  private String scheduleExpression;

  public static final String SERIALIZED_NAME_DATA_PULL_MODE = "dataPullMode";
  @SerializedName(SERIALIZED_NAME_DATA_PULL_MODE)
  @javax.annotation.Nullable
  private DataPullMode dataPullMode;

  public static final String SERIALIZED_NAME_SCHEDULE_START_TIME = "scheduleStartTime";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_START_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime scheduleStartTime;

  public static final String SERIALIZED_NAME_SCHEDULE_END_TIME = "scheduleEndTime";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_END_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime scheduleEndTime;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  @javax.annotation.Nullable
  private String timezone;

  public static final String SERIALIZED_NAME_SCHEDULE_OFFSET = "scheduleOffset";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_OFFSET)
  @javax.annotation.Nullable
  private Integer scheduleOffset;

  public static final String SERIALIZED_NAME_FIRST_EXECUTION_FROM = "firstExecutionFrom";
  @SerializedName(SERIALIZED_NAME_FIRST_EXECUTION_FROM)
  @javax.annotation.Nullable
  private OffsetDateTime firstExecutionFrom;

  public static final String SERIALIZED_NAME_FLOW_ERROR_DEACTIVATION_THRESHOLD = "flowErrorDeactivationThreshold";
  @SerializedName(SERIALIZED_NAME_FLOW_ERROR_DEACTIVATION_THRESHOLD)
  @javax.annotation.Nullable
  private Integer flowErrorDeactivationThreshold;

  public ScheduledTriggerProperties() {
  }

  public ScheduledTriggerProperties scheduleExpression(@javax.annotation.Nonnull String scheduleExpression) {
    this.scheduleExpression = scheduleExpression;
    return this;
  }

  /**
   * Get scheduleExpression
   * @return scheduleExpression
   */
  @javax.annotation.Nonnull
  public String getScheduleExpression() {
    return scheduleExpression;
  }

  public void setScheduleExpression(@javax.annotation.Nonnull String scheduleExpression) {
    this.scheduleExpression = scheduleExpression;
  }


  public ScheduledTriggerProperties dataPullMode(@javax.annotation.Nullable DataPullMode dataPullMode) {
    this.dataPullMode = dataPullMode;
    return this;
  }

  /**
   * Get dataPullMode
   * @return dataPullMode
   */
  @javax.annotation.Nullable
  public DataPullMode getDataPullMode() {
    return dataPullMode;
  }

  public void setDataPullMode(@javax.annotation.Nullable DataPullMode dataPullMode) {
    this.dataPullMode = dataPullMode;
  }


  public ScheduledTriggerProperties scheduleStartTime(@javax.annotation.Nullable OffsetDateTime scheduleStartTime) {
    this.scheduleStartTime = scheduleStartTime;
    return this;
  }

  /**
   * Get scheduleStartTime
   * @return scheduleStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScheduleStartTime() {
    return scheduleStartTime;
  }

  public void setScheduleStartTime(@javax.annotation.Nullable OffsetDateTime scheduleStartTime) {
    this.scheduleStartTime = scheduleStartTime;
  }


  public ScheduledTriggerProperties scheduleEndTime(@javax.annotation.Nullable OffsetDateTime scheduleEndTime) {
    this.scheduleEndTime = scheduleEndTime;
    return this;
  }

  /**
   * Get scheduleEndTime
   * @return scheduleEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScheduleEndTime() {
    return scheduleEndTime;
  }

  public void setScheduleEndTime(@javax.annotation.Nullable OffsetDateTime scheduleEndTime) {
    this.scheduleEndTime = scheduleEndTime;
  }


  public ScheduledTriggerProperties timezone(@javax.annotation.Nullable String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(@javax.annotation.Nullable String timezone) {
    this.timezone = timezone;
  }


  public ScheduledTriggerProperties scheduleOffset(@javax.annotation.Nullable Integer scheduleOffset) {
    this.scheduleOffset = scheduleOffset;
    return this;
  }

  /**
   * Get scheduleOffset
   * @return scheduleOffset
   */
  @javax.annotation.Nullable
  public Integer getScheduleOffset() {
    return scheduleOffset;
  }

  public void setScheduleOffset(@javax.annotation.Nullable Integer scheduleOffset) {
    this.scheduleOffset = scheduleOffset;
  }


  public ScheduledTriggerProperties firstExecutionFrom(@javax.annotation.Nullable OffsetDateTime firstExecutionFrom) {
    this.firstExecutionFrom = firstExecutionFrom;
    return this;
  }

  /**
   * Get firstExecutionFrom
   * @return firstExecutionFrom
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFirstExecutionFrom() {
    return firstExecutionFrom;
  }

  public void setFirstExecutionFrom(@javax.annotation.Nullable OffsetDateTime firstExecutionFrom) {
    this.firstExecutionFrom = firstExecutionFrom;
  }


  public ScheduledTriggerProperties flowErrorDeactivationThreshold(@javax.annotation.Nullable Integer flowErrorDeactivationThreshold) {
    this.flowErrorDeactivationThreshold = flowErrorDeactivationThreshold;
    return this;
  }

  /**
   * Get flowErrorDeactivationThreshold
   * @return flowErrorDeactivationThreshold
   */
  @javax.annotation.Nullable
  public Integer getFlowErrorDeactivationThreshold() {
    return flowErrorDeactivationThreshold;
  }

  public void setFlowErrorDeactivationThreshold(@javax.annotation.Nullable Integer flowErrorDeactivationThreshold) {
    this.flowErrorDeactivationThreshold = flowErrorDeactivationThreshold;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduledTriggerProperties scheduledTriggerProperties = (ScheduledTriggerProperties) o;
    return Objects.equals(this.scheduleExpression, scheduledTriggerProperties.scheduleExpression) &&
        Objects.equals(this.dataPullMode, scheduledTriggerProperties.dataPullMode) &&
        Objects.equals(this.scheduleStartTime, scheduledTriggerProperties.scheduleStartTime) &&
        Objects.equals(this.scheduleEndTime, scheduledTriggerProperties.scheduleEndTime) &&
        Objects.equals(this.timezone, scheduledTriggerProperties.timezone) &&
        Objects.equals(this.scheduleOffset, scheduledTriggerProperties.scheduleOffset) &&
        Objects.equals(this.firstExecutionFrom, scheduledTriggerProperties.firstExecutionFrom) &&
        Objects.equals(this.flowErrorDeactivationThreshold, scheduledTriggerProperties.flowErrorDeactivationThreshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduleExpression, dataPullMode, scheduleStartTime, scheduleEndTime, timezone, scheduleOffset, firstExecutionFrom, flowErrorDeactivationThreshold);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduledTriggerProperties {\n");
    sb.append("    scheduleExpression: ").append(toIndentedString(scheduleExpression)).append("\n");
    sb.append("    dataPullMode: ").append(toIndentedString(dataPullMode)).append("\n");
    sb.append("    scheduleStartTime: ").append(toIndentedString(scheduleStartTime)).append("\n");
    sb.append("    scheduleEndTime: ").append(toIndentedString(scheduleEndTime)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    scheduleOffset: ").append(toIndentedString(scheduleOffset)).append("\n");
    sb.append("    firstExecutionFrom: ").append(toIndentedString(firstExecutionFrom)).append("\n");
    sb.append("    flowErrorDeactivationThreshold: ").append(toIndentedString(flowErrorDeactivationThreshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("scheduleExpression");
    openapiFields.add("dataPullMode");
    openapiFields.add("scheduleStartTime");
    openapiFields.add("scheduleEndTime");
    openapiFields.add("timezone");
    openapiFields.add("scheduleOffset");
    openapiFields.add("firstExecutionFrom");
    openapiFields.add("flowErrorDeactivationThreshold");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("scheduleExpression");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduledTriggerProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduledTriggerProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduledTriggerProperties is not found in the empty JSON string", ScheduledTriggerProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduledTriggerProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduledTriggerProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ScheduledTriggerProperties.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `scheduleExpression`
      String.validateJsonElement(jsonObj.get("scheduleExpression"));
      // validate the optional field `dataPullMode`
      if (jsonObj.get("dataPullMode") != null && !jsonObj.get("dataPullMode").isJsonNull()) {
        DataPullMode.validateJsonElement(jsonObj.get("dataPullMode"));
      }
      // validate the optional field `scheduleStartTime`
      if (jsonObj.get("scheduleStartTime") != null && !jsonObj.get("scheduleStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("scheduleStartTime"));
      }
      // validate the optional field `scheduleEndTime`
      if (jsonObj.get("scheduleEndTime") != null && !jsonObj.get("scheduleEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("scheduleEndTime"));
      }
      // validate the optional field `timezone`
      if (jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("timezone"));
      }
      // validate the optional field `scheduleOffset`
      if (jsonObj.get("scheduleOffset") != null && !jsonObj.get("scheduleOffset").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("scheduleOffset"));
      }
      // validate the optional field `firstExecutionFrom`
      if (jsonObj.get("firstExecutionFrom") != null && !jsonObj.get("firstExecutionFrom").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("firstExecutionFrom"));
      }
      // validate the optional field `flowErrorDeactivationThreshold`
      if (jsonObj.get("flowErrorDeactivationThreshold") != null && !jsonObj.get("flowErrorDeactivationThreshold").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("flowErrorDeactivationThreshold"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduledTriggerProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduledTriggerProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduledTriggerProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduledTriggerProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduledTriggerProperties>() {
           @Override
           public void write(JsonWriter out, ScheduledTriggerProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduledTriggerProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduledTriggerProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduledTriggerProperties
   * @throws IOException if the JSON string is invalid with respect to ScheduledTriggerProperties
   */
  public static ScheduledTriggerProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduledTriggerProperties.class);
  }

  /**
   * Convert an instance of ScheduledTriggerProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

