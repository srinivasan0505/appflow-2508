/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ConnectorProfilePropertiesCustomConnector;
import org.openapitools.client.model.ConnectorProfilePropertiesDatadog;
import org.openapitools.client.model.ConnectorProfilePropertiesDynatrace;
import org.openapitools.client.model.ConnectorProfilePropertiesInforNexus;
import org.openapitools.client.model.ConnectorProfilePropertiesMarketo;
import org.openapitools.client.model.ConnectorProfilePropertiesPardot;
import org.openapitools.client.model.ConnectorProfilePropertiesRedshift;
import org.openapitools.client.model.ConnectorProfilePropertiesSalesforce;
import org.openapitools.client.model.ConnectorProfilePropertiesServiceNow;
import org.openapitools.client.model.ConnectorProfilePropertiesSlack;
import org.openapitools.client.model.ConnectorProfilePropertiesSnowflake;
import org.openapitools.client.model.ConnectorProfilePropertiesVeeva;
import org.openapitools.client.model.ConnectorProfilePropertiesZendesk;
import org.openapitools.client.model.SAPODataConnectorProfileProperties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:42:27.578242+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties {
  public static final String SERIALIZED_NAME_AMPLITUDE = "Amplitude";
  @SerializedName(SERIALIZED_NAME_AMPLITUDE)
  @javax.annotation.Nullable
  private Object amplitude;

  public static final String SERIALIZED_NAME_DATADOG = "Datadog";
  @SerializedName(SERIALIZED_NAME_DATADOG)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesDatadog datadog;

  public static final String SERIALIZED_NAME_DYNATRACE = "Dynatrace";
  @SerializedName(SERIALIZED_NAME_DYNATRACE)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesDynatrace dynatrace;

  public static final String SERIALIZED_NAME_GOOGLE_ANALYTICS = "GoogleAnalytics";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ANALYTICS)
  @javax.annotation.Nullable
  private Object googleAnalytics;

  public static final String SERIALIZED_NAME_HONEYCODE = "Honeycode";
  @SerializedName(SERIALIZED_NAME_HONEYCODE)
  @javax.annotation.Nullable
  private Object honeycode;

  public static final String SERIALIZED_NAME_INFOR_NEXUS = "InforNexus";
  @SerializedName(SERIALIZED_NAME_INFOR_NEXUS)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesInforNexus inforNexus;

  public static final String SERIALIZED_NAME_MARKETO = "Marketo";
  @SerializedName(SERIALIZED_NAME_MARKETO)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesMarketo marketo;

  public static final String SERIALIZED_NAME_REDSHIFT = "Redshift";
  @SerializedName(SERIALIZED_NAME_REDSHIFT)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesRedshift redshift;

  public static final String SERIALIZED_NAME_SALESFORCE = "Salesforce";
  @SerializedName(SERIALIZED_NAME_SALESFORCE)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesSalesforce salesforce;

  public static final String SERIALIZED_NAME_SERVICE_NOW = "ServiceNow";
  @SerializedName(SERIALIZED_NAME_SERVICE_NOW)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesServiceNow serviceNow;

  public static final String SERIALIZED_NAME_SINGULAR = "Singular";
  @SerializedName(SERIALIZED_NAME_SINGULAR)
  @javax.annotation.Nullable
  private Object singular;

  public static final String SERIALIZED_NAME_SLACK = "Slack";
  @SerializedName(SERIALIZED_NAME_SLACK)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesSlack slack;

  public static final String SERIALIZED_NAME_SNOWFLAKE = "Snowflake";
  @SerializedName(SERIALIZED_NAME_SNOWFLAKE)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesSnowflake snowflake;

  public static final String SERIALIZED_NAME_TRENDMICRO = "Trendmicro";
  @SerializedName(SERIALIZED_NAME_TRENDMICRO)
  @javax.annotation.Nullable
  private Object trendmicro;

  public static final String SERIALIZED_NAME_VEEVA = "Veeva";
  @SerializedName(SERIALIZED_NAME_VEEVA)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesVeeva veeva;

  public static final String SERIALIZED_NAME_ZENDESK = "Zendesk";
  @SerializedName(SERIALIZED_NAME_ZENDESK)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesZendesk zendesk;

  public static final String SERIALIZED_NAME_SA_P_O_DATA = "SAPOData";
  @SerializedName(SERIALIZED_NAME_SA_P_O_DATA)
  @javax.annotation.Nullable
  private SAPODataConnectorProfileProperties saPOData;

  public static final String SERIALIZED_NAME_CUSTOM_CONNECTOR = "CustomConnector";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CONNECTOR)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesCustomConnector customConnector;

  public static final String SERIALIZED_NAME_PARDOT = "Pardot";
  @SerializedName(SERIALIZED_NAME_PARDOT)
  @javax.annotation.Nullable
  private ConnectorProfilePropertiesPardot pardot;

  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties() {
  }

  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties amplitude(@javax.annotation.Nullable Object amplitude) {
    this.amplitude = amplitude;
    return this;
  }

  /**
   * Get amplitude
   * @return amplitude
   */
  @javax.annotation.Nullable
  public Object getAmplitude() {
    return amplitude;
  }

  public void setAmplitude(@javax.annotation.Nullable Object amplitude) {
    this.amplitude = amplitude;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties datadog(@javax.annotation.Nullable ConnectorProfilePropertiesDatadog datadog) {
    this.datadog = datadog;
    return this;
  }

  /**
   * Get datadog
   * @return datadog
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesDatadog getDatadog() {
    return datadog;
  }

  public void setDatadog(@javax.annotation.Nullable ConnectorProfilePropertiesDatadog datadog) {
    this.datadog = datadog;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties dynatrace(@javax.annotation.Nullable ConnectorProfilePropertiesDynatrace dynatrace) {
    this.dynatrace = dynatrace;
    return this;
  }

  /**
   * Get dynatrace
   * @return dynatrace
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesDynatrace getDynatrace() {
    return dynatrace;
  }

  public void setDynatrace(@javax.annotation.Nullable ConnectorProfilePropertiesDynatrace dynatrace) {
    this.dynatrace = dynatrace;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties googleAnalytics(@javax.annotation.Nullable Object googleAnalytics) {
    this.googleAnalytics = googleAnalytics;
    return this;
  }

  /**
   * Get googleAnalytics
   * @return googleAnalytics
   */
  @javax.annotation.Nullable
  public Object getGoogleAnalytics() {
    return googleAnalytics;
  }

  public void setGoogleAnalytics(@javax.annotation.Nullable Object googleAnalytics) {
    this.googleAnalytics = googleAnalytics;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties honeycode(@javax.annotation.Nullable Object honeycode) {
    this.honeycode = honeycode;
    return this;
  }

  /**
   * Get honeycode
   * @return honeycode
   */
  @javax.annotation.Nullable
  public Object getHoneycode() {
    return honeycode;
  }

  public void setHoneycode(@javax.annotation.Nullable Object honeycode) {
    this.honeycode = honeycode;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties inforNexus(@javax.annotation.Nullable ConnectorProfilePropertiesInforNexus inforNexus) {
    this.inforNexus = inforNexus;
    return this;
  }

  /**
   * Get inforNexus
   * @return inforNexus
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesInforNexus getInforNexus() {
    return inforNexus;
  }

  public void setInforNexus(@javax.annotation.Nullable ConnectorProfilePropertiesInforNexus inforNexus) {
    this.inforNexus = inforNexus;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties marketo(@javax.annotation.Nullable ConnectorProfilePropertiesMarketo marketo) {
    this.marketo = marketo;
    return this;
  }

  /**
   * Get marketo
   * @return marketo
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesMarketo getMarketo() {
    return marketo;
  }

  public void setMarketo(@javax.annotation.Nullable ConnectorProfilePropertiesMarketo marketo) {
    this.marketo = marketo;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties redshift(@javax.annotation.Nullable ConnectorProfilePropertiesRedshift redshift) {
    this.redshift = redshift;
    return this;
  }

  /**
   * Get redshift
   * @return redshift
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesRedshift getRedshift() {
    return redshift;
  }

  public void setRedshift(@javax.annotation.Nullable ConnectorProfilePropertiesRedshift redshift) {
    this.redshift = redshift;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties salesforce(@javax.annotation.Nullable ConnectorProfilePropertiesSalesforce salesforce) {
    this.salesforce = salesforce;
    return this;
  }

  /**
   * Get salesforce
   * @return salesforce
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesSalesforce getSalesforce() {
    return salesforce;
  }

  public void setSalesforce(@javax.annotation.Nullable ConnectorProfilePropertiesSalesforce salesforce) {
    this.salesforce = salesforce;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties serviceNow(@javax.annotation.Nullable ConnectorProfilePropertiesServiceNow serviceNow) {
    this.serviceNow = serviceNow;
    return this;
  }

  /**
   * Get serviceNow
   * @return serviceNow
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesServiceNow getServiceNow() {
    return serviceNow;
  }

  public void setServiceNow(@javax.annotation.Nullable ConnectorProfilePropertiesServiceNow serviceNow) {
    this.serviceNow = serviceNow;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties singular(@javax.annotation.Nullable Object singular) {
    this.singular = singular;
    return this;
  }

  /**
   * Get singular
   * @return singular
   */
  @javax.annotation.Nullable
  public Object getSingular() {
    return singular;
  }

  public void setSingular(@javax.annotation.Nullable Object singular) {
    this.singular = singular;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties slack(@javax.annotation.Nullable ConnectorProfilePropertiesSlack slack) {
    this.slack = slack;
    return this;
  }

  /**
   * Get slack
   * @return slack
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesSlack getSlack() {
    return slack;
  }

  public void setSlack(@javax.annotation.Nullable ConnectorProfilePropertiesSlack slack) {
    this.slack = slack;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties snowflake(@javax.annotation.Nullable ConnectorProfilePropertiesSnowflake snowflake) {
    this.snowflake = snowflake;
    return this;
  }

  /**
   * Get snowflake
   * @return snowflake
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesSnowflake getSnowflake() {
    return snowflake;
  }

  public void setSnowflake(@javax.annotation.Nullable ConnectorProfilePropertiesSnowflake snowflake) {
    this.snowflake = snowflake;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties trendmicro(@javax.annotation.Nullable Object trendmicro) {
    this.trendmicro = trendmicro;
    return this;
  }

  /**
   * Get trendmicro
   * @return trendmicro
   */
  @javax.annotation.Nullable
  public Object getTrendmicro() {
    return trendmicro;
  }

  public void setTrendmicro(@javax.annotation.Nullable Object trendmicro) {
    this.trendmicro = trendmicro;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties veeva(@javax.annotation.Nullable ConnectorProfilePropertiesVeeva veeva) {
    this.veeva = veeva;
    return this;
  }

  /**
   * Get veeva
   * @return veeva
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesVeeva getVeeva() {
    return veeva;
  }

  public void setVeeva(@javax.annotation.Nullable ConnectorProfilePropertiesVeeva veeva) {
    this.veeva = veeva;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties zendesk(@javax.annotation.Nullable ConnectorProfilePropertiesZendesk zendesk) {
    this.zendesk = zendesk;
    return this;
  }

  /**
   * Get zendesk
   * @return zendesk
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesZendesk getZendesk() {
    return zendesk;
  }

  public void setZendesk(@javax.annotation.Nullable ConnectorProfilePropertiesZendesk zendesk) {
    this.zendesk = zendesk;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties saPOData(@javax.annotation.Nullable SAPODataConnectorProfileProperties saPOData) {
    this.saPOData = saPOData;
    return this;
  }

  /**
   * Get saPOData
   * @return saPOData
   */
  @javax.annotation.Nullable
  public SAPODataConnectorProfileProperties getSaPOData() {
    return saPOData;
  }

  public void setSaPOData(@javax.annotation.Nullable SAPODataConnectorProfileProperties saPOData) {
    this.saPOData = saPOData;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties customConnector(@javax.annotation.Nullable ConnectorProfilePropertiesCustomConnector customConnector) {
    this.customConnector = customConnector;
    return this;
  }

  /**
   * Get customConnector
   * @return customConnector
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesCustomConnector getCustomConnector() {
    return customConnector;
  }

  public void setCustomConnector(@javax.annotation.Nullable ConnectorProfilePropertiesCustomConnector customConnector) {
    this.customConnector = customConnector;
  }


  public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties pardot(@javax.annotation.Nullable ConnectorProfilePropertiesPardot pardot) {
    this.pardot = pardot;
    return this;
  }

  /**
   * Get pardot
   * @return pardot
   */
  @javax.annotation.Nullable
  public ConnectorProfilePropertiesPardot getPardot() {
    return pardot;
  }

  public void setPardot(@javax.annotation.Nullable ConnectorProfilePropertiesPardot pardot) {
    this.pardot = pardot;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties = (CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties) o;
    return Objects.equals(this.amplitude, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.amplitude) &&
        Objects.equals(this.datadog, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.datadog) &&
        Objects.equals(this.dynatrace, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.dynatrace) &&
        Objects.equals(this.googleAnalytics, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.googleAnalytics) &&
        Objects.equals(this.honeycode, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.honeycode) &&
        Objects.equals(this.inforNexus, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.inforNexus) &&
        Objects.equals(this.marketo, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.marketo) &&
        Objects.equals(this.redshift, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.redshift) &&
        Objects.equals(this.salesforce, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.salesforce) &&
        Objects.equals(this.serviceNow, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.serviceNow) &&
        Objects.equals(this.singular, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.singular) &&
        Objects.equals(this.slack, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.slack) &&
        Objects.equals(this.snowflake, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.snowflake) &&
        Objects.equals(this.trendmicro, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.trendmicro) &&
        Objects.equals(this.veeva, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.veeva) &&
        Objects.equals(this.zendesk, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.zendesk) &&
        Objects.equals(this.saPOData, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.saPOData) &&
        Objects.equals(this.customConnector, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.customConnector) &&
        Objects.equals(this.pardot, createConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.pardot);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amplitude, datadog, dynatrace, googleAnalytics, honeycode, inforNexus, marketo, redshift, salesforce, serviceNow, singular, slack, snowflake, trendmicro, veeva, zendesk, saPOData, customConnector, pardot);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties {\n");
    sb.append("    amplitude: ").append(toIndentedString(amplitude)).append("\n");
    sb.append("    datadog: ").append(toIndentedString(datadog)).append("\n");
    sb.append("    dynatrace: ").append(toIndentedString(dynatrace)).append("\n");
    sb.append("    googleAnalytics: ").append(toIndentedString(googleAnalytics)).append("\n");
    sb.append("    honeycode: ").append(toIndentedString(honeycode)).append("\n");
    sb.append("    inforNexus: ").append(toIndentedString(inforNexus)).append("\n");
    sb.append("    marketo: ").append(toIndentedString(marketo)).append("\n");
    sb.append("    redshift: ").append(toIndentedString(redshift)).append("\n");
    sb.append("    salesforce: ").append(toIndentedString(salesforce)).append("\n");
    sb.append("    serviceNow: ").append(toIndentedString(serviceNow)).append("\n");
    sb.append("    singular: ").append(toIndentedString(singular)).append("\n");
    sb.append("    slack: ").append(toIndentedString(slack)).append("\n");
    sb.append("    snowflake: ").append(toIndentedString(snowflake)).append("\n");
    sb.append("    trendmicro: ").append(toIndentedString(trendmicro)).append("\n");
    sb.append("    veeva: ").append(toIndentedString(veeva)).append("\n");
    sb.append("    zendesk: ").append(toIndentedString(zendesk)).append("\n");
    sb.append("    saPOData: ").append(toIndentedString(saPOData)).append("\n");
    sb.append("    customConnector: ").append(toIndentedString(customConnector)).append("\n");
    sb.append("    pardot: ").append(toIndentedString(pardot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Amplitude");
    openapiFields.add("Datadog");
    openapiFields.add("Dynatrace");
    openapiFields.add("GoogleAnalytics");
    openapiFields.add("Honeycode");
    openapiFields.add("InforNexus");
    openapiFields.add("Marketo");
    openapiFields.add("Redshift");
    openapiFields.add("Salesforce");
    openapiFields.add("ServiceNow");
    openapiFields.add("Singular");
    openapiFields.add("Slack");
    openapiFields.add("Snowflake");
    openapiFields.add("Trendmicro");
    openapiFields.add("Veeva");
    openapiFields.add("Zendesk");
    openapiFields.add("SAPOData");
    openapiFields.add("CustomConnector");
    openapiFields.add("Pardot");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties is not found in the empty JSON string", CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Amplitude`
      if (jsonObj.get("Amplitude") != null && !jsonObj.get("Amplitude").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("Amplitude"));
      }
      // validate the optional field `Datadog`
      if (jsonObj.get("Datadog") != null && !jsonObj.get("Datadog").isJsonNull()) {
        ConnectorProfilePropertiesDatadog.validateJsonElement(jsonObj.get("Datadog"));
      }
      // validate the optional field `Dynatrace`
      if (jsonObj.get("Dynatrace") != null && !jsonObj.get("Dynatrace").isJsonNull()) {
        ConnectorProfilePropertiesDynatrace.validateJsonElement(jsonObj.get("Dynatrace"));
      }
      // validate the optional field `GoogleAnalytics`
      if (jsonObj.get("GoogleAnalytics") != null && !jsonObj.get("GoogleAnalytics").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("GoogleAnalytics"));
      }
      // validate the optional field `Honeycode`
      if (jsonObj.get("Honeycode") != null && !jsonObj.get("Honeycode").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("Honeycode"));
      }
      // validate the optional field `InforNexus`
      if (jsonObj.get("InforNexus") != null && !jsonObj.get("InforNexus").isJsonNull()) {
        ConnectorProfilePropertiesInforNexus.validateJsonElement(jsonObj.get("InforNexus"));
      }
      // validate the optional field `Marketo`
      if (jsonObj.get("Marketo") != null && !jsonObj.get("Marketo").isJsonNull()) {
        ConnectorProfilePropertiesMarketo.validateJsonElement(jsonObj.get("Marketo"));
      }
      // validate the optional field `Redshift`
      if (jsonObj.get("Redshift") != null && !jsonObj.get("Redshift").isJsonNull()) {
        ConnectorProfilePropertiesRedshift.validateJsonElement(jsonObj.get("Redshift"));
      }
      // validate the optional field `Salesforce`
      if (jsonObj.get("Salesforce") != null && !jsonObj.get("Salesforce").isJsonNull()) {
        ConnectorProfilePropertiesSalesforce.validateJsonElement(jsonObj.get("Salesforce"));
      }
      // validate the optional field `ServiceNow`
      if (jsonObj.get("ServiceNow") != null && !jsonObj.get("ServiceNow").isJsonNull()) {
        ConnectorProfilePropertiesServiceNow.validateJsonElement(jsonObj.get("ServiceNow"));
      }
      // validate the optional field `Singular`
      if (jsonObj.get("Singular") != null && !jsonObj.get("Singular").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("Singular"));
      }
      // validate the optional field `Slack`
      if (jsonObj.get("Slack") != null && !jsonObj.get("Slack").isJsonNull()) {
        ConnectorProfilePropertiesSlack.validateJsonElement(jsonObj.get("Slack"));
      }
      // validate the optional field `Snowflake`
      if (jsonObj.get("Snowflake") != null && !jsonObj.get("Snowflake").isJsonNull()) {
        ConnectorProfilePropertiesSnowflake.validateJsonElement(jsonObj.get("Snowflake"));
      }
      // validate the optional field `Trendmicro`
      if (jsonObj.get("Trendmicro") != null && !jsonObj.get("Trendmicro").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("Trendmicro"));
      }
      // validate the optional field `Veeva`
      if (jsonObj.get("Veeva") != null && !jsonObj.get("Veeva").isJsonNull()) {
        ConnectorProfilePropertiesVeeva.validateJsonElement(jsonObj.get("Veeva"));
      }
      // validate the optional field `Zendesk`
      if (jsonObj.get("Zendesk") != null && !jsonObj.get("Zendesk").isJsonNull()) {
        ConnectorProfilePropertiesZendesk.validateJsonElement(jsonObj.get("Zendesk"));
      }
      // validate the optional field `SAPOData`
      if (jsonObj.get("SAPOData") != null && !jsonObj.get("SAPOData").isJsonNull()) {
        SAPODataConnectorProfileProperties.validateJsonElement(jsonObj.get("SAPOData"));
      }
      // validate the optional field `CustomConnector`
      if (jsonObj.get("CustomConnector") != null && !jsonObj.get("CustomConnector").isJsonNull()) {
        ConnectorProfilePropertiesCustomConnector.validateJsonElement(jsonObj.get("CustomConnector"));
      }
      // validate the optional field `Pardot`
      if (jsonObj.get("Pardot") != null && !jsonObj.get("Pardot").isJsonNull()) {
        ConnectorProfilePropertiesPardot.validateJsonElement(jsonObj.get("Pardot"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties>() {
           @Override
           public void write(JsonWriter out, CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties
   * @throws IOException if the JSON string is invalid with respect to CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties
   */
  public static CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties.class);
  }

  /**
   * Convert an instance of CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

