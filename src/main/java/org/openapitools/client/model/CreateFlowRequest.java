/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateFlowRequestMetadataCatalogConfig;
import org.openapitools.client.model.CreateFlowRequestSourceFlowConfig;
import org.openapitools.client.model.CreateFlowRequestTriggerConfig;
import org.openapitools.client.model.DestinationFlowConfig;
import org.openapitools.client.model.Task;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateFlowRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:42:27.578242+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class CreateFlowRequest {
  public static final String SERIALIZED_NAME_FLOW_NAME = "flowName";
  @SerializedName(SERIALIZED_NAME_FLOW_NAME)
  @javax.annotation.Nonnull
  private String flowName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_KMS_ARN = "kmsArn";
  @SerializedName(SERIALIZED_NAME_KMS_ARN)
  @javax.annotation.Nullable
  private String kmsArn;

  public static final String SERIALIZED_NAME_TRIGGER_CONFIG = "triggerConfig";
  @SerializedName(SERIALIZED_NAME_TRIGGER_CONFIG)
  @javax.annotation.Nonnull
  private CreateFlowRequestTriggerConfig triggerConfig;

  public static final String SERIALIZED_NAME_SOURCE_FLOW_CONFIG = "sourceFlowConfig";
  @SerializedName(SERIALIZED_NAME_SOURCE_FLOW_CONFIG)
  @javax.annotation.Nonnull
  private CreateFlowRequestSourceFlowConfig sourceFlowConfig;

  public static final String SERIALIZED_NAME_DESTINATION_FLOW_CONFIG_LIST = "destinationFlowConfigList";
  @SerializedName(SERIALIZED_NAME_DESTINATION_FLOW_CONFIG_LIST)
  @javax.annotation.Nonnull
  private List<DestinationFlowConfig> destinationFlowConfigList = new ArrayList<>();

  public static final String SERIALIZED_NAME_TASKS = "tasks";
  @SerializedName(SERIALIZED_NAME_TASKS)
  @javax.annotation.Nonnull
  private List<Task> tasks = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Map<String, String> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_METADATA_CATALOG_CONFIG = "metadataCatalogConfig";
  @SerializedName(SERIALIZED_NAME_METADATA_CATALOG_CONFIG)
  @javax.annotation.Nullable
  private CreateFlowRequestMetadataCatalogConfig metadataCatalogConfig;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  @javax.annotation.Nullable
  private String clientToken;

  public CreateFlowRequest() {
  }

  public CreateFlowRequest flowName(@javax.annotation.Nonnull String flowName) {
    this.flowName = flowName;
    return this;
  }

  /**
   *  The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. 
   * @return flowName
   */
  @javax.annotation.Nonnull
  public String getFlowName() {
    return flowName;
  }

  public void setFlowName(@javax.annotation.Nonnull String flowName) {
    this.flowName = flowName;
  }


  public CreateFlowRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   *  A description of the flow you want to create. 
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public CreateFlowRequest kmsArn(@javax.annotation.Nullable String kmsArn) {
    this.kmsArn = kmsArn;
    return this;
  }

  /**
   *  The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don&#39;t provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. 
   * @return kmsArn
   */
  @javax.annotation.Nullable
  public String getKmsArn() {
    return kmsArn;
  }

  public void setKmsArn(@javax.annotation.Nullable String kmsArn) {
    this.kmsArn = kmsArn;
  }


  public CreateFlowRequest triggerConfig(@javax.annotation.Nonnull CreateFlowRequestTriggerConfig triggerConfig) {
    this.triggerConfig = triggerConfig;
    return this;
  }

  /**
   * Get triggerConfig
   * @return triggerConfig
   */
  @javax.annotation.Nonnull
  public CreateFlowRequestTriggerConfig getTriggerConfig() {
    return triggerConfig;
  }

  public void setTriggerConfig(@javax.annotation.Nonnull CreateFlowRequestTriggerConfig triggerConfig) {
    this.triggerConfig = triggerConfig;
  }


  public CreateFlowRequest sourceFlowConfig(@javax.annotation.Nonnull CreateFlowRequestSourceFlowConfig sourceFlowConfig) {
    this.sourceFlowConfig = sourceFlowConfig;
    return this;
  }

  /**
   * Get sourceFlowConfig
   * @return sourceFlowConfig
   */
  @javax.annotation.Nonnull
  public CreateFlowRequestSourceFlowConfig getSourceFlowConfig() {
    return sourceFlowConfig;
  }

  public void setSourceFlowConfig(@javax.annotation.Nonnull CreateFlowRequestSourceFlowConfig sourceFlowConfig) {
    this.sourceFlowConfig = sourceFlowConfig;
  }


  public CreateFlowRequest destinationFlowConfigList(@javax.annotation.Nonnull List<DestinationFlowConfig> destinationFlowConfigList) {
    this.destinationFlowConfigList = destinationFlowConfigList;
    return this;
  }

  public CreateFlowRequest addDestinationFlowConfigListItem(DestinationFlowConfig destinationFlowConfigListItem) {
    if (this.destinationFlowConfigList == null) {
      this.destinationFlowConfigList = new ArrayList<>();
    }
    this.destinationFlowConfigList.add(destinationFlowConfigListItem);
    return this;
  }

  /**
   *  The configuration that controls how Amazon AppFlow places data in the destination connector. 
   * @return destinationFlowConfigList
   */
  @javax.annotation.Nonnull
  public List<DestinationFlowConfig> getDestinationFlowConfigList() {
    return destinationFlowConfigList;
  }

  public void setDestinationFlowConfigList(@javax.annotation.Nonnull List<DestinationFlowConfig> destinationFlowConfigList) {
    this.destinationFlowConfigList = destinationFlowConfigList;
  }


  public CreateFlowRequest tasks(@javax.annotation.Nonnull List<Task> tasks) {
    this.tasks = tasks;
    return this;
  }

  public CreateFlowRequest addTasksItem(Task tasksItem) {
    if (this.tasks == null) {
      this.tasks = new ArrayList<>();
    }
    this.tasks.add(tasksItem);
    return this;
  }

  /**
   *  A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. 
   * @return tasks
   */
  @javax.annotation.Nonnull
  public List<Task> getTasks() {
    return tasks;
  }

  public void setTasks(@javax.annotation.Nonnull List<Task> tasks) {
    this.tasks = tasks;
  }


  public CreateFlowRequest tags(@javax.annotation.Nullable Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateFlowRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   *  The tags used to organize, track, or control access for your flow. 
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Map<String, String> tags) {
    this.tags = tags;
  }


  public CreateFlowRequest metadataCatalogConfig(@javax.annotation.Nullable CreateFlowRequestMetadataCatalogConfig metadataCatalogConfig) {
    this.metadataCatalogConfig = metadataCatalogConfig;
    return this;
  }

  /**
   * Get metadataCatalogConfig
   * @return metadataCatalogConfig
   */
  @javax.annotation.Nullable
  public CreateFlowRequestMetadataCatalogConfig getMetadataCatalogConfig() {
    return metadataCatalogConfig;
  }

  public void setMetadataCatalogConfig(@javax.annotation.Nullable CreateFlowRequestMetadataCatalogConfig metadataCatalogConfig) {
    this.metadataCatalogConfig = metadataCatalogConfig;
  }


  public CreateFlowRequest clientToken(@javax.annotation.Nullable String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * &lt;p&gt;The &lt;code&gt;clientToken&lt;/code&gt; parameter is an idempotency token. It ensures that your &lt;code&gt;CreateFlow&lt;/code&gt; request completes only once. You choose the value to pass. For example, if you don&#39;t receive a response from your request, you can safely retry the request with the same &lt;code&gt;clientToken&lt;/code&gt; parameter value.&lt;/p&gt; &lt;p&gt;If you omit a &lt;code&gt;clientToken&lt;/code&gt; value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.&lt;/p&gt; &lt;p&gt;If you specify input parameters that differ from your first request, an error occurs. If you use a different value for &lt;code&gt;clientToken&lt;/code&gt;, Amazon AppFlow considers it a new call to &lt;code&gt;CreateFlow&lt;/code&gt;. The token is active for 8 hours.&lt;/p&gt;
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(@javax.annotation.Nullable String clientToken) {
    this.clientToken = clientToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFlowRequest createFlowRequest = (CreateFlowRequest) o;
    return Objects.equals(this.flowName, createFlowRequest.flowName) &&
        Objects.equals(this.description, createFlowRequest.description) &&
        Objects.equals(this.kmsArn, createFlowRequest.kmsArn) &&
        Objects.equals(this.triggerConfig, createFlowRequest.triggerConfig) &&
        Objects.equals(this.sourceFlowConfig, createFlowRequest.sourceFlowConfig) &&
        Objects.equals(this.destinationFlowConfigList, createFlowRequest.destinationFlowConfigList) &&
        Objects.equals(this.tasks, createFlowRequest.tasks) &&
        Objects.equals(this.tags, createFlowRequest.tags) &&
        Objects.equals(this.metadataCatalogConfig, createFlowRequest.metadataCatalogConfig) &&
        Objects.equals(this.clientToken, createFlowRequest.clientToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flowName, description, kmsArn, triggerConfig, sourceFlowConfig, destinationFlowConfigList, tasks, tags, metadataCatalogConfig, clientToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFlowRequest {\n");
    sb.append("    flowName: ").append(toIndentedString(flowName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    kmsArn: ").append(toIndentedString(kmsArn)).append("\n");
    sb.append("    triggerConfig: ").append(toIndentedString(triggerConfig)).append("\n");
    sb.append("    sourceFlowConfig: ").append(toIndentedString(sourceFlowConfig)).append("\n");
    sb.append("    destinationFlowConfigList: ").append(toIndentedString(destinationFlowConfigList)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    metadataCatalogConfig: ").append(toIndentedString(metadataCatalogConfig)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("flowName");
    openapiFields.add("description");
    openapiFields.add("kmsArn");
    openapiFields.add("triggerConfig");
    openapiFields.add("sourceFlowConfig");
    openapiFields.add("destinationFlowConfigList");
    openapiFields.add("tasks");
    openapiFields.add("tags");
    openapiFields.add("metadataCatalogConfig");
    openapiFields.add("clientToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("flowName");
    openapiRequiredFields.add("triggerConfig");
    openapiRequiredFields.add("sourceFlowConfig");
    openapiRequiredFields.add("destinationFlowConfigList");
    openapiRequiredFields.add("tasks");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateFlowRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateFlowRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateFlowRequest is not found in the empty JSON string", CreateFlowRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateFlowRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateFlowRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateFlowRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("flowName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flowName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flowName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("kmsArn") != null && !jsonObj.get("kmsArn").isJsonNull()) && !jsonObj.get("kmsArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kmsArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kmsArn").toString()));
      }
      // validate the required field `triggerConfig`
      CreateFlowRequestTriggerConfig.validateJsonElement(jsonObj.get("triggerConfig"));
      // validate the required field `sourceFlowConfig`
      CreateFlowRequestSourceFlowConfig.validateJsonElement(jsonObj.get("sourceFlowConfig"));
      // ensure the json data is an array
      if (!jsonObj.get("destinationFlowConfigList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationFlowConfigList` to be an array in the JSON string but got `%s`", jsonObj.get("destinationFlowConfigList").toString()));
      }

      JsonArray jsonArraydestinationFlowConfigList = jsonObj.getAsJsonArray("destinationFlowConfigList");
      // validate the required field `destinationFlowConfigList` (array)
      for (int i = 0; i < jsonArraydestinationFlowConfigList.size(); i++) {
        DestinationFlowConfig.validateJsonElement(jsonArraydestinationFlowConfigList.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("tasks").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tasks` to be an array in the JSON string but got `%s`", jsonObj.get("tasks").toString()));
      }

      JsonArray jsonArraytasks = jsonObj.getAsJsonArray("tasks");
      // validate the required field `tasks` (array)
      for (int i = 0; i < jsonArraytasks.size(); i++) {
        Task.validateJsonElement(jsonArraytasks.get(i));
      };
      // validate the optional field `metadataCatalogConfig`
      if (jsonObj.get("metadataCatalogConfig") != null && !jsonObj.get("metadataCatalogConfig").isJsonNull()) {
        CreateFlowRequestMetadataCatalogConfig.validateJsonElement(jsonObj.get("metadataCatalogConfig"));
      }
      if ((jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) && !jsonObj.get("clientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateFlowRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateFlowRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateFlowRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateFlowRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateFlowRequest>() {
           @Override
           public void write(JsonWriter out, CreateFlowRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateFlowRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateFlowRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateFlowRequest
   * @throws IOException if the JSON string is invalid with respect to CreateFlowRequest
   */
  public static CreateFlowRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateFlowRequest.class);
  }

  /**
   * Convert an instance of CreateFlowRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

