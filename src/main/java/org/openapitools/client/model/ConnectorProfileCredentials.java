/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ConnectorProfileCredentialsAmplitude;
import org.openapitools.client.model.ConnectorProfileCredentialsDatadog;
import org.openapitools.client.model.ConnectorProfileCredentialsDynatrace;
import org.openapitools.client.model.ConnectorProfileCredentialsGoogleAnalytics;
import org.openapitools.client.model.ConnectorProfileCredentialsHoneycode;
import org.openapitools.client.model.ConnectorProfileCredentialsInforNexus;
import org.openapitools.client.model.ConnectorProfileCredentialsMarketo;
import org.openapitools.client.model.ConnectorProfileCredentialsPardot;
import org.openapitools.client.model.ConnectorProfileCredentialsRedshift;
import org.openapitools.client.model.ConnectorProfileCredentialsSalesforce;
import org.openapitools.client.model.ConnectorProfileCredentialsServiceNow;
import org.openapitools.client.model.ConnectorProfileCredentialsSingular;
import org.openapitools.client.model.ConnectorProfileCredentialsSlack;
import org.openapitools.client.model.ConnectorProfileCredentialsSnowflake;
import org.openapitools.client.model.ConnectorProfileCredentialsTrendmicro;
import org.openapitools.client.model.ConnectorProfileCredentialsVeeva;
import org.openapitools.client.model.ConnectorProfileCredentialsZendesk;
import org.openapitools.client.model.CustomConnectorProfileCredentials;
import org.openapitools.client.model.SAPODataConnectorProfileCredentials;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  The connector-specific credentials required by a connector. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:42:27.578242+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class ConnectorProfileCredentials {
  public static final String SERIALIZED_NAME_AMPLITUDE = "Amplitude";
  @SerializedName(SERIALIZED_NAME_AMPLITUDE)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsAmplitude amplitude;

  public static final String SERIALIZED_NAME_DATADOG = "Datadog";
  @SerializedName(SERIALIZED_NAME_DATADOG)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsDatadog datadog;

  public static final String SERIALIZED_NAME_DYNATRACE = "Dynatrace";
  @SerializedName(SERIALIZED_NAME_DYNATRACE)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsDynatrace dynatrace;

  public static final String SERIALIZED_NAME_GOOGLE_ANALYTICS = "GoogleAnalytics";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ANALYTICS)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsGoogleAnalytics googleAnalytics;

  public static final String SERIALIZED_NAME_HONEYCODE = "Honeycode";
  @SerializedName(SERIALIZED_NAME_HONEYCODE)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsHoneycode honeycode;

  public static final String SERIALIZED_NAME_INFOR_NEXUS = "InforNexus";
  @SerializedName(SERIALIZED_NAME_INFOR_NEXUS)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsInforNexus inforNexus;

  public static final String SERIALIZED_NAME_MARKETO = "Marketo";
  @SerializedName(SERIALIZED_NAME_MARKETO)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsMarketo marketo;

  public static final String SERIALIZED_NAME_REDSHIFT = "Redshift";
  @SerializedName(SERIALIZED_NAME_REDSHIFT)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsRedshift redshift;

  public static final String SERIALIZED_NAME_SALESFORCE = "Salesforce";
  @SerializedName(SERIALIZED_NAME_SALESFORCE)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsSalesforce salesforce;

  public static final String SERIALIZED_NAME_SERVICE_NOW = "ServiceNow";
  @SerializedName(SERIALIZED_NAME_SERVICE_NOW)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsServiceNow serviceNow;

  public static final String SERIALIZED_NAME_SINGULAR = "Singular";
  @SerializedName(SERIALIZED_NAME_SINGULAR)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsSingular singular;

  public static final String SERIALIZED_NAME_SLACK = "Slack";
  @SerializedName(SERIALIZED_NAME_SLACK)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsSlack slack;

  public static final String SERIALIZED_NAME_SNOWFLAKE = "Snowflake";
  @SerializedName(SERIALIZED_NAME_SNOWFLAKE)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsSnowflake snowflake;

  public static final String SERIALIZED_NAME_TRENDMICRO = "Trendmicro";
  @SerializedName(SERIALIZED_NAME_TRENDMICRO)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsTrendmicro trendmicro;

  public static final String SERIALIZED_NAME_VEEVA = "Veeva";
  @SerializedName(SERIALIZED_NAME_VEEVA)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsVeeva veeva;

  public static final String SERIALIZED_NAME_ZENDESK = "Zendesk";
  @SerializedName(SERIALIZED_NAME_ZENDESK)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsZendesk zendesk;

  public static final String SERIALIZED_NAME_SA_P_O_DATA = "SAPOData";
  @SerializedName(SERIALIZED_NAME_SA_P_O_DATA)
  @javax.annotation.Nullable
  private SAPODataConnectorProfileCredentials saPOData;

  public static final String SERIALIZED_NAME_CUSTOM_CONNECTOR = "CustomConnector";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CONNECTOR)
  @javax.annotation.Nullable
  private CustomConnectorProfileCredentials customConnector;

  public static final String SERIALIZED_NAME_PARDOT = "Pardot";
  @SerializedName(SERIALIZED_NAME_PARDOT)
  @javax.annotation.Nullable
  private ConnectorProfileCredentialsPardot pardot;

  public ConnectorProfileCredentials() {
  }

  public ConnectorProfileCredentials amplitude(@javax.annotation.Nullable ConnectorProfileCredentialsAmplitude amplitude) {
    this.amplitude = amplitude;
    return this;
  }

  /**
   * Get amplitude
   * @return amplitude
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsAmplitude getAmplitude() {
    return amplitude;
  }

  public void setAmplitude(@javax.annotation.Nullable ConnectorProfileCredentialsAmplitude amplitude) {
    this.amplitude = amplitude;
  }


  public ConnectorProfileCredentials datadog(@javax.annotation.Nullable ConnectorProfileCredentialsDatadog datadog) {
    this.datadog = datadog;
    return this;
  }

  /**
   * Get datadog
   * @return datadog
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsDatadog getDatadog() {
    return datadog;
  }

  public void setDatadog(@javax.annotation.Nullable ConnectorProfileCredentialsDatadog datadog) {
    this.datadog = datadog;
  }


  public ConnectorProfileCredentials dynatrace(@javax.annotation.Nullable ConnectorProfileCredentialsDynatrace dynatrace) {
    this.dynatrace = dynatrace;
    return this;
  }

  /**
   * Get dynatrace
   * @return dynatrace
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsDynatrace getDynatrace() {
    return dynatrace;
  }

  public void setDynatrace(@javax.annotation.Nullable ConnectorProfileCredentialsDynatrace dynatrace) {
    this.dynatrace = dynatrace;
  }


  public ConnectorProfileCredentials googleAnalytics(@javax.annotation.Nullable ConnectorProfileCredentialsGoogleAnalytics googleAnalytics) {
    this.googleAnalytics = googleAnalytics;
    return this;
  }

  /**
   * Get googleAnalytics
   * @return googleAnalytics
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsGoogleAnalytics getGoogleAnalytics() {
    return googleAnalytics;
  }

  public void setGoogleAnalytics(@javax.annotation.Nullable ConnectorProfileCredentialsGoogleAnalytics googleAnalytics) {
    this.googleAnalytics = googleAnalytics;
  }


  public ConnectorProfileCredentials honeycode(@javax.annotation.Nullable ConnectorProfileCredentialsHoneycode honeycode) {
    this.honeycode = honeycode;
    return this;
  }

  /**
   * Get honeycode
   * @return honeycode
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsHoneycode getHoneycode() {
    return honeycode;
  }

  public void setHoneycode(@javax.annotation.Nullable ConnectorProfileCredentialsHoneycode honeycode) {
    this.honeycode = honeycode;
  }


  public ConnectorProfileCredentials inforNexus(@javax.annotation.Nullable ConnectorProfileCredentialsInforNexus inforNexus) {
    this.inforNexus = inforNexus;
    return this;
  }

  /**
   * Get inforNexus
   * @return inforNexus
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsInforNexus getInforNexus() {
    return inforNexus;
  }

  public void setInforNexus(@javax.annotation.Nullable ConnectorProfileCredentialsInforNexus inforNexus) {
    this.inforNexus = inforNexus;
  }


  public ConnectorProfileCredentials marketo(@javax.annotation.Nullable ConnectorProfileCredentialsMarketo marketo) {
    this.marketo = marketo;
    return this;
  }

  /**
   * Get marketo
   * @return marketo
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsMarketo getMarketo() {
    return marketo;
  }

  public void setMarketo(@javax.annotation.Nullable ConnectorProfileCredentialsMarketo marketo) {
    this.marketo = marketo;
  }


  public ConnectorProfileCredentials redshift(@javax.annotation.Nullable ConnectorProfileCredentialsRedshift redshift) {
    this.redshift = redshift;
    return this;
  }

  /**
   * Get redshift
   * @return redshift
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsRedshift getRedshift() {
    return redshift;
  }

  public void setRedshift(@javax.annotation.Nullable ConnectorProfileCredentialsRedshift redshift) {
    this.redshift = redshift;
  }


  public ConnectorProfileCredentials salesforce(@javax.annotation.Nullable ConnectorProfileCredentialsSalesforce salesforce) {
    this.salesforce = salesforce;
    return this;
  }

  /**
   * Get salesforce
   * @return salesforce
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsSalesforce getSalesforce() {
    return salesforce;
  }

  public void setSalesforce(@javax.annotation.Nullable ConnectorProfileCredentialsSalesforce salesforce) {
    this.salesforce = salesforce;
  }


  public ConnectorProfileCredentials serviceNow(@javax.annotation.Nullable ConnectorProfileCredentialsServiceNow serviceNow) {
    this.serviceNow = serviceNow;
    return this;
  }

  /**
   * Get serviceNow
   * @return serviceNow
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsServiceNow getServiceNow() {
    return serviceNow;
  }

  public void setServiceNow(@javax.annotation.Nullable ConnectorProfileCredentialsServiceNow serviceNow) {
    this.serviceNow = serviceNow;
  }


  public ConnectorProfileCredentials singular(@javax.annotation.Nullable ConnectorProfileCredentialsSingular singular) {
    this.singular = singular;
    return this;
  }

  /**
   * Get singular
   * @return singular
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsSingular getSingular() {
    return singular;
  }

  public void setSingular(@javax.annotation.Nullable ConnectorProfileCredentialsSingular singular) {
    this.singular = singular;
  }


  public ConnectorProfileCredentials slack(@javax.annotation.Nullable ConnectorProfileCredentialsSlack slack) {
    this.slack = slack;
    return this;
  }

  /**
   * Get slack
   * @return slack
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsSlack getSlack() {
    return slack;
  }

  public void setSlack(@javax.annotation.Nullable ConnectorProfileCredentialsSlack slack) {
    this.slack = slack;
  }


  public ConnectorProfileCredentials snowflake(@javax.annotation.Nullable ConnectorProfileCredentialsSnowflake snowflake) {
    this.snowflake = snowflake;
    return this;
  }

  /**
   * Get snowflake
   * @return snowflake
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsSnowflake getSnowflake() {
    return snowflake;
  }

  public void setSnowflake(@javax.annotation.Nullable ConnectorProfileCredentialsSnowflake snowflake) {
    this.snowflake = snowflake;
  }


  public ConnectorProfileCredentials trendmicro(@javax.annotation.Nullable ConnectorProfileCredentialsTrendmicro trendmicro) {
    this.trendmicro = trendmicro;
    return this;
  }

  /**
   * Get trendmicro
   * @return trendmicro
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsTrendmicro getTrendmicro() {
    return trendmicro;
  }

  public void setTrendmicro(@javax.annotation.Nullable ConnectorProfileCredentialsTrendmicro trendmicro) {
    this.trendmicro = trendmicro;
  }


  public ConnectorProfileCredentials veeva(@javax.annotation.Nullable ConnectorProfileCredentialsVeeva veeva) {
    this.veeva = veeva;
    return this;
  }

  /**
   * Get veeva
   * @return veeva
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsVeeva getVeeva() {
    return veeva;
  }

  public void setVeeva(@javax.annotation.Nullable ConnectorProfileCredentialsVeeva veeva) {
    this.veeva = veeva;
  }


  public ConnectorProfileCredentials zendesk(@javax.annotation.Nullable ConnectorProfileCredentialsZendesk zendesk) {
    this.zendesk = zendesk;
    return this;
  }

  /**
   * Get zendesk
   * @return zendesk
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsZendesk getZendesk() {
    return zendesk;
  }

  public void setZendesk(@javax.annotation.Nullable ConnectorProfileCredentialsZendesk zendesk) {
    this.zendesk = zendesk;
  }


  public ConnectorProfileCredentials saPOData(@javax.annotation.Nullable SAPODataConnectorProfileCredentials saPOData) {
    this.saPOData = saPOData;
    return this;
  }

  /**
   * Get saPOData
   * @return saPOData
   */
  @javax.annotation.Nullable
  public SAPODataConnectorProfileCredentials getSaPOData() {
    return saPOData;
  }

  public void setSaPOData(@javax.annotation.Nullable SAPODataConnectorProfileCredentials saPOData) {
    this.saPOData = saPOData;
  }


  public ConnectorProfileCredentials customConnector(@javax.annotation.Nullable CustomConnectorProfileCredentials customConnector) {
    this.customConnector = customConnector;
    return this;
  }

  /**
   * Get customConnector
   * @return customConnector
   */
  @javax.annotation.Nullable
  public CustomConnectorProfileCredentials getCustomConnector() {
    return customConnector;
  }

  public void setCustomConnector(@javax.annotation.Nullable CustomConnectorProfileCredentials customConnector) {
    this.customConnector = customConnector;
  }


  public ConnectorProfileCredentials pardot(@javax.annotation.Nullable ConnectorProfileCredentialsPardot pardot) {
    this.pardot = pardot;
    return this;
  }

  /**
   * Get pardot
   * @return pardot
   */
  @javax.annotation.Nullable
  public ConnectorProfileCredentialsPardot getPardot() {
    return pardot;
  }

  public void setPardot(@javax.annotation.Nullable ConnectorProfileCredentialsPardot pardot) {
    this.pardot = pardot;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectorProfileCredentials connectorProfileCredentials = (ConnectorProfileCredentials) o;
    return Objects.equals(this.amplitude, connectorProfileCredentials.amplitude) &&
        Objects.equals(this.datadog, connectorProfileCredentials.datadog) &&
        Objects.equals(this.dynatrace, connectorProfileCredentials.dynatrace) &&
        Objects.equals(this.googleAnalytics, connectorProfileCredentials.googleAnalytics) &&
        Objects.equals(this.honeycode, connectorProfileCredentials.honeycode) &&
        Objects.equals(this.inforNexus, connectorProfileCredentials.inforNexus) &&
        Objects.equals(this.marketo, connectorProfileCredentials.marketo) &&
        Objects.equals(this.redshift, connectorProfileCredentials.redshift) &&
        Objects.equals(this.salesforce, connectorProfileCredentials.salesforce) &&
        Objects.equals(this.serviceNow, connectorProfileCredentials.serviceNow) &&
        Objects.equals(this.singular, connectorProfileCredentials.singular) &&
        Objects.equals(this.slack, connectorProfileCredentials.slack) &&
        Objects.equals(this.snowflake, connectorProfileCredentials.snowflake) &&
        Objects.equals(this.trendmicro, connectorProfileCredentials.trendmicro) &&
        Objects.equals(this.veeva, connectorProfileCredentials.veeva) &&
        Objects.equals(this.zendesk, connectorProfileCredentials.zendesk) &&
        Objects.equals(this.saPOData, connectorProfileCredentials.saPOData) &&
        Objects.equals(this.customConnector, connectorProfileCredentials.customConnector) &&
        Objects.equals(this.pardot, connectorProfileCredentials.pardot);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amplitude, datadog, dynatrace, googleAnalytics, honeycode, inforNexus, marketo, redshift, salesforce, serviceNow, singular, slack, snowflake, trendmicro, veeva, zendesk, saPOData, customConnector, pardot);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectorProfileCredentials {\n");
    sb.append("    amplitude: ").append(toIndentedString(amplitude)).append("\n");
    sb.append("    datadog: ").append(toIndentedString(datadog)).append("\n");
    sb.append("    dynatrace: ").append(toIndentedString(dynatrace)).append("\n");
    sb.append("    googleAnalytics: ").append(toIndentedString(googleAnalytics)).append("\n");
    sb.append("    honeycode: ").append(toIndentedString(honeycode)).append("\n");
    sb.append("    inforNexus: ").append(toIndentedString(inforNexus)).append("\n");
    sb.append("    marketo: ").append(toIndentedString(marketo)).append("\n");
    sb.append("    redshift: ").append(toIndentedString(redshift)).append("\n");
    sb.append("    salesforce: ").append(toIndentedString(salesforce)).append("\n");
    sb.append("    serviceNow: ").append(toIndentedString(serviceNow)).append("\n");
    sb.append("    singular: ").append(toIndentedString(singular)).append("\n");
    sb.append("    slack: ").append(toIndentedString(slack)).append("\n");
    sb.append("    snowflake: ").append(toIndentedString(snowflake)).append("\n");
    sb.append("    trendmicro: ").append(toIndentedString(trendmicro)).append("\n");
    sb.append("    veeva: ").append(toIndentedString(veeva)).append("\n");
    sb.append("    zendesk: ").append(toIndentedString(zendesk)).append("\n");
    sb.append("    saPOData: ").append(toIndentedString(saPOData)).append("\n");
    sb.append("    customConnector: ").append(toIndentedString(customConnector)).append("\n");
    sb.append("    pardot: ").append(toIndentedString(pardot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Amplitude");
    openapiFields.add("Datadog");
    openapiFields.add("Dynatrace");
    openapiFields.add("GoogleAnalytics");
    openapiFields.add("Honeycode");
    openapiFields.add("InforNexus");
    openapiFields.add("Marketo");
    openapiFields.add("Redshift");
    openapiFields.add("Salesforce");
    openapiFields.add("ServiceNow");
    openapiFields.add("Singular");
    openapiFields.add("Slack");
    openapiFields.add("Snowflake");
    openapiFields.add("Trendmicro");
    openapiFields.add("Veeva");
    openapiFields.add("Zendesk");
    openapiFields.add("SAPOData");
    openapiFields.add("CustomConnector");
    openapiFields.add("Pardot");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConnectorProfileCredentials
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConnectorProfileCredentials.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConnectorProfileCredentials is not found in the empty JSON string", ConnectorProfileCredentials.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConnectorProfileCredentials.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConnectorProfileCredentials` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Amplitude`
      if (jsonObj.get("Amplitude") != null && !jsonObj.get("Amplitude").isJsonNull()) {
        ConnectorProfileCredentialsAmplitude.validateJsonElement(jsonObj.get("Amplitude"));
      }
      // validate the optional field `Datadog`
      if (jsonObj.get("Datadog") != null && !jsonObj.get("Datadog").isJsonNull()) {
        ConnectorProfileCredentialsDatadog.validateJsonElement(jsonObj.get("Datadog"));
      }
      // validate the optional field `Dynatrace`
      if (jsonObj.get("Dynatrace") != null && !jsonObj.get("Dynatrace").isJsonNull()) {
        ConnectorProfileCredentialsDynatrace.validateJsonElement(jsonObj.get("Dynatrace"));
      }
      // validate the optional field `GoogleAnalytics`
      if (jsonObj.get("GoogleAnalytics") != null && !jsonObj.get("GoogleAnalytics").isJsonNull()) {
        ConnectorProfileCredentialsGoogleAnalytics.validateJsonElement(jsonObj.get("GoogleAnalytics"));
      }
      // validate the optional field `Honeycode`
      if (jsonObj.get("Honeycode") != null && !jsonObj.get("Honeycode").isJsonNull()) {
        ConnectorProfileCredentialsHoneycode.validateJsonElement(jsonObj.get("Honeycode"));
      }
      // validate the optional field `InforNexus`
      if (jsonObj.get("InforNexus") != null && !jsonObj.get("InforNexus").isJsonNull()) {
        ConnectorProfileCredentialsInforNexus.validateJsonElement(jsonObj.get("InforNexus"));
      }
      // validate the optional field `Marketo`
      if (jsonObj.get("Marketo") != null && !jsonObj.get("Marketo").isJsonNull()) {
        ConnectorProfileCredentialsMarketo.validateJsonElement(jsonObj.get("Marketo"));
      }
      // validate the optional field `Redshift`
      if (jsonObj.get("Redshift") != null && !jsonObj.get("Redshift").isJsonNull()) {
        ConnectorProfileCredentialsRedshift.validateJsonElement(jsonObj.get("Redshift"));
      }
      // validate the optional field `Salesforce`
      if (jsonObj.get("Salesforce") != null && !jsonObj.get("Salesforce").isJsonNull()) {
        ConnectorProfileCredentialsSalesforce.validateJsonElement(jsonObj.get("Salesforce"));
      }
      // validate the optional field `ServiceNow`
      if (jsonObj.get("ServiceNow") != null && !jsonObj.get("ServiceNow").isJsonNull()) {
        ConnectorProfileCredentialsServiceNow.validateJsonElement(jsonObj.get("ServiceNow"));
      }
      // validate the optional field `Singular`
      if (jsonObj.get("Singular") != null && !jsonObj.get("Singular").isJsonNull()) {
        ConnectorProfileCredentialsSingular.validateJsonElement(jsonObj.get("Singular"));
      }
      // validate the optional field `Slack`
      if (jsonObj.get("Slack") != null && !jsonObj.get("Slack").isJsonNull()) {
        ConnectorProfileCredentialsSlack.validateJsonElement(jsonObj.get("Slack"));
      }
      // validate the optional field `Snowflake`
      if (jsonObj.get("Snowflake") != null && !jsonObj.get("Snowflake").isJsonNull()) {
        ConnectorProfileCredentialsSnowflake.validateJsonElement(jsonObj.get("Snowflake"));
      }
      // validate the optional field `Trendmicro`
      if (jsonObj.get("Trendmicro") != null && !jsonObj.get("Trendmicro").isJsonNull()) {
        ConnectorProfileCredentialsTrendmicro.validateJsonElement(jsonObj.get("Trendmicro"));
      }
      // validate the optional field `Veeva`
      if (jsonObj.get("Veeva") != null && !jsonObj.get("Veeva").isJsonNull()) {
        ConnectorProfileCredentialsVeeva.validateJsonElement(jsonObj.get("Veeva"));
      }
      // validate the optional field `Zendesk`
      if (jsonObj.get("Zendesk") != null && !jsonObj.get("Zendesk").isJsonNull()) {
        ConnectorProfileCredentialsZendesk.validateJsonElement(jsonObj.get("Zendesk"));
      }
      // validate the optional field `SAPOData`
      if (jsonObj.get("SAPOData") != null && !jsonObj.get("SAPOData").isJsonNull()) {
        SAPODataConnectorProfileCredentials.validateJsonElement(jsonObj.get("SAPOData"));
      }
      // validate the optional field `CustomConnector`
      if (jsonObj.get("CustomConnector") != null && !jsonObj.get("CustomConnector").isJsonNull()) {
        CustomConnectorProfileCredentials.validateJsonElement(jsonObj.get("CustomConnector"));
      }
      // validate the optional field `Pardot`
      if (jsonObj.get("Pardot") != null && !jsonObj.get("Pardot").isJsonNull()) {
        ConnectorProfileCredentialsPardot.validateJsonElement(jsonObj.get("Pardot"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConnectorProfileCredentials.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConnectorProfileCredentials' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConnectorProfileCredentials> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConnectorProfileCredentials.class));

       return (TypeAdapter<T>) new TypeAdapter<ConnectorProfileCredentials>() {
           @Override
           public void write(JsonWriter out, ConnectorProfileCredentials value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConnectorProfileCredentials read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConnectorProfileCredentials given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConnectorProfileCredentials
   * @throws IOException if the JSON string is invalid with respect to ConnectorProfileCredentials
   */
  public static ConnectorProfileCredentials fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConnectorProfileCredentials.class);
  }

  /**
   * Convert an instance of ConnectorProfileCredentials to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

