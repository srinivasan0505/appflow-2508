/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ExecutionRecordExecutionResult;
import org.openapitools.client.model.ExecutionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  Specifies information about the past flow run instances for a given flow. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:42:27.578242+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class ExecutionRecord {
  public static final String SERIALIZED_NAME_EXECUTION_ID = "executionId";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ID)
  @javax.annotation.Nullable
  private String executionId;

  public static final String SERIALIZED_NAME_EXECUTION_STATUS = "executionStatus";
  @SerializedName(SERIALIZED_NAME_EXECUTION_STATUS)
  @javax.annotation.Nullable
  private ExecutionStatus executionStatus;

  public static final String SERIALIZED_NAME_EXECUTION_RESULT = "executionResult";
  @SerializedName(SERIALIZED_NAME_EXECUTION_RESULT)
  @javax.annotation.Nullable
  private ExecutionRecordExecutionResult executionResult;

  public static final String SERIALIZED_NAME_STARTED_AT = "startedAt";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime startedAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "lastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_DATA_PULL_START_TIME = "dataPullStartTime";
  @SerializedName(SERIALIZED_NAME_DATA_PULL_START_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime dataPullStartTime;

  public static final String SERIALIZED_NAME_DATA_PULL_END_TIME = "dataPullEndTime";
  @SerializedName(SERIALIZED_NAME_DATA_PULL_END_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime dataPullEndTime;

  public static final String SERIALIZED_NAME_METADATA_CATALOG_DETAILS = "metadataCatalogDetails";
  @SerializedName(SERIALIZED_NAME_METADATA_CATALOG_DETAILS)
  @javax.annotation.Nullable
  private List metadataCatalogDetails;

  public ExecutionRecord() {
  }

  public ExecutionRecord executionId(@javax.annotation.Nullable String executionId) {
    this.executionId = executionId;
    return this;
  }

  /**
   * Get executionId
   * @return executionId
   */
  @javax.annotation.Nullable
  public String getExecutionId() {
    return executionId;
  }

  public void setExecutionId(@javax.annotation.Nullable String executionId) {
    this.executionId = executionId;
  }


  public ExecutionRecord executionStatus(@javax.annotation.Nullable ExecutionStatus executionStatus) {
    this.executionStatus = executionStatus;
    return this;
  }

  /**
   * Get executionStatus
   * @return executionStatus
   */
  @javax.annotation.Nullable
  public ExecutionStatus getExecutionStatus() {
    return executionStatus;
  }

  public void setExecutionStatus(@javax.annotation.Nullable ExecutionStatus executionStatus) {
    this.executionStatus = executionStatus;
  }


  public ExecutionRecord executionResult(@javax.annotation.Nullable ExecutionRecordExecutionResult executionResult) {
    this.executionResult = executionResult;
    return this;
  }

  /**
   * Get executionResult
   * @return executionResult
   */
  @javax.annotation.Nullable
  public ExecutionRecordExecutionResult getExecutionResult() {
    return executionResult;
  }

  public void setExecutionResult(@javax.annotation.Nullable ExecutionRecordExecutionResult executionResult) {
    this.executionResult = executionResult;
  }


  public ExecutionRecord startedAt(@javax.annotation.Nullable OffsetDateTime startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  /**
   * Get startedAt
   * @return startedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(@javax.annotation.Nullable OffsetDateTime startedAt) {
    this.startedAt = startedAt;
  }


  public ExecutionRecord lastUpdatedAt(@javax.annotation.Nullable OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(@javax.annotation.Nullable OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public ExecutionRecord dataPullStartTime(@javax.annotation.Nullable OffsetDateTime dataPullStartTime) {
    this.dataPullStartTime = dataPullStartTime;
    return this;
  }

  /**
   * Get dataPullStartTime
   * @return dataPullStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataPullStartTime() {
    return dataPullStartTime;
  }

  public void setDataPullStartTime(@javax.annotation.Nullable OffsetDateTime dataPullStartTime) {
    this.dataPullStartTime = dataPullStartTime;
  }


  public ExecutionRecord dataPullEndTime(@javax.annotation.Nullable OffsetDateTime dataPullEndTime) {
    this.dataPullEndTime = dataPullEndTime;
    return this;
  }

  /**
   * Get dataPullEndTime
   * @return dataPullEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDataPullEndTime() {
    return dataPullEndTime;
  }

  public void setDataPullEndTime(@javax.annotation.Nullable OffsetDateTime dataPullEndTime) {
    this.dataPullEndTime = dataPullEndTime;
  }


  public ExecutionRecord metadataCatalogDetails(@javax.annotation.Nullable List metadataCatalogDetails) {
    this.metadataCatalogDetails = metadataCatalogDetails;
    return this;
  }

  /**
   * Get metadataCatalogDetails
   * @return metadataCatalogDetails
   */
  @javax.annotation.Nullable
  public List getMetadataCatalogDetails() {
    return metadataCatalogDetails;
  }

  public void setMetadataCatalogDetails(@javax.annotation.Nullable List metadataCatalogDetails) {
    this.metadataCatalogDetails = metadataCatalogDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecutionRecord executionRecord = (ExecutionRecord) o;
    return Objects.equals(this.executionId, executionRecord.executionId) &&
        Objects.equals(this.executionStatus, executionRecord.executionStatus) &&
        Objects.equals(this.executionResult, executionRecord.executionResult) &&
        Objects.equals(this.startedAt, executionRecord.startedAt) &&
        Objects.equals(this.lastUpdatedAt, executionRecord.lastUpdatedAt) &&
        Objects.equals(this.dataPullStartTime, executionRecord.dataPullStartTime) &&
        Objects.equals(this.dataPullEndTime, executionRecord.dataPullEndTime) &&
        Objects.equals(this.metadataCatalogDetails, executionRecord.metadataCatalogDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(executionId, executionStatus, executionResult, startedAt, lastUpdatedAt, dataPullStartTime, dataPullEndTime, metadataCatalogDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecutionRecord {\n");
    sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
    sb.append("    executionStatus: ").append(toIndentedString(executionStatus)).append("\n");
    sb.append("    executionResult: ").append(toIndentedString(executionResult)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    dataPullStartTime: ").append(toIndentedString(dataPullStartTime)).append("\n");
    sb.append("    dataPullEndTime: ").append(toIndentedString(dataPullEndTime)).append("\n");
    sb.append("    metadataCatalogDetails: ").append(toIndentedString(metadataCatalogDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("executionId");
    openapiFields.add("executionStatus");
    openapiFields.add("executionResult");
    openapiFields.add("startedAt");
    openapiFields.add("lastUpdatedAt");
    openapiFields.add("dataPullStartTime");
    openapiFields.add("dataPullEndTime");
    openapiFields.add("metadataCatalogDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExecutionRecord
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExecutionRecord.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExecutionRecord is not found in the empty JSON string", ExecutionRecord.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExecutionRecord.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExecutionRecord` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `executionId`
      if (jsonObj.get("executionId") != null && !jsonObj.get("executionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("executionId"));
      }
      // validate the optional field `executionStatus`
      if (jsonObj.get("executionStatus") != null && !jsonObj.get("executionStatus").isJsonNull()) {
        ExecutionStatus.validateJsonElement(jsonObj.get("executionStatus"));
      }
      // validate the optional field `executionResult`
      if (jsonObj.get("executionResult") != null && !jsonObj.get("executionResult").isJsonNull()) {
        ExecutionRecordExecutionResult.validateJsonElement(jsonObj.get("executionResult"));
      }
      // validate the optional field `startedAt`
      if (jsonObj.get("startedAt") != null && !jsonObj.get("startedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("startedAt"));
      }
      // validate the optional field `lastUpdatedAt`
      if (jsonObj.get("lastUpdatedAt") != null && !jsonObj.get("lastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedAt"));
      }
      // validate the optional field `dataPullStartTime`
      if (jsonObj.get("dataPullStartTime") != null && !jsonObj.get("dataPullStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("dataPullStartTime"));
      }
      // validate the optional field `dataPullEndTime`
      if (jsonObj.get("dataPullEndTime") != null && !jsonObj.get("dataPullEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("dataPullEndTime"));
      }
      // validate the optional field `metadataCatalogDetails`
      if (jsonObj.get("metadataCatalogDetails") != null && !jsonObj.get("metadataCatalogDetails").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("metadataCatalogDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExecutionRecord.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExecutionRecord' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExecutionRecord> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExecutionRecord.class));

       return (TypeAdapter<T>) new TypeAdapter<ExecutionRecord>() {
           @Override
           public void write(JsonWriter out, ExecutionRecord value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExecutionRecord read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExecutionRecord given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExecutionRecord
   * @throws IOException if the JSON string is invalid with respect to ExecutionRecord
   */
  public static ExecutionRecord fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExecutionRecord.class);
  }

  /**
   * Convert an instance of ExecutionRecord to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

