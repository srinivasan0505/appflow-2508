/*
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.ConnectorType;
import org.openapitools.client.model.DescribeFlowResponseLastRunExecutionDetails;
import org.openapitools.client.model.FlowStatus;
import org.openapitools.client.model.TriggerType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  The properties of the flow, such as its source, destination, trigger type, and so on. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:42:27.578242+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class FlowDefinition {
  public static final String SERIALIZED_NAME_FLOW_ARN = "flowArn";
  @SerializedName(SERIALIZED_NAME_FLOW_ARN)
  @javax.annotation.Nullable
  private String flowArn;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_FLOW_NAME = "flowName";
  @SerializedName(SERIALIZED_NAME_FLOW_NAME)
  @javax.annotation.Nullable
  private String flowName;

  public static final String SERIALIZED_NAME_FLOW_STATUS = "flowStatus";
  @SerializedName(SERIALIZED_NAME_FLOW_STATUS)
  @javax.annotation.Nullable
  private FlowStatus flowStatus;

  public static final String SERIALIZED_NAME_SOURCE_CONNECTOR_TYPE = "sourceConnectorType";
  @SerializedName(SERIALIZED_NAME_SOURCE_CONNECTOR_TYPE)
  @javax.annotation.Nullable
  private ConnectorType sourceConnectorType;

  public static final String SERIALIZED_NAME_SOURCE_CONNECTOR_LABEL = "sourceConnectorLabel";
  @SerializedName(SERIALIZED_NAME_SOURCE_CONNECTOR_LABEL)
  @javax.annotation.Nullable
  private String sourceConnectorLabel;

  public static final String SERIALIZED_NAME_DESTINATION_CONNECTOR_TYPE = "destinationConnectorType";
  @SerializedName(SERIALIZED_NAME_DESTINATION_CONNECTOR_TYPE)
  @javax.annotation.Nullable
  private ConnectorType destinationConnectorType;

  public static final String SERIALIZED_NAME_DESTINATION_CONNECTOR_LABEL = "destinationConnectorLabel";
  @SerializedName(SERIALIZED_NAME_DESTINATION_CONNECTOR_LABEL)
  @javax.annotation.Nullable
  private String destinationConnectorLabel;

  public static final String SERIALIZED_NAME_TRIGGER_TYPE = "triggerType";
  @SerializedName(SERIALIZED_NAME_TRIGGER_TYPE)
  @javax.annotation.Nullable
  private TriggerType triggerType;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "lastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  @javax.annotation.Nullable
  private String createdBy;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "lastUpdatedBy";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  @javax.annotation.Nullable
  private String lastUpdatedBy;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Map tags;

  public static final String SERIALIZED_NAME_LAST_RUN_EXECUTION_DETAILS = "lastRunExecutionDetails";
  @SerializedName(SERIALIZED_NAME_LAST_RUN_EXECUTION_DETAILS)
  @javax.annotation.Nullable
  private DescribeFlowResponseLastRunExecutionDetails lastRunExecutionDetails;

  public FlowDefinition() {
  }

  public FlowDefinition flowArn(@javax.annotation.Nullable String flowArn) {
    this.flowArn = flowArn;
    return this;
  }

  /**
   * Get flowArn
   * @return flowArn
   */
  @javax.annotation.Nullable
  public String getFlowArn() {
    return flowArn;
  }

  public void setFlowArn(@javax.annotation.Nullable String flowArn) {
    this.flowArn = flowArn;
  }


  public FlowDefinition description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public FlowDefinition flowName(@javax.annotation.Nullable String flowName) {
    this.flowName = flowName;
    return this;
  }

  /**
   * Get flowName
   * @return flowName
   */
  @javax.annotation.Nullable
  public String getFlowName() {
    return flowName;
  }

  public void setFlowName(@javax.annotation.Nullable String flowName) {
    this.flowName = flowName;
  }


  public FlowDefinition flowStatus(@javax.annotation.Nullable FlowStatus flowStatus) {
    this.flowStatus = flowStatus;
    return this;
  }

  /**
   * Get flowStatus
   * @return flowStatus
   */
  @javax.annotation.Nullable
  public FlowStatus getFlowStatus() {
    return flowStatus;
  }

  public void setFlowStatus(@javax.annotation.Nullable FlowStatus flowStatus) {
    this.flowStatus = flowStatus;
  }


  public FlowDefinition sourceConnectorType(@javax.annotation.Nullable ConnectorType sourceConnectorType) {
    this.sourceConnectorType = sourceConnectorType;
    return this;
  }

  /**
   * Get sourceConnectorType
   * @return sourceConnectorType
   */
  @javax.annotation.Nullable
  public ConnectorType getSourceConnectorType() {
    return sourceConnectorType;
  }

  public void setSourceConnectorType(@javax.annotation.Nullable ConnectorType sourceConnectorType) {
    this.sourceConnectorType = sourceConnectorType;
  }


  public FlowDefinition sourceConnectorLabel(@javax.annotation.Nullable String sourceConnectorLabel) {
    this.sourceConnectorLabel = sourceConnectorLabel;
    return this;
  }

  /**
   * Get sourceConnectorLabel
   * @return sourceConnectorLabel
   */
  @javax.annotation.Nullable
  public String getSourceConnectorLabel() {
    return sourceConnectorLabel;
  }

  public void setSourceConnectorLabel(@javax.annotation.Nullable String sourceConnectorLabel) {
    this.sourceConnectorLabel = sourceConnectorLabel;
  }


  public FlowDefinition destinationConnectorType(@javax.annotation.Nullable ConnectorType destinationConnectorType) {
    this.destinationConnectorType = destinationConnectorType;
    return this;
  }

  /**
   * Get destinationConnectorType
   * @return destinationConnectorType
   */
  @javax.annotation.Nullable
  public ConnectorType getDestinationConnectorType() {
    return destinationConnectorType;
  }

  public void setDestinationConnectorType(@javax.annotation.Nullable ConnectorType destinationConnectorType) {
    this.destinationConnectorType = destinationConnectorType;
  }


  public FlowDefinition destinationConnectorLabel(@javax.annotation.Nullable String destinationConnectorLabel) {
    this.destinationConnectorLabel = destinationConnectorLabel;
    return this;
  }

  /**
   * Get destinationConnectorLabel
   * @return destinationConnectorLabel
   */
  @javax.annotation.Nullable
  public String getDestinationConnectorLabel() {
    return destinationConnectorLabel;
  }

  public void setDestinationConnectorLabel(@javax.annotation.Nullable String destinationConnectorLabel) {
    this.destinationConnectorLabel = destinationConnectorLabel;
  }


  public FlowDefinition triggerType(@javax.annotation.Nullable TriggerType triggerType) {
    this.triggerType = triggerType;
    return this;
  }

  /**
   * Get triggerType
   * @return triggerType
   */
  @javax.annotation.Nullable
  public TriggerType getTriggerType() {
    return triggerType;
  }

  public void setTriggerType(@javax.annotation.Nullable TriggerType triggerType) {
    this.triggerType = triggerType;
  }


  public FlowDefinition createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public FlowDefinition lastUpdatedAt(@javax.annotation.Nullable OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(@javax.annotation.Nullable OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public FlowDefinition createdBy(@javax.annotation.Nullable String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(@javax.annotation.Nullable String createdBy) {
    this.createdBy = createdBy;
  }


  public FlowDefinition lastUpdatedBy(@javax.annotation.Nullable String lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public String getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(@javax.annotation.Nullable String lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  public FlowDefinition tags(@javax.annotation.Nullable Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Map tags) {
    this.tags = tags;
  }


  public FlowDefinition lastRunExecutionDetails(@javax.annotation.Nullable DescribeFlowResponseLastRunExecutionDetails lastRunExecutionDetails) {
    this.lastRunExecutionDetails = lastRunExecutionDetails;
    return this;
  }

  /**
   * Get lastRunExecutionDetails
   * @return lastRunExecutionDetails
   */
  @javax.annotation.Nullable
  public DescribeFlowResponseLastRunExecutionDetails getLastRunExecutionDetails() {
    return lastRunExecutionDetails;
  }

  public void setLastRunExecutionDetails(@javax.annotation.Nullable DescribeFlowResponseLastRunExecutionDetails lastRunExecutionDetails) {
    this.lastRunExecutionDetails = lastRunExecutionDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowDefinition flowDefinition = (FlowDefinition) o;
    return Objects.equals(this.flowArn, flowDefinition.flowArn) &&
        Objects.equals(this.description, flowDefinition.description) &&
        Objects.equals(this.flowName, flowDefinition.flowName) &&
        Objects.equals(this.flowStatus, flowDefinition.flowStatus) &&
        Objects.equals(this.sourceConnectorType, flowDefinition.sourceConnectorType) &&
        Objects.equals(this.sourceConnectorLabel, flowDefinition.sourceConnectorLabel) &&
        Objects.equals(this.destinationConnectorType, flowDefinition.destinationConnectorType) &&
        Objects.equals(this.destinationConnectorLabel, flowDefinition.destinationConnectorLabel) &&
        Objects.equals(this.triggerType, flowDefinition.triggerType) &&
        Objects.equals(this.createdAt, flowDefinition.createdAt) &&
        Objects.equals(this.lastUpdatedAt, flowDefinition.lastUpdatedAt) &&
        Objects.equals(this.createdBy, flowDefinition.createdBy) &&
        Objects.equals(this.lastUpdatedBy, flowDefinition.lastUpdatedBy) &&
        Objects.equals(this.tags, flowDefinition.tags) &&
        Objects.equals(this.lastRunExecutionDetails, flowDefinition.lastRunExecutionDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flowArn, description, flowName, flowStatus, sourceConnectorType, sourceConnectorLabel, destinationConnectorType, destinationConnectorLabel, triggerType, createdAt, lastUpdatedAt, createdBy, lastUpdatedBy, tags, lastRunExecutionDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowDefinition {\n");
    sb.append("    flowArn: ").append(toIndentedString(flowArn)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flowName: ").append(toIndentedString(flowName)).append("\n");
    sb.append("    flowStatus: ").append(toIndentedString(flowStatus)).append("\n");
    sb.append("    sourceConnectorType: ").append(toIndentedString(sourceConnectorType)).append("\n");
    sb.append("    sourceConnectorLabel: ").append(toIndentedString(sourceConnectorLabel)).append("\n");
    sb.append("    destinationConnectorType: ").append(toIndentedString(destinationConnectorType)).append("\n");
    sb.append("    destinationConnectorLabel: ").append(toIndentedString(destinationConnectorLabel)).append("\n");
    sb.append("    triggerType: ").append(toIndentedString(triggerType)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    lastRunExecutionDetails: ").append(toIndentedString(lastRunExecutionDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("flowArn");
    openapiFields.add("description");
    openapiFields.add("flowName");
    openapiFields.add("flowStatus");
    openapiFields.add("sourceConnectorType");
    openapiFields.add("sourceConnectorLabel");
    openapiFields.add("destinationConnectorType");
    openapiFields.add("destinationConnectorLabel");
    openapiFields.add("triggerType");
    openapiFields.add("createdAt");
    openapiFields.add("lastUpdatedAt");
    openapiFields.add("createdBy");
    openapiFields.add("lastUpdatedBy");
    openapiFields.add("tags");
    openapiFields.add("lastRunExecutionDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlowDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlowDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlowDefinition is not found in the empty JSON string", FlowDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlowDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlowDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `flowArn`
      if (jsonObj.get("flowArn") != null && !jsonObj.get("flowArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("flowArn"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `flowName`
      if (jsonObj.get("flowName") != null && !jsonObj.get("flowName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("flowName"));
      }
      // validate the optional field `flowStatus`
      if (jsonObj.get("flowStatus") != null && !jsonObj.get("flowStatus").isJsonNull()) {
        FlowStatus.validateJsonElement(jsonObj.get("flowStatus"));
      }
      // validate the optional field `sourceConnectorType`
      if (jsonObj.get("sourceConnectorType") != null && !jsonObj.get("sourceConnectorType").isJsonNull()) {
        ConnectorType.validateJsonElement(jsonObj.get("sourceConnectorType"));
      }
      // validate the optional field `sourceConnectorLabel`
      if (jsonObj.get("sourceConnectorLabel") != null && !jsonObj.get("sourceConnectorLabel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("sourceConnectorLabel"));
      }
      // validate the optional field `destinationConnectorType`
      if (jsonObj.get("destinationConnectorType") != null && !jsonObj.get("destinationConnectorType").isJsonNull()) {
        ConnectorType.validateJsonElement(jsonObj.get("destinationConnectorType"));
      }
      // validate the optional field `destinationConnectorLabel`
      if (jsonObj.get("destinationConnectorLabel") != null && !jsonObj.get("destinationConnectorLabel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("destinationConnectorLabel"));
      }
      // validate the optional field `triggerType`
      if (jsonObj.get("triggerType") != null && !jsonObj.get("triggerType").isJsonNull()) {
        TriggerType.validateJsonElement(jsonObj.get("triggerType"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `lastUpdatedAt`
      if (jsonObj.get("lastUpdatedAt") != null && !jsonObj.get("lastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedAt"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `lastUpdatedBy`
      if (jsonObj.get("lastUpdatedBy") != null && !jsonObj.get("lastUpdatedBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("lastUpdatedBy"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `lastRunExecutionDetails`
      if (jsonObj.get("lastRunExecutionDetails") != null && !jsonObj.get("lastRunExecutionDetails").isJsonNull()) {
        DescribeFlowResponseLastRunExecutionDetails.validateJsonElement(jsonObj.get("lastRunExecutionDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlowDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlowDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlowDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlowDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<FlowDefinition>() {
           @Override
           public void write(JsonWriter out, FlowDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlowDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlowDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlowDefinition
   * @throws IOException if the JSON string is invalid with respect to FlowDefinition
   */
  public static FlowDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlowDefinition.class);
  }

  /**
   * Convert an instance of FlowDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

